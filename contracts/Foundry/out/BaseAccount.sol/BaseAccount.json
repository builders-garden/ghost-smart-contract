{
  "abi": [
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "missingAccountFunds",
          "type": "uint256"
        }
      ],
      "name": "validateUserOp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "validationData",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "entryPoint()": "b0d691fe",
    "getNonce()": "d087d288",
    "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "3a871cdd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"entryPoint()\":{\"notice\":\"return the entryPoint used by this account. subclass should return the current entryPoint used by this account.\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\"}},\"notice\":\"Basic account implementation. this contract provides the basic logic for implementing the IAccount interface  - validateUserOp specific account implementation should inherit it and provide the account-specific logic\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/thirdweb-smartaccount/prebuilts/account/utils/BaseAccount.sol\":\"BaseAccount\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ccip/=lib/ccip/contracts/\",\":@chainlink/=lib/chainlink/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@thirdweb/=lib/thirdweb-smartaccount/\",\":ccip/=lib/ccip/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":std/=lib/forge-std/src/\",\":thirdweb-smartaccount/=lib/thirdweb-smartaccount/\"]},\"sources\":{\"lib/thirdweb-smartaccount/prebuilts/account/interface/IAccount.sol\":{\"keccak256\":\"0x6818fcb4cf11e07f58fbe22639f7394fcebcb8c0864054530586db4883f60d12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://39eae35b1a7e278708a9338416feb33cc297acd5c68238c07d073aac9d7dc5bf\",\"dweb:/ipfs/QmXhRUDvy5aJSfjgEdBMXVKtbwV4qzK3YAZ7Q6oYdteSaa\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/IAggregator.sol\":{\"keccak256\":\"0x65c36f62d810efae7a4ecef734af489dea64cfe748a48cc6f8d9bf82a16e6d05\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://13470a12a17423b28000ca4a76eb4982f11c73b1d2406a7a0fd9303b36b0ee09\",\"dweb:/ipfs/QmX7D7bfBs4BSzMmNcHHmjDAc1pd8gfeUU4YCQEuNaVXWf\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/IEntrypoint.sol\":{\"keccak256\":\"0x4a569d4e65a1ed3a078e97f797109450e58c1292f29c3d21454bcb2fa74c85ae\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://07ea99d720b12cc76a921e0a9ed8af0cca864988e07f9889f70f5aa3c819939c\",\"dweb:/ipfs/QmZWcMnqLjh6vrPZUdNX7jRTsf1kCeYfCfuZXKyfGXcRX4\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/INonceManager.sol\":{\"keccak256\":\"0xf014cc5365b848cca89d34a77182f338d8636589c1c9ce56b9658ee630c1e0ea\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://684a601f44891f6beb2b065c68bdf39af0eb2db9ec28e7190d1ffbd200bbb0db\",\"dweb:/ipfs/QmYJ4cEiqdNXkX7JsZhDSCkyUYybK7rdJBCq869uHdZUwz\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/IStakeManager.sol\":{\"keccak256\":\"0x75b71b18dd6e412f9f594817eda570649f7abc783b274ce21193cb40fd5b1579\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://c949706e6ac2f43baf668e57533b6a7322ce0bdd4657b06b930f7894d1121abe\",\"dweb:/ipfs/QmUv3jEdTgFrSrGQ8MN7HuoJNHJ8GRnxRmiavS8ucw2UZW\"]},\"lib/thirdweb-smartaccount/prebuilts/account/utils/BaseAccount.sol\":{\"keccak256\":\"0xc82bec83e155692fb6bf3233dc1755b4629eb56d5a0a1a40076e09f193e15984\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f5acbdb32caf9d81171f42a149dc67da7ed2117d265484f50c039101c5460979\",\"dweb:/ipfs/QmXJjs3sTsPZbQXphAM6izfRDiirfds5eyJnHFpJ52Zabk\"]},\"lib/thirdweb-smartaccount/prebuilts/account/utils/Helpers.sol\":{\"keccak256\":\"0x3f33b2981f9626f6b2c6325d0e91c61c794b9d43934a7a182051499c4bc5bfc5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3af035533c3c4b23f70e462bf897eaa4043486cce678cb729c431d4d844344f1\",\"dweb:/ipfs/QmcFWkTsfK2adD9tUyT8KXK3AQbpnqWny4T6fY1W9H492m\"]},\"lib/thirdweb-smartaccount/prebuilts/account/utils/UserOperation.sol\":{\"keccak256\":\"0x569b831a77ad1c9f2681bd7162d42bfb34992f7bed6dc3344bdccb444ba81b91\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://806c8f67827d4280853e413b43fa6937fbe0749ebf9e4983bfd20335018cfd3d\",\"dweb:/ipfs/QmNS7TCDgisvtiTSot5CoYdA3mbEzDum4hjqEQ27PhMQJF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "missingAccountFunds",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateUserOp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "entryPoint()": {
            "notice": "return the entryPoint used by this account. subclass should return the current entryPoint used by this account."
          },
          "getNonce()": {
            "notice": "Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"
          },
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ccip/=lib/ccip/contracts/",
        ":@chainlink/=lib/chainlink/contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@thirdweb/=lib/thirdweb-smartaccount/",
        ":ccip/=lib/ccip/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/",
        ":chainlink/=lib/chainlink/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":std/=lib/forge-std/src/",
        ":thirdweb-smartaccount/=lib/thirdweb-smartaccount/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/thirdweb-smartaccount/prebuilts/account/utils/BaseAccount.sol": "BaseAccount"
      },
      "libraries": {}
    },
    "sources": {
      "lib/thirdweb-smartaccount/prebuilts/account/interface/IAccount.sol": {
        "keccak256": "0x6818fcb4cf11e07f58fbe22639f7394fcebcb8c0864054530586db4883f60d12",
        "urls": [
          "bzz-raw://39eae35b1a7e278708a9338416feb33cc297acd5c68238c07d073aac9d7dc5bf",
          "dweb:/ipfs/QmXhRUDvy5aJSfjgEdBMXVKtbwV4qzK3YAZ7Q6oYdteSaa"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/IAggregator.sol": {
        "keccak256": "0x65c36f62d810efae7a4ecef734af489dea64cfe748a48cc6f8d9bf82a16e6d05",
        "urls": [
          "bzz-raw://13470a12a17423b28000ca4a76eb4982f11c73b1d2406a7a0fd9303b36b0ee09",
          "dweb:/ipfs/QmX7D7bfBs4BSzMmNcHHmjDAc1pd8gfeUU4YCQEuNaVXWf"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/IEntrypoint.sol": {
        "keccak256": "0x4a569d4e65a1ed3a078e97f797109450e58c1292f29c3d21454bcb2fa74c85ae",
        "urls": [
          "bzz-raw://07ea99d720b12cc76a921e0a9ed8af0cca864988e07f9889f70f5aa3c819939c",
          "dweb:/ipfs/QmZWcMnqLjh6vrPZUdNX7jRTsf1kCeYfCfuZXKyfGXcRX4"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/INonceManager.sol": {
        "keccak256": "0xf014cc5365b848cca89d34a77182f338d8636589c1c9ce56b9658ee630c1e0ea",
        "urls": [
          "bzz-raw://684a601f44891f6beb2b065c68bdf39af0eb2db9ec28e7190d1ffbd200bbb0db",
          "dweb:/ipfs/QmYJ4cEiqdNXkX7JsZhDSCkyUYybK7rdJBCq869uHdZUwz"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/IStakeManager.sol": {
        "keccak256": "0x75b71b18dd6e412f9f594817eda570649f7abc783b274ce21193cb40fd5b1579",
        "urls": [
          "bzz-raw://c949706e6ac2f43baf668e57533b6a7322ce0bdd4657b06b930f7894d1121abe",
          "dweb:/ipfs/QmUv3jEdTgFrSrGQ8MN7HuoJNHJ8GRnxRmiavS8ucw2UZW"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/utils/BaseAccount.sol": {
        "keccak256": "0xc82bec83e155692fb6bf3233dc1755b4629eb56d5a0a1a40076e09f193e15984",
        "urls": [
          "bzz-raw://f5acbdb32caf9d81171f42a149dc67da7ed2117d265484f50c039101c5460979",
          "dweb:/ipfs/QmXJjs3sTsPZbQXphAM6izfRDiirfds5eyJnHFpJ52Zabk"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/utils/Helpers.sol": {
        "keccak256": "0x3f33b2981f9626f6b2c6325d0e91c61c794b9d43934a7a182051499c4bc5bfc5",
        "urls": [
          "bzz-raw://3af035533c3c4b23f70e462bf897eaa4043486cce678cb729c431d4d844344f1",
          "dweb:/ipfs/QmcFWkTsfK2adD9tUyT8KXK3AQbpnqWny4T6fY1W9H492m"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/utils/UserOperation.sol": {
        "keccak256": "0x569b831a77ad1c9f2681bd7162d42bfb34992f7bed6dc3344bdccb444ba81b91",
        "urls": [
          "bzz-raw://806c8f67827d4280853e413b43fa6937fbe0749ebf9e4983bfd20335018cfd3d",
          "dweb:/ipfs/QmNS7TCDgisvtiTSot5CoYdA3mbEzDum4hjqEQ27PhMQJF"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/thirdweb-smartaccount/prebuilts/account/utils/BaseAccount.sol",
    "id": 35535,
    "exportedSymbols": {
      "BaseAccount": [
        35534
      ],
      "IAccount": [
        33798
      ],
      "IAggregator": [
        33938
      ],
      "IEntryPoint": [
        34144
      ],
      "INonceManager": [
        34163
      ],
      "IStakeManager": [
        34269
      ],
      "UserOperation": [
        36241
      ],
      "UserOperationLib": [
        36411
      ],
      "ValidationData": [
        35984
      ],
      "_intersectTimeRange": [
        36128
      ],
      "_packValidationData": [
        36165,
        36203
      ],
      "_parseValidationData": [
        36043
      ],
      "calldataKeccak": [
        36213
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:4768:71",
    "nodes": [
      {
        "id": 35394,
        "nodeType": "PragmaDirective",
        "src": "37:24:71",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 35395,
        "nodeType": "ImportDirective",
        "src": "151:35:71",
        "nodes": [],
        "absolutePath": "lib/thirdweb-smartaccount/prebuilts/account/interface/IAccount.sol",
        "file": "../interface/IAccount.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35535,
        "sourceUnit": 33799,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35396,
        "nodeType": "ImportDirective",
        "src": "188:38:71",
        "nodes": [],
        "absolutePath": "lib/thirdweb-smartaccount/prebuilts/account/interface/IEntrypoint.sol",
        "file": "../interface/IEntrypoint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35535,
        "sourceUnit": 34145,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35397,
        "nodeType": "ImportDirective",
        "src": "228:23:71",
        "nodes": [],
        "absolutePath": "lib/thirdweb-smartaccount/prebuilts/account/utils/Helpers.sol",
        "file": "./Helpers.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35535,
        "sourceUnit": 36214,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35534,
        "nodeType": "ContractDefinition",
        "src": "493:4310:71",
        "nodes": [
          {
            "id": 35404,
            "nodeType": "UsingForDirective",
            "src": "542:41:71",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 35401,
              "name": "UserOperationLib",
              "nameLocations": [
                "548:16:71"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36411,
              "src": "548:16:71"
            },
            "typeName": {
              "id": 35403,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 35402,
                "name": "UserOperation",
                "nameLocations": [
                  "569:13:71"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36241,
                "src": "569:13:71"
              },
              "referencedDeclaration": 36241,
              "src": "569:13:71",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UserOperation_$36241_storage_ptr",
                "typeString": "struct UserOperation"
              }
            }
          },
          {
            "id": 35407,
            "nodeType": "VariableDeclaration",
            "src": "714:51:71",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SIG_VALIDATION_FAILED",
            "nameLocation": "740:21:71",
            "scope": 35534,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35405,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "714:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 35406,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "764:1:71",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "id": 35424,
            "nodeType": "FunctionDefinition",
            "src": "960:123:71",
            "nodes": [],
            "body": {
              "id": 35423,
              "nodeType": "Block",
              "src": "1018:65:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 35418,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1066:4:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseAccount_$35534",
                              "typeString": "contract BaseAccount"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseAccount_$35534",
                              "typeString": "contract BaseAccount"
                            }
                          ],
                          "id": 35417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1058:7:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 35416,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1058:7:71",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 35419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1058:13:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 35420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1073:1:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 35413,
                          "name": "entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35431,
                          "src": "1036:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$34144_$",
                            "typeString": "function () view returns (contract IEntryPoint)"
                          }
                        },
                        "id": 35414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1036:12:71",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntryPoint_$34144",
                          "typeString": "contract IEntryPoint"
                        }
                      },
                      "id": 35415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1049:8:71",
                      "memberName": "getNonce",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34156,
                      "src": "1036:21:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint192_$returns$_t_uint256_$",
                        "typeString": "function (address,uint192) view external returns (uint256)"
                      }
                    },
                    "id": 35421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1036:39:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35412,
                  "id": 35422,
                  "nodeType": "Return",
                  "src": "1029:46:71"
                }
              ]
            },
            "documentation": {
              "id": 35408,
              "nodeType": "StructuredDocumentation",
              "src": "774:180:71",
              "text": " Return the account nonce.\n This method returns the next sequential nonce.\n For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"
            },
            "functionSelector": "d087d288",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNonce",
            "nameLocation": "969:8:71",
            "parameters": {
              "id": 35409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "977:2:71"
            },
            "returnParameters": {
              "id": 35412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35411,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35424,
                  "src": "1009:7:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1009:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1008:9:71"
            },
            "scope": 35534,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 35431,
            "nodeType": "FunctionDefinition",
            "src": "1237:64:71",
            "nodes": [],
            "documentation": {
              "id": 35425,
              "nodeType": "StructuredDocumentation",
              "src": "1091:140:71",
              "text": " return the entryPoint used by this account.\n subclass should return the current entryPoint used by this account."
            },
            "functionSelector": "b0d691fe",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "entryPoint",
            "nameLocation": "1246:10:71",
            "parameters": {
              "id": 35426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1256:2:71"
            },
            "returnParameters": {
              "id": 35430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35429,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35431,
                  "src": "1288:11:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$34144",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 35428,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35427,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "1288:11:71"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34144,
                      "src": "1288:11:71"
                    },
                    "referencedDeclaration": 34144,
                    "src": "1288:11:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$34144",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1287:13:71"
            },
            "scope": 35534,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 35465,
            "nodeType": "FunctionDefinition",
            "src": "1497:388:71",
            "nodes": [],
            "body": {
              "id": 35464,
              "nodeType": "Block",
              "src": "1694:191:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 35445,
                      "name": "_requireFromEntryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35482,
                      "src": "1705:22:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 35446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1705:24:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35447,
                  "nodeType": "ExpressionStatement",
                  "src": "1705:24:71"
                },
                {
                  "expression": {
                    "id": 35453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35448,
                      "name": "validationData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35443,
                      "src": "1740:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 35450,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35435,
                          "src": "1776:6:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$36241_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        {
                          "id": 35451,
                          "name": "userOpHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35437,
                          "src": "1784:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_UserOperation_$36241_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 35449,
                        "name": "_validateSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35493,
                        "src": "1757:18:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UserOperation_$36241_calldata_ptr_$_t_bytes32_$returns$_t_uint256_$",
                          "typeString": "function (struct UserOperation calldata,bytes32) returns (uint256)"
                        }
                      },
                      "id": 35452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1757:38:71",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1740:55:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 35454,
                  "nodeType": "ExpressionStatement",
                  "src": "1740:55:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 35456,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35435,
                          "src": "1821:6:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$36241_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 35457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1828:5:71",
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36222,
                        "src": "1821:12:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35455,
                      "name": "_validateNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35500,
                      "src": "1806:14:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 35458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1806:28:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35459,
                  "nodeType": "ExpressionStatement",
                  "src": "1806:28:71"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35461,
                        "name": "missingAccountFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35439,
                        "src": "1857:19:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35460,
                      "name": "_payPrefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35533,
                      "src": "1845:11:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 35462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1845:32:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35463,
                  "nodeType": "ExpressionStatement",
                  "src": "1845:32:71"
                }
              ]
            },
            "baseFunctions": [
              33797
            ],
            "documentation": {
              "id": 35432,
              "nodeType": "StructuredDocumentation",
              "src": "1309:182:71",
              "text": " Validate user's signature and nonce.\n subclass doesn't need to override this method. Instead, it should override the specific internal validation methods."
            },
            "functionSelector": "3a871cdd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateUserOp",
            "nameLocation": "1506:14:71",
            "overrides": {
              "id": 35441,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1652:8:71"
            },
            "parameters": {
              "id": 35440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35435,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "1554:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 35465,
                  "src": "1531:29:71",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$36241_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 35434,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35433,
                      "name": "UserOperation",
                      "nameLocations": [
                        "1531:13:71"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36241,
                      "src": "1531:13:71"
                    },
                    "referencedDeclaration": 36241,
                    "src": "1531:13:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$36241_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35437,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "1579:10:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 35465,
                  "src": "1571:18:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35436,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35439,
                  "mutability": "mutable",
                  "name": "missingAccountFunds",
                  "nameLocation": "1608:19:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 35465,
                  "src": "1600:27:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35438,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1600:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1520:114:71"
            },
            "returnParameters": {
              "id": 35444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35443,
                  "mutability": "mutable",
                  "name": "validationData",
                  "nameLocation": "1678:14:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 35465,
                  "src": "1670:22:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1670:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1669:24:71"
            },
            "scope": 35534,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 35482,
            "nodeType": "FunctionDefinition",
            "src": "1971:151:71",
            "nodes": [],
            "body": {
              "id": 35481,
              "nodeType": "Block",
              "src": "2027:95:71",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 35470,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2046:3:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 35471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2050:6:71",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2046:10:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 35474,
                                "name": "entryPoint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35431,
                                "src": "2068:10:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$34144_$",
                                  "typeString": "function () view returns (contract IEntryPoint)"
                                }
                              },
                              "id": 35475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2068:12:71",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IEntryPoint_$34144",
                                "typeString": "contract IEntryPoint"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IEntryPoint_$34144",
                                "typeString": "contract IEntryPoint"
                              }
                            ],
                            "id": 35473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2060:7:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 35472,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2060:7:71",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 35476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2060:21:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2046:35:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6163636f756e743a206e6f742066726f6d20456e747279506f696e74",
                        "id": 35478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2083:30:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50",
                          "typeString": "literal_string \"account: not from EntryPoint\""
                        },
                        "value": "account: not from EntryPoint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50",
                          "typeString": "literal_string \"account: not from EntryPoint\""
                        }
                      ],
                      "id": 35469,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2038:7:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2038:76:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35480,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:76:71"
                }
              ]
            },
            "documentation": {
              "id": 35466,
              "nodeType": "StructuredDocumentation",
              "src": "1893:72:71",
              "text": " ensure the request comes from the known entrypoint."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireFromEntryPoint",
            "nameLocation": "1980:22:71",
            "parameters": {
              "id": 35467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2002:2:71"
            },
            "returnParameters": {
              "id": 35468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2027:0:71"
            },
            "scope": 35534,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 35493,
            "nodeType": "FunctionDefinition",
            "src": "3052:154:71",
            "nodes": [],
            "documentation": {
              "id": 35483,
              "nodeType": "StructuredDocumentation",
              "src": "2130:916:71",
              "text": " validate the signature is valid for this message.\n @param userOp validate the userOp.signature field\n @param userOpHash convenient field: the hash of the request, to check the signature against\n          (also hashes the entrypoint and chain id)\n @return validationData signature and time-range of this operation\n      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n         otherwise, an address of an \"authorizer\" contract.\n      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n      <6-byte> validAfter - first timestamp this operation is valid\n      If the account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n      Note that the validation code cannot use block.timestamp (or block.number) directly."
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_validateSignature",
            "nameLocation": "3061:18:71",
            "parameters": {
              "id": 35489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35486,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "3113:6:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 35493,
                  "src": "3090:29:71",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$36241_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 35485,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35484,
                      "name": "UserOperation",
                      "nameLocations": [
                        "3090:13:71"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36241,
                      "src": "3090:13:71"
                    },
                    "referencedDeclaration": 36241,
                    "src": "3090:13:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$36241_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35488,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "3138:10:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 35493,
                  "src": "3130:18:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35487,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3130:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3079:76:71"
            },
            "returnParameters": {
              "id": 35492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35491,
                  "mutability": "mutable",
                  "name": "validationData",
                  "nameLocation": "3190:14:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 35493,
                  "src": "3182:22:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3182:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3181:24:71"
            },
            "scope": 35534,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 35500,
            "nodeType": "FunctionDefinition",
            "src": "3875:63:71",
            "nodes": [],
            "body": {
              "id": 35499,
              "nodeType": "Block",
              "src": "3936:2:71",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 35494,
              "nodeType": "StructuredDocumentation",
              "src": "3214:655:71",
              "text": " Validate the nonce of the UserOperation.\n This method may validate the nonce requirement of this account.\n e.g.\n To limit the nonce to use sequenced UserOps only (no \"out of order\" UserOps):\n      `require(nonce < type(uint64).max)`\n For a hypothetical account that *requires* the nonce to be out-of-order:\n      `require(nonce & type(uint64).max == 0)`\n The actual nonce uniqueness is managed by the EntryPoint, and thus no other\n action is needed by the account itself.\n @param nonce to validate\n solhint-disable-next-line no-empty-blocks"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateNonce",
            "nameLocation": "3884:14:71",
            "parameters": {
              "id": 35497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35496,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "3907:5:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 35500,
                  "src": "3899:13:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35495,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3899:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3898:15:71"
            },
            "returnParameters": {
              "id": 35498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3936:0:71"
            },
            "scope": 35534,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 35533,
            "nodeType": "FunctionDefinition",
            "src": "4456:344:71",
            "nodes": [],
            "body": {
              "id": 35532,
              "nodeType": "Block",
              "src": "4523:277:71",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 35508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 35506,
                      "name": "missingAccountFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35503,
                      "src": "4538:19:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 35507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4561:1:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4538:24:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35531,
                  "nodeType": "IfStatement",
                  "src": "4534:259:71",
                  "trueBody": {
                    "id": 35530,
                    "nodeType": "Block",
                    "src": "4564:229:71",
                    "statements": [
                      {
                        "assignments": [
                          35510,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 35510,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "4585:7:71",
                            "nodeType": "VariableDeclaration",
                            "scope": 35530,
                            "src": "4580:12:71",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 35509,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4580:4:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 35526,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 35524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4677:2:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 35513,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4606:3:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 35514,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4610:6:71",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4606:10:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 35512,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4598:8:71",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 35511,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4598:8:71",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 35515,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4598:19:71",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 35516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4618:4:71",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "4598:24:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 35523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value",
                              "gas"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 35517,
                                "name": "missingAccountFunds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35503,
                                "src": "4631:19:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 35520,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4662:7:71",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 35519,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4662:7:71",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      }
                                    ],
                                    "id": 35518,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "4657:4:71",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 35521,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4657:13:71",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_uint256",
                                    "typeString": "type(uint256)"
                                  }
                                },
                                "id": 35522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4671:3:71",
                                "memberName": "max",
                                "nodeType": "MemberAccess",
                                "src": "4657:17:71",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "4598:78:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 35525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4598:82:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4579:101:71"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 35527,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35510,
                              "src": "4696:7:71",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 35528,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4695:9:71",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 35529,
                        "nodeType": "ExpressionStatement",
                        "src": "4695:9:71"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 35501,
              "nodeType": "StructuredDocumentation",
              "src": "3946:504:71",
              "text": " sends to the entrypoint (msg.sender) the missing funds for this transaction.\n subclass MAY override this method for better funds management\n (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n it will not be required to send again)\n @param missingAccountFunds the minimum value this method should send the entrypoint.\n  this value MAY be zero, in case there is enough deposit, or the userOp has a paymaster."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payPrefund",
            "nameLocation": "4465:11:71",
            "parameters": {
              "id": 35504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35503,
                  "mutability": "mutable",
                  "name": "missingAccountFunds",
                  "nameLocation": "4485:19:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 35533,
                  "src": "4477:27:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4477:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4476:29:71"
            },
            "returnParameters": {
              "id": 35505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4523:0:71"
            },
            "scope": 35534,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 35399,
              "name": "IAccount",
              "nameLocations": [
                "526:8:71"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33798,
              "src": "526:8:71"
            },
            "id": 35400,
            "nodeType": "InheritanceSpecifier",
            "src": "526:8:71"
          }
        ],
        "canonicalName": "BaseAccount",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 35398,
          "nodeType": "StructuredDocumentation",
          "src": "255:236:71",
          "text": " Basic account implementation.\n this contract provides the basic logic for implementing the IAccount interface  - validateUserOp\n specific account implementation should inherit it and provide the account-specific logic"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          35534,
          33798
        ],
        "name": "BaseAccount",
        "nameLocation": "511:11:71",
        "scope": 35535,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 71
}