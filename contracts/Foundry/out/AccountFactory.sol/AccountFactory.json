{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "contract IEntryPoint",
          "name": "_entrypoint",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "OnlySimulatedBackend",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "accountAdmin",
          "type": "address"
        }
      ],
      "name": "AccountCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "SignerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "SignerRemoved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accountImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "createAccount",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entrypoint",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_end",
          "type": "uint256"
        }
      ],
      "name": "getAccounts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "getAccountsOfSigner",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_adminSigner",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllAccounts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_upkeep",
          "type": "address"
        }
      ],
      "name": "initializeUpkeepAndRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "onRegister",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "onSignerAdded",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "onSignerRemoved",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAccounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x600680546001600160a01b03191673c4bf5cbdabe595361438f8c6a187bdc330539c601790556101006040527394a9d9ac8a22534e3faca9f4e7f2e2cf85d5e4c860c090815273aa8e23fb1079ea71e0a56f48a2aa51851d8433d060e0526200006d906007906002620002da565b503480156200007b57600080fd5b5060405162007d4738038062007d478339810160408190526200009e9162000382565b8030604051620000ae9062000344565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015620000e2573d6000803e3d6000fd5b506001600160a01b03908116608052811660a052620001036000836200010b565b505062000409565b62000117828262000127565b620001238282620001a1565b5050565b60008281527f0a7b0f5c59907924802379ebe98cdc23e2ee7820f63d30126e10b3752010e500602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000620001ad6200026f565b6000848152602091909152604090205490506001620001cb6200026f565b6000858152602091909152604081208054909190620001ec908490620003d7565b90915550829050620001fd6200026f565b6000858152602091825260408082208583526001019092522080546001600160a01b0319166001600160a01b0392909216919091179055806200023f6200026f565b6000948552602090815260408086206001600160a01b03909516865260029094019052919092205550565b905090565b60006200026a60008060ff19620002a860017f0c4ba382c0009cf238e4c1ca1a52f51c61e6248a70bdfb34e5ed49d5578a5c0c620003f3565b604051602001620002bb91815260200190565b60408051601f1981840301815291905280516020909101201692915050565b82805482825590600052602060002090810192821562000332579160200282015b828111156200033257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002fb565b506200034092915062000352565b5090565b614e458062002f0283390190565b5b8082111562000340576000815560010162000353565b6001600160a01b03811681146200037f57600080fd5b50565b600080604083850312156200039657600080fd5b8251620003a38162000369565b6020840151909250620003b68162000369565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b80820180821115620003ed57620003ed620003c1565b92915050565b81810381811115620003ed57620003ed620003c1565b60805160a051612ab76200044b600039600081816103840152610e790152600081816101f90152818161086a01528181610dd501526111120152612ab76000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c806391d14854116100f9578063ac9650d811610097578063d547741f11610071578063d547741f146103ff578063d8fd8f4414610412578063e68a7c3b14610425578063e8a3d4851461043857600080fd5b8063ac9650d8146103b9578063c3c5a547146103d9578063ca15c873146103ec57600080fd5b8063a217fddf116100d3578063a217fddf14610364578063a32fa5b31461036c578063a65d69d41461037f578063a9709e15146103a657600080fd5b806391d148541461031b5780639387a3801461033e578063938e3d7b1461035157600080fd5b806336568abe116101665780636e04ff0d116101405780636e04ff0d146102c157806383a03f8c146102e25780638878ed33146102f55780639010d07c1461030857600080fd5b806336568abe146102935780634585e33b146102a657806358451f97146102b957600080fd5b806308e93d0a146101ae5780630b61e12b146101cc5780630e6254fd146101e157806311464fbe146101f4578063248a9ca3146102335780632f2ff15d14610280575b600080fd5b6101b661044d565b6040516101c39190612107565b60405180910390f35b6101df6101da36600461212f565b61045e565b005b6101b66101ef36600461215b565b6104ff565b61021b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101c3565b610272610241366004612178565b60009081527f0a7b0f5c59907924802379ebe98cdc23e2ee7820f63d30126e10b3752010e501602052604090205490565b6040519081526020016101c3565b6101df61028e366004612191565b610529565b6101df6102a1366004612191565b6105e2565b6101df6102b4366004612209565b610644565b6102726107af565b6102d46102cf366004612209565b6107bb565b6040516101c392919061229a565b6101df6102f0366004612178565b6107d2565b61021b6103033660046122b5565b610820565b61021b610316366004612309565b61089a565b61032e610329366004612191565b6109a8565b60405190151581526020016101c3565b6101df61034c36600461212f565b6109e0565b6101df61035f366004612371565b610a77565b610272600081565b61032e61037a366004612191565b610ac8565b61021b7f000000000000000000000000000000000000000000000000000000000000000081565b6101df6103b436600461215b565b610b39565b6103cc6103c7366004612405565b610baa565b6040516101c39190612479565b61032e6103e736600461215b565b610d10565b6102726103fa366004612178565b610d1c565b6101df61040d366004612191565b610db9565b61021b6104203660046122b5565b610dd0565b6101b6610433366004612309565b610f1b565b61044061104c565b6040516101c391906124db565b606061045960006110fd565b905090565b33610469818361110a565b61048e5760405162461bcd60e51b8152600401610485906124ee565b60405180910390fd5b6001600160a01b03831660009081526002602052604081206104b0908361114e565b905080156104f957836001600160a01b0316826001600160a01b03167f12146497b3b826918ec47f0cac7272a09ed06b30c16c030e99ec48ff5dd60b4760405160405180910390a35b50505050565b6001600160a01b0381166000908152600260205260409020606090610523906110fd565b92915050565b610555600080516020612a628339815191525b6000848152600191909101602052604090205433611163565b600080516020612a628339815191526000838152602091825260408082206001600160a01b0385168352909252205460ff16156105d45760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610485565b6105de82826111ef565b5050565b336001600160a01b0382161461063a5760405162461bcd60e51b815260206004820152601a60248201527f43616e206f6e6c792072656e6f756e636520666f722073656c660000000000006044820152606401610485565b6105de8282611203565b6004546001600160a01b031633146106945760405162461bcd60e51b815260206004820152601360248201527213db9b1e481d5c1ad9595c08185b1b1bddd959606a1b6044820152606401610485565b600080806106a48486018661253a565b92509250925060005b825181101561074d57836001600160a01b0316633dd6e0258483815181106106d7576106d7612610565b60200260200101516040518263ffffffff1660e01b815260040161070a91906001600160a01b0391909116815260200190565b600060405180830381600087803b15801561072457600080fd5b505af1158015610738573d6000803e3d6000fd5b50505050806107469061263c565b90506106ad565b5080156107a857826001600160a01b031663b28362776040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561078f57600080fd5b505af11580156107a3573d6000803e3d6000fd5b505050505b5050505050565b60006104596000611217565b600060606107c7611221565b909590945092505050565b336107dd818361110a565b6107f95760405162461bcd60e51b8152600401610485906124ee565b61080460008261114e565b6105de5760405162461bcd60e51b815260040161048590612655565b6000806108638585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061168192505050565b905061088f7f0000000000000000000000000000000000000000000000000000000000000000826116b4565b9150505b9392505050565b6000806108a5611714565b600085815260209190915260408120549150805b8281101561099f5760006108cb611714565b60008881526020918252604080822085835260010190925220546001600160a01b0316146109435784820361093157610902611714565b600087815260209182526040808220938252600190930190915220546001600160a01b03169250610523915050565b61093c60018361269f565b915061098d565b61094e8660006109a8565b801561097a575061095d611714565b600087815260209182526040808220828052600201909252205481145b1561098d5761098a60018361269f565b91505b61099860018261269f565b90506108b9565b50505092915050565b6000918252600080516020612a62833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b336109eb818361110a565b610a075760405162461bcd60e51b8152600401610485906124ee565b6001600160a01b0383166000908152600260205260408120610a29908361171e565b905080156104f957836001600160a01b0316826001600160a01b03167f98d1ebbe00ae92a5de96a0f49742a8afa89f42363592bc2e7cfaaed68b45e7a660405160405180910390a350505050565b610a7f611733565b610abc5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610485565b610ac58161173f565b50565b6000600080516020612a62833981519152600084815260209182526040808220828052909252205460ff16610b3057600080516020612a628339815191526000848152602091825260408082206001600160a01b0386168352909252205460ff169050610523565b50600192915050565b6004546001600160a01b031615610b885760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606401610485565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6060816001600160401b03811115610bc457610bc461232b565b604051908082528060200260200182016040528015610bf757816020015b6060815260200190600190039081610be25790505b509050336000805b8481101561099f578115610c7e57610c5c30878784818110610c2357610c23612610565b9050602002810190610c3591906126b2565b86604051602001610c48939291906126f8565b60405160208183030381529060405261185e565b848281518110610c6e57610c6e612610565b6020026020010181905250610cfe565b610ce030878784818110610c9457610c94612610565b9050602002810190610ca691906126b2565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061185e92505050565b848281518110610cf257610cf2612610565b60200260200101819052505b80610d088161263c565b915050610bff565b60006105238183611883565b600080610d27611714565b6000848152602091909152604081205491505b81811015610d94576000610d4c611714565b60008681526020918252604080822085835260010190925220546001600160a01b031614610d8257610d7f60018461269f565b92505b610d8d60018261269f565b9050610d3a565b50610da08360006109a8565b15610db357610db060018361269f565b91505b50919050565b61063a600080516020612a6283398151915261053c565b6000807f000000000000000000000000000000000000000000000000000000000000000090506000610e388686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061168192505050565b90506000610e4683836116b4565b90506001600160a01b0381163b15610e62579250610893915050565b610e6c83836118a5565b9050336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ec557610ea960008261114e565b610ec55760405162461bcd60e51b815260040161048590612655565b610ed181888888611942565b866001600160a01b0316816001600160a01b03167fac631f3001b55ea1509cf3d7e74898f85392a61a76e8149181ae1259622dabc860405160405180910390a39695505050505050565b60608183108015610f355750610f316000611217565b8211155b610f8d5760405162461bcd60e51b815260206004820152602360248201527f426173654163636f756e74466163746f72793a20696e76616c696420696e646960448201526263657360e81b6064820152608401610485565b6000610f99848461271e565b9050610fa5848461271e565b6001600160401b03811115610fbc57610fbc61232b565b604051908082528060200260200182016040528015610fe5578160200160208202803683370190505b50915060005b8181101561104457611008611000868361269f565b6000906119aa565b83828151811061101a5761101a612610565b6001600160a01b039092166020928302919091019091015261103d60018261269f565b9050610feb565b505092915050565b60607f4bc804ba64359c0e35e5ed5d90ee596ecaa49a3a930ddcb1470ea0dd625da900805461107a90612731565b80601f01602080910402602001604051908101604052809291908181526020018280546110a690612731565b80156110f35780601f106110c8576101008083540402835291602001916110f3565b820191906000526020600020905b8154815290600101906020018083116110d657829003601f168201915b5050505050905090565b60606000610893836119b6565b6000806111377f0000000000000000000000000000000000000000000000000000000000000000846116b4565b6001600160a01b0385811691161491505092915050565b6000610893836001600160a01b038416611a12565b600080516020612a628339815191526000838152602091825260408082206001600160a01b0385168352909252205460ff166105de576111ad816001600160a01b03166014611a61565b6111b8836020611a61565b6040516020016111c9929190612765565b60408051601f198184030181529082905262461bcd60e51b8252610485916004016124db565b6111f98282611bfc565b6105de8282611c64565b61120d8282611d23565b6105de8282611d92565b6000610523825490565b600060606000600780548060200260200160405190810160405280929190818152602001828054801561127d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161125f575b50505050509050600061128e61044d565b9050600082516001600160401b038111156112ab576112ab61232b565b6040519080825280602002602001820160405280156112d4578160200160208202803683370190505b50905060606000805b84518110156116775760005b865181101561140857600087828151811061130657611306612610565b60200260200101516001600160a01b03166370a0823188858151811061132e5761132e612610565b60200260200101516040518263ffffffff1660e01b815260040161136191906001600160a01b0391909116815260200190565b602060405180830381865afa15801561137e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a291906127d2565b11156113f8578681815181106113ba576113ba612610565b60200260200101518584815181106113d4576113d4612610565b6001600160a01b03909216602092830291909101909101526113f58361263c565b92505b6114018161263c565b90506112e9565b50600085828151811061141d5761141d612610565b60200260200101516001600160a01b0316634e9eb56e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611462573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148691906127d2565b60065487519192506000916001600160a01b03909116906370a08231908990869081106114b5576114b5612610565b60200260200101516040518263ffffffff1660e01b81526004016114e891906001600160a01b0391909116815260200190565b602060405180830381865afa158015611505573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152991906127d2565b90506000828211801561154d5750600061154b670de0b6b3a7640000846127eb565b115b61155857600061155b565b60015b9050846001600160401b038111156115755761157561232b565b60405190808252806020026020018201604052801561159e578160200160208202803683370190505b50955060005b85811015611600578781815181106115be576115be612610565b60200260200101518782815181106115d8576115d8612610565b6001600160a01b03909216602092830291909101909101526115f98161263c565b90506115a4565b5060008651118061160e5750805b1561166357600188858151811061162757611627612610565b602002602001015187836040516020016116439392919061280d565b6040516020818303038152906040529a509a505050505050505050509091565b505050806116709061263c565b90506112dd565b5050505050509091565b60008282604051602001611696929190612843565b60405160208183030381529060405280519060200120905092915050565b6040513060388201526f5af43d82803e903d91602b57fd5bf3ff602482015260148101839052733d602d80600a3d3981f3363d3d373d3d3d363d738152605881018290526037600c82012060788201526055604390910120600090610893565b6000610459611e21565b6000610893836001600160a01b038416611e83565b600061045981336109a8565b60007f4bc804ba64359c0e35e5ed5d90ee596ecaa49a3a930ddcb1470ea0dd625da900805461176d90612731565b80601f016020809104026020016040519081016040528092919081815260200182805461179990612731565b80156117e65780601f106117bb576101008083540402835291602001916117e6565b820191906000526020600020905b8154815290600101906020018083116117c957829003601f168201915b50505050509050816118157f4bc804ba64359c0e35e5ed5d90ee596ecaa49a3a930ddcb1470ea0dd625da90090565b9061182090826128b6565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611852929190612975565b60405180910390a15050565b60606108938383604051806060016040528060278152602001612a3b60279139611f76565b6001600160a01b03811660009081526001830160205260408120541515610893565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166105235760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606401610485565b60405163347d5e2560e21b81526001600160a01b0385169063d1f57894906119729086908690869060040161299a565b600060405180830381600087803b15801561198c57600080fd5b505af11580156119a0573d6000803e3d6000fd5b5050505050505050565b60006108938383611fee565b606081600001805480602002602001604051908101604052809291908181526020018280548015611a0657602002820191906000526020600020905b8154815260200190600101908083116119f2575b50505050509050919050565b6000818152600183016020526040812054611a5957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610523565b506000610523565b60606000611a708360026129da565b611a7b90600261269f565b6001600160401b03811115611a9257611a9261232b565b6040519080825280601f01601f191660200182016040528015611abc576020820181803683370190505b509050600360fc1b81600081518110611ad757611ad7612610565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611b0657611b06612610565b60200101906001600160f81b031916908160001a9053506000611b2a8460026129da565b611b3590600161269f565b90505b6001811115611bad576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611b6957611b69612610565b1a60f81b828281518110611b7f57611b7f612610565b60200101906001600160f81b031916908160001a90535060049490941c93611ba6816129f1565b9050611b38565b5083156108935760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610485565b6000828152600080516020612a62833981519152602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000611c6e611714565b6000848152602091909152604090205490506001611c8a611714565b6000858152602091909152604081208054909190611ca990849061269f565b90915550829050611cb8611714565b6000858152602091825260408082208583526001019092522080546001600160a01b0319166001600160a01b039290921691909117905580611cf8611714565b6000948552602090815260408086206001600160a01b03909516865260029094019052919092205550565b611d2d8282611163565b6000828152600080516020612a62833981519152602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000611d9c611714565b6000848152602091825260408082206001600160a01b038616835260020190925220549050611dc9611714565b6000848152602091825260408082208483526001019092522080546001600160a01b0319169055611df8611714565b6000938452602090815260408085206001600160a01b0390941685526002909301905250812055565b60008060ff19611e5260017f0c4ba382c0009cf238e4c1ca1a52f51c61e6248a70bdfb34e5ed49d5578a5c0c61271e565b604051602001611e6491815260200190565b60408051601f1981840301815291905280516020909101201692915050565b60008181526001830160205260408120548015611f6c576000611ea760018361271e565b8554909150600090611ebb9060019061271e565b9050818114611f20576000866000018281548110611edb57611edb612610565b9060005260206000200154905080876000018481548110611efe57611efe612610565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611f3157611f31612a08565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610523565b6000915050610523565b6060600080856001600160a01b031685604051611f939190612a1e565b600060405180830381855af49150503d8060008114611fce576040519150601f19603f3d011682016040523d82523d6000602084013e611fd3565b606091505b5091509150611fe486838387612018565b9695505050505050565b600082600001828154811061200557612005612610565b9060005260206000200154905092915050565b60608315612087578251600003612080576001600160a01b0385163b6120805760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610485565b5081612091565b6120918383612099565b949350505050565b8151156120a95781518083602001fd5b8060405162461bcd60e51b815260040161048591906124db565b600081518084526020808501945080840160005b838110156120fc5781516001600160a01b0316875295820195908201906001016120d7565b509495945050505050565b60208152600061089360208301846120c3565b6001600160a01b0381168114610ac557600080fd5b6000806040838503121561214257600080fd5b823561214d8161211a565b946020939093013593505050565b60006020828403121561216d57600080fd5b81356108938161211a565b60006020828403121561218a57600080fd5b5035919050565b600080604083850312156121a457600080fd5b8235915060208301356121b68161211a565b809150509250929050565b60008083601f8401126121d357600080fd5b5081356001600160401b038111156121ea57600080fd5b60208301915083602082850101111561220257600080fd5b9250929050565b6000806020838503121561221c57600080fd5b82356001600160401b0381111561223257600080fd5b61223e858286016121c1565b90969095509350505050565b60005b8381101561226557818101518382015260200161224d565b50506000910152565b6000815180845261228681602086016020860161224a565b601f01601f19169290920160200192915050565b8215158152604060208201526000612091604083018461226e565b6000806000604084860312156122ca57600080fd5b83356122d58161211a565b925060208401356001600160401b038111156122f057600080fd5b6122fc868287016121c1565b9497909650939450505050565b6000806040838503121561231c57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156123695761236961232b565b604052919050565b6000602080838503121561238457600080fd5b82356001600160401b038082111561239b57600080fd5b818501915085601f8301126123af57600080fd5b8135818111156123c1576123c161232b565b6123d3601f8201601f19168501612341565b915080825286848285010111156123e957600080fd5b8084840185840137600090820190930192909252509392505050565b6000806020838503121561241857600080fd5b82356001600160401b038082111561242f57600080fd5b818501915085601f83011261244357600080fd5b81358181111561245257600080fd5b8660208260051b850101111561246757600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156124ce57603f198886030184526124bc85835161226e565b945092850192908501906001016124a0565b5092979650505050505050565b602081526000610893602083018461226e565b6020808252601f908201527f4163636f756e74466163746f72793a206e6f7420616e206163636f756e742e00604082015260600190565b8035801515811461253557600080fd5b919050565b60008060006060848603121561254f57600080fd5b833561255a8161211a565b92506020848101356001600160401b038082111561257757600080fd5b818701915087601f83011261258b57600080fd5b81358181111561259d5761259d61232b565b8060051b91506125ae848301612341565b818152918301840191848101908a8411156125c857600080fd5b938501935b838510156125f257843592506125e28361211a565b82825293850193908501906125cd565b80975050505050505061260760408501612525565b90509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161264e5761264e612626565b5060010190565b6020808252602a908201527f4163636f756e74466163746f72793a206163636f756e7420616c7265616479206040820152691c9959da5cdd195c995960b21b606082015260800190565b8082018082111561052357610523612626565b6000808335601e198436030181126126c957600080fd5b8301803591506001600160401b038211156126e357600080fd5b60200191503681900382131561220257600080fd5b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b8181038181111561052357610523612626565b600181811c9082168061274557607f821691505b602082108103610db357634e487b7160e01b600052602260045260246000fd5b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b81526000835161279581601585016020880161224a565b7001034b99036b4b9b9b4b733903937b6329607d1b60159184019182015283516127c681602684016020880161224a565b01602601949350505050565b6000602082840312156127e457600080fd5b5051919050565b60008261280857634e487b7160e01b600052601260045260246000fd5b500690565b6001600160a01b0384168152606060208201819052600090612831908301856120c3565b90508215156040830152949350505050565b6001600160a01b03831681526040602082018190526000906120919083018461226e565b601f8211156128b157600081815260208120601f850160051c8101602086101561288e5750805b601f850160051c820191505b818110156128ad5782815560010161289a565b5050505b505050565b81516001600160401b038111156128cf576128cf61232b565b6128e3816128dd8454612731565b84612867565b602080601f83116001811461291857600084156129005750858301515b600019600386901b1c1916600185901b1785556128ad565b600085815260208120601f198616915b8281101561294757888601518255948401946001909101908401612928565b50858210156129655787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000612988604083018561226e565b828103602084015261088f818561226e565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b808202811582820484141761052357610523612626565b600081612a0057612a00612626565b506000190190565b634e487b7160e01b600052603160045260246000fd5b60008251612a3081846020870161224a565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65640a7b0f5c59907924802379ebe98cdc23e2ee7820f63d30126e10b3752010e500a26469706673582212206c6d172b60c109d23f95e2005397c5c4f8700fbdd6c16244337160e50a5ab9d164736f6c634300081400336101806040523480156200001257600080fd5b5060405162004e4538038062004e45833981016040819052620000359162000274565b60408051808201825260078152661058d8dbdd5b9d60ca1b60208083019182528351808501855260018152603160f81b908201529151902060e08190527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66101008190524660a081815285517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818701819052818801959095526060810193909352608080840192909252308382018190528651808503909201825260c093840190965280519401939093209092529190526101205281816200011762000158565b6001600160a01b039081166101405216610160525050600180546001600160a01b031916331790556005805460ff60a01b1916600160a01b179055620002b3565b7f322cf19c484104d3b1a9c2982ebae869ede3fa5f6c4703ca41b9a48c76ee03005460ff808216916101009004168015620001e95760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60ff828116101562000257577f322cf19c484104d3b1a9c2982ebae869ede3fa5f6c4703ca41b9a48c76ee0300805460ff191660ff90811790915560408051918252517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989181900360200190a15b5050565b6001600160a01b03811681146200027157600080fd5b50565b600080604083850312156200028857600080fd5b825162000295816200025b565b6020840151909250620002a8816200025b565b809150509250929050565b60805160a05160c05160e05161010051610120516101405161016051614b02620003436000396000611d9401526000818161062001528181612b7f01528181612d0f01528181612d4501528181612e0d01528181612e830152612eb301526000612764015260006127b30152600061278e015260006126e7015260006127110152600061273b0152614b026000f3fe6080604052600436106102295760003560e01c80639934cdb111610123578063c45a0155116100ab578063e9523c971161006f578063e9523c97146106ae578063ec1afaaa146106d0578063f15d424e146106f0578063f23a6e611461071d578063fbfa77cf1461074957600080fd5b8063c45a01551461060e578063d087d28814610642578063d1f5789414610657578063d42f2f3514610677578063e8a3d4851461068c57600080fd5b8063b0d691fe116100f2578063b0d691fe14610578578063b28362771461058d578063b61d27f6146105a2578063b76464d5146105c2578063bc197c81146105e257600080fd5b80639934cdb1146104cb578063a03e4bc3146104ec578063a9082d841461050c578063ac9650d81461054b57600080fd5b806347e1da2a116101b1578063735de9f711610175578063735de9f71461042957806374c13fda146104495780637dff5a79146104695780638b52d72314610489578063938e3d7b146104ab57600080fd5b806347e1da2a146103ab5780634a58db19146103cb5780634d44560d146103d35780634e9eb56e146103f35780635892e2361461040957600080fd5b80631dd756c5116101f85780631dd756c5146102f157806324d7806c1461031157806329245414146103315780633a871cdd146103695780633dd6e0251461038957600080fd5b806301ffc9a7146102355780630a1028c41461026a578063150b7a02146102985780631626ba7e146102d157600080fd5b3661023057005b600080fd5b34801561024157600080fd5b506102556102503660046138a3565b610769565b60405190151581526020015b60405180910390f35b34801561027657600080fd5b5061028a61028536600461398a565b6107af565b604051908152602001610261565b3480156102a457600080fd5b506102b86102b33660046139e3565b610853565b6040516001600160e01b03199091168152602001610261565b3480156102dd57600080fd5b506102b86102ec366004613a4e565b610864565b3480156102fd57600080fd5b5061025561030c366004613aad565b6109a4565b34801561031d57600080fd5b5061025561032c366004613af2565b610c7c565b34801561033d57600080fd5b50600154610351906001600160a01b031681565b6040516001600160a01b039091168152602001610261565b34801561037557600080fd5b5061028a610384366004613b0f565b610cab565b34801561039557600080fd5b506103a96103a4366004613af2565b610cd1565b005b3480156103b757600080fd5b506103a96103c6366004613ba0565b611234565b6103a96113a5565b3480156103df57600080fd5b506103a96103ee366004613c39565b61140c565b3480156103ff57600080fd5b5061028a60005481565b34801561041557600080fd5b506103a9610424366004613ca6565b611485565b34801561043557600080fd5b50600354610351906001600160a01b031681565b34801561045557600080fd5b50600254610351906001600160a01b031681565b34801561047557600080fd5b50610255610484366004613af2565b611842565b34801561049557600080fd5b5061049e6118fb565b6040516102619190613dbc565b3480156104b757600080fd5b506103a96104c6366004613e1e565b611b42565b3480156104d757600080fd5b5060055461025590600160a01b900460ff1681565b3480156104f857600080fd5b50600454610351906001600160a01b031681565b34801561051857600080fd5b5061052c610527366004613ca6565b611b93565b6040805192151583526001600160a01b03909116602083015201610261565b34801561055757600080fd5b5061056b610566366004613e66565b611bea565b6040516102619190613ef7565b34801561058457600080fd5b50610351611d59565b34801561059957600080fd5b506103a9611db9565b3480156105ae57600080fd5b506103a96105bd366004613f4c565b611fa3565b3480156105ce57600080fd5b506103a96105dd366004613af2565b612033565b3480156105ee57600080fd5b506102b86105fd366004614035565b63bc197c8160e01b95945050505050565b34801561061a57600080fd5b506103517f000000000000000000000000000000000000000000000000000000000000000081565b34801561064e57600080fd5b5061028a61207c565b34801561066357600080fd5b506103a96106723660046140e2565b6120fc565b34801561068357600080fd5b5061049e612334565b34801561069857600080fd5b506106a16124a5565b6040516102619190614129565b3480156106ba57600080fd5b506106c3612556565b6040516102619190614180565b3480156106dc57600080fd5b506103a96106eb3660046141a1565b612568565b3480156106fc57600080fd5b5061071061070b366004613af2565b6125cd565b60405161026191906141be565b34801561072957600080fd5b506102b86107383660046141d1565b63f23a6e6160e01b95945050505050565b34801561075557600080fd5b50600554610351906001600160a01b031681565b60006001600160e01b03198216630271189760e51b148061079a57506001600160e01b03198216630a85bd0160e11b145b806107a957506107a9826126a5565b92915050565b6000807f82cac545155fcbf147f2a9013809613677ac7d65498556e6d19ce43bcbf6c28483805190602001206040516020016107f5929190918252602082015260400190565b6040516020818303038152906040528051906020012090506108156126da565b60405161190160f01b602082015260228101919091526042810182905260620160405160208183030381529060405280519060200120915050919050565b630a85bd0160e11b5b949350505050565b6000806108918460405160200161087d91815260200190565b6040516020818303038152906040526107af565b9050600061089f8285612801565b90506108aa81610c7c565b156108c15750630b135d3f60e11b91506107a99050565b3360006108cc612825565b6001600160a01b03841660009081526006919091016020526040902090506108f48183612849565b8061092457506109038161286b565b6001148015610924575060006109198282612875565b6001600160a01b0316145b6109815760405162461bcd60e51b8152602060048201526024808201527f4163636f756e743a2063616c6c6572206e6f7420617070726f7665642074617260448201526333b2ba1760e11b60648201526084015b60405180910390fd5b61098a83611842565b1561099a57630b135d3f60e11b94505b5050505092915050565b60006109ae612825565b6001600160a01b0384166000908152600491909101602052604090205460ff16156109db575060016107a9565b60006109e5612825565b6001600160a01b0385166000908152600591909101602090815260408083208151606081018352815481526001909101546001600160801b0380821694830194909452600160801b9004909216908201529150610a40612825565b6006016000866001600160a01b03166001600160a01b0316815260200190815260200160002090504282602001516001600160801b03161180610a90575081604001516001600160801b03164210155b80610aa15750610a9f8161286b565b155b15610ab1576000925050506107a9565b6000610ac8610ac36060870187614239565b612881565b90506000610ad58361286b565b6001148015610af657506000610aeb8482612875565b6001600160a01b0316145b90506324f16c0560e11b6001600160e01b0319831601610b6d57600080610b28610b2360608a018a614239565b6128bb565b9150915082610b4e57610b3b8583612849565b610b4e57600096505050505050506107a9565b8551811115610b6657600096505050505050506107a9565b5050610c6f565b635c0f12eb60e11b6001600160e01b0319831601610c6257600080610b9d610b9860608a018a614239565b612920565b509150915082610c075760005b8251811015610c0557610bdf838281518110610bc857610bc861427f565b60200260200101518761284990919063ffffffff16565b610bf35760009750505050505050506107a9565b80610bfd816142ab565b915050610baa565b505b60005b8251811015610c5a57818181518110610c2557610c2561427f565b602002602001015187600001511015610c485760009750505050505050506107a9565b80610c52816142ab565b915050610c0a565b505050610c6f565b60009450505050506107a9565b5060019695505050505050565b6000610c86612825565b6001600160a01b03909216600090815260049290920160205250604090205460ff1690565b6000610cb561296d565b610cbf84846129d7565b9050610cca82612b1d565b9392505050565b6001546001600160a01b0316331480610cee5750610cee33610c7c565b610d3a5760405162461bcd60e51b815260206004820152601d60248201527f4163636f756e743a206e6f742061646d696e206f722055706b6565702e0000006044820152606401610978565b600554600160a01b900460ff16610d935760405162461bcd60e51b815260206004820152601760248201527f4163636f756e743a20737570706c79207061757365642e0000000000000000006044820152606401610978565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610dda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfe91906142c4565b90506000610e0f620f4240836142dd565b90506000610e1d82846142ff565b60048054604051632fe4a15f60e21b815230928101929092529192506000916001600160a01b03169063bf92857c9060240160c060405180830381865afa158015610e6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e909190614312565b5050505091505060008311156110ab57600081118015610eb05750808311155b15610fbb576004805460405163095ea7b360e01b81526001600160a01b03918216928101929092526024820185905286169063095ea7b3906044016020604051808303816000875af1158015610f0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2e919061435c565b506004805460405163573ade8160e01b81526001600160a01b0388811693820193909352602481018690526002604482015230606482015291169063573ade81906084016020604051808303816000875af1158015610f91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb591906142c4565b506110ab565b6004805460405163095ea7b360e01b81526001600160a01b03918216928101929092526024820185905286169063095ea7b3906044016020604051808303816000875af1158015611010573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611034919061435c565b506004805460405163617ba03760e01b81526001600160a01b0388811693820193909352602481018690523060448201526000606482015291169063617ba03790608401600060405180830381600087803b15801561109257600080fd5b505af11580156110a6573d6000803e3d6000fd5b505050505b60408051600280825260608201835260009260208301908036833701905050905085816000815181106110e0576110e061427f565b6001600160a01b0392831660209182029290920101526002548251911690829060019081106111115761111161427f565b6001600160a01b03928316602091820292909201015260035460405163095ea7b360e01b81529082166004820152602481018590529087169063095ea7b3906044016020604051808303816000875af1158015611172573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611196919061435c565b506003546040516338ed173960e01b81526000916001600160a01b0316906338ed1739906111d09087908190879030904290600401614379565b6020604051808303816000875af11580156111ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121391906142c4565b90508060008082825461122691906143b5565b909155505050505050505050565b61123c611d59565b6001600160a01b0316336001600160a01b0316148061125f575061125f33610c7c565b61127b5760405162461bcd60e51b8152600401610978906143c8565b611283612b6a565b848114801561129157508483145b6112dd5760405162461bcd60e51b815260206004820152601d60248201527f4163636f756e743a2077726f6e67206172726179206c656e677468732e0000006044820152606401610978565b60005b8581101561139c576113898787838181106112fd576112fd61427f565b90506020020160208101906113129190613af2565b8686848181106113245761132461427f565b9050602002013585858581811061133d5761133d61427f565b905060200281019061134f9190614239565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612c4c92505050565b5080611394816142ab565b9150506112e0565b50505050505050565b6113ad611d59565b60405163b760faf960e01b81523060048201526001600160a01b03919091169063b760faf99034906024016000604051808303818588803b1580156113f157600080fd5b505af1158015611405573d6000803e3d6000fd5b5050505050565b611414612cbd565b61141c611d59565b60405163040b850f60e31b81526001600160a01b03848116600483015260248201849052919091169063205c2878906044015b600060405180830381600087803b15801561146957600080fd5b505af115801561147d573d6000803e3d6000fd5b505050505050565b60006114946020850185613af2565b9050426114a760e0860160c08701614420565b6001600160801b0316111580156114d657506114ca610100850160e08601614420565b6001600160801b031642105b61150c5760405162461bcd60e51b8152602060048201526007602482015266085c195c9a5bd960ca1b6044820152606401610978565b60008061151a868686611b93565b91509150816115545760405162461bcd60e51b8152600401610978906020808252600490820152632173696760e01b604082015260600190565b600161155e612825565b610100880135600090815260079190910160209081526040808320805460ff191694151594909417909355909161159a9190890190890161444c565b60ff1611156115c75760006115b5604088016020890161444c565b60ff16600114905061139c8482612cfb565b6115d083610c7c565b156116055760405162461bcd60e51b815260206004820152600560248201526430b236b4b760d91b6044820152606401610978565b61161a83611611612825565b60020190612e42565b506040518060600160405280876060013581526020018760800160208101906116439190614420565b6001600160801b0316815260200161166160c0890160a08a01614420565b6001600160801b03169052611674612825565b6001600160a01b03851660009081526005919091016020908152604080832084518155918401519301516001600160801b03908116600160801b029316929092176001909201919091556116ea6116c9612825565b6001600160a01b038616600090815260069190910160205260409020612e57565b805190915060005b818110156117545761174183828151811061170f5761170f61427f565b602002602001015161171f612825565b6001600160a01b03891660009081526006919091016020526040902090612e64565b5061174d6001826143b5565b90506116f2565b506117626040890189614467565b9050905060005b818110156117e3576117d061178160408b018b614467565b838181106117915761179161427f565b90506020020160208101906117a69190613af2565b6117ae612825565b6001600160a01b03891660009081526006919091016020526040902090612e42565b506117dc6001826143b5565b9050611769565b506117ed88612e79565b846001600160a01b0316836001600160a01b03167ff21d10c26e35863a8df291aca54181ee8c4a3bc8e00246c3f7a5a14b69d826a78a6040516118309190614536565b60405180910390a35050505050505050565b60008061184d612825565b6001600160a01b038416600090815260059190910160209081526040918290208251606081018452815481526001909101546001600160801b03808216938301849052600160801b909104169281019290925290915042108015906118be575080604001516001600160801b031642105b8015610cca575060006118f36118d2612825565b6001600160a01b03861660009081526006919091016020526040902061286b565b119392505050565b6060600061191261190a612825565b600201612e57565b80519091506000805b828110156119a3576119458482815181106119385761193861427f565b6020026020010151611842565b1561195c5781611954816142ab565b925050611991565b60008482815181106119705761197061427f565b60200260200101906001600160a01b031690816001600160a01b0316815250505b61199c6001826143b5565b905061191b565b50806001600160401b038111156119bc576119bc6138cd565b6040519080825280602002602001820160405280156119f557816020015b6119e2613859565b8152602001906001900390816119da5790505b5093506000805b83811015611b3a5760006001600160a01b0316858281518110611a2157611a2161427f565b60200260200101516001600160a01b031614611b28576000858281518110611a4b57611a4b61427f565b602002602001015190506000611a5f612825565b6001600160a01b038316600081815260059290920160209081526040928390208351606081018552815481526001909101546001600160801b0380821683850152600160801b9091041681850152835160a081019094529183529092508101611ac96116c9612825565b81526020018260000151815260200182602001516001600160801b0316815260200182604001516001600160801b0316815250888580611b08906142ab565b965081518110611b1a57611b1a61427f565b602002602001018190525050505b611b336001826143b5565b90506119fc565b505050505090565b611b4a612f27565b611b875760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610978565b611b9081612f3f565b50565b600080611ba9611ba28661305e565b85856131a2565b9050611bb3612825565b6101008601356000908152600791909101602052604090205460ff16158015611be05750611be081610c7c565b9150935093915050565b6060816001600160401b03811115611c0457611c046138cd565b604051908082528060200260200182016040528015611c3757816020015b6060815260200190600190039081611c225790505b509050336000805b84811015611d50578115611cbe57611c9c30878784818110611c6357611c6361427f565b9050602002810190611c759190614239565b86604051602001611c889392919061462f565b6040516020818303038152906040526131f4565b848281518110611cae57611cae61427f565b6020026020010181905250611d3e565b611d2030878784818110611cd457611cd461427f565b9050602002810190611ce69190614239565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506131f492505050565b848281518110611d3257611d3261427f565b60200260200101819052505b80611d48816142ab565b915050611c3f565b50505092915050565b7f036f52c1827dab135f7fd44ca0bddde297e2f659c710e0ec53e975f22b548300546000906001600160a01b03168015611d9257919050565b7f000000000000000000000000000000000000000000000000000000000000000091505090565b6001546001600160a01b0316331480611dd65750611dd633610c7c565b611e225760405162461bcd60e51b815260206004820152601d60248201527f4163636f756e743a206e6f742061646d696e206f722055706b6565702e0000006044820152606401610978565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611e6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e8f91906142c4565b90506000805482611ea091906142ff565b60025460055460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b3906044016020604051808303816000875af1158015611ef7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1b919061435c565b50600554604051636e553f6560e01b8152600481018390523060248201526001600160a01b0390911690636e553f65906044016020604051808303816000875af1158015611f6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9191906142c4565b50611f9c81836142ff565b6000555050565b611fab611d59565b6001600160a01b0316336001600160a01b03161480611fce5750611fce33610c7c565b611fea5760405162461bcd60e51b8152600401610978906143c8565b611ff2612b6a565b611405848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612c4c92505050565b61203b612cbd565b7f036f52c1827dab135f7fd44ca0bddde297e2f659c710e0ec53e975f22b54830080546001600160a01b0319166001600160a01b0392909216919091179055565b6000612086611d59565b604051631aab3f0d60e11b8152306004820152600060248201526001600160a01b0391909116906335567e1a90604401602060405180830381865afa1580156120d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f791906142c4565b905090565b600080516020614a868339815191525460ff80821691610100900416801580801561212a575060018360ff16105b806121425750303b15801561214257508260ff166001145b6121a55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610978565b600080516020614a86833981519152805460ff1916600117905580156121e257600080516020614a86833981519152805461ff0019166101001790555b6122228686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061321992505050565b600080516020614a668339815191525561223d866001612cfb565b600180546001600160a01b031990811633179091556005805460028054841673c4bf5cbdabe595361438f8c6a187bdc330539c6017905560038054841673f125dbd2865d1638efb4b98fd07a11cca2d9d7fd17905560048054909316736ae43d3271ff6888e7fc43fd7321a503ff738951179092557401cdf50ab9837b08e4777f5a28abfc5184311124756001600160a81b0319909216919091179055801561147d57600080516020614a86833981519152805461ff0019169055604080516001815290517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989181900360200190a1505050505050565b6060600061234361190a612825565b8051909150806001600160401b03811115612360576123606138cd565b60405190808252806020026020018201604052801561239957816020015b612386613859565b81526020019060019003908161237e5790505b50925060005b8181101561249f5760008382815181106123bb576123bb61427f565b6020026020010151905060006123cf612825565b6001600160a01b038316600081815260059290920160209081526040928390208351606081018552815481526001909101546001600160801b0380821683850152600160801b9091041681850152835160a0810190945291835290925081016124396116c9612825565b81526020018260000151815260200182602001516001600160801b0316815260200182604001516001600160801b031681525086848151811061247e5761247e61427f565b6020026020010181905250505060018161249891906143b5565b905061239f565b50505090565b60607f4bc804ba64359c0e35e5ed5d90ee596ecaa49a3a930ddcb1470ea0dd625da90080546124d390614655565b80601f01602080910402602001604051908101604052809291908181526020018280546124ff90614655565b801561254c5780601f106125215761010080835404028352916020019161254c565b820191906000526020600020905b81548152906001019060200180831161252f57829003601f168201915b5050505050905090565b60606120f7612563612825565b612e57565b612570611d59565b6001600160a01b0316336001600160a01b03161480612593575061259333610c7c565b6125af5760405162461bcd60e51b8152600401610978906143c8565b60058054911515600160a01b0260ff60a01b19909216919091179055565b6125d5613859565b60006125df612825565b6001600160a01b038416600081815260059290920160209081526040928390208351606081018552815481526001909101546001600160801b0380821683850152600160801b9091041681850152835160a08101909452918352909250810161266a612649612825565b6001600160a01b038716600090815260069190910160205260409020612e57565b81526020018260000151815260200182602001516001600160801b0316815260200182604001516001600160801b0316815250915050919050565b60006001600160e01b03198216630271189760e51b14806107a957506301ffc9a760e01b6001600160e01b03198316146107a9565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561273357507f000000000000000000000000000000000000000000000000000000000000000046145b1561275d57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000806000612810858561324c565b9150915061281d81613291565b509392505050565b7f3181e78fc1b109bc611fd2406150bf06e33faa75f71cba12c3e1fd670f2def0090565b6001600160a01b03811660009081526001830160205260408120541515610cca565b60006107a9825490565b6000610cca83836133db565b600060048210156128a45760405162461bcd60e51b815260040161097890614689565b6128b26004600084866146a8565b610cca916146d2565b60008060448310156128df5760405162461bcd60e51b815260040161097890614689565b6128ed6024600485876146a8565b8101906128fa9190613af2565b915061290a6044602485876146a8565b8101906129179190614702565b90509250929050565b6060808060648410156129455760405162461bcd60e51b815260040161097890614689565b61295284600481886146a8565b81019061295f919061479a565b919790965090945092505050565b612975611d59565b6001600160a01b0316336001600160a01b0316146129d55760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606401610978565b565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c81206000612a56612a19610140870187614239565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086939250506128019050565b9050612a6281866109a4565b612a71576001925050506107a9565b6000612a7b612825565b6001600160a01b03929092166000908152600590920160209081526040808420815160608082018452825482526001909201546001600160801b0380821683870152600160801b8204908116928501929092528351928301845295825265ffffffffffff8087169483019490945292831691015260d09290921b6001600160d01b03191660a09290921b65ffffffffffff60a01b169190911795945050505050565b8015611b9057604051600090339060001990849084818181858888f193505050503d8060008114611405576040519150601f19603f3d011682016040523d82523d6000602084013e611405565b60405163c3c5a54760e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063c3c5a54790602401602060405180830381865afa158015612bd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bf4919061435c565b611b9057600080516020614a66833981519152546040516320e80fe360e21b815260048101919091526001600160a01b038216906383a03f8c906024015b600060405180830381600087803b1580156113f157600080fd5b60606000846001600160a01b03168484604051612c69919061487f565b60006040518083038185875af1925050503d8060008114612ca6576040519150601f19603f3d011682016040523d82523d6000602084013e612cab565b606091505b50925090508061281d57815160208301fd5b612cc633610c7c565b6129d55760405162461bcd60e51b815260206004820152600660248201526510b0b236b4b760d11b6044820152606401610978565b612d058282613405565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163b15612e3e578015612dd6576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016630b61e12b837f036f52c1827dab135f7fd44ca0bddde297e2f659c710e0ec53e975f22b548300600101546040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561146957600080fd5b600080516020614a66833981519152546040516301270f4760e71b81526001600160a01b03848116600483015260248201929092527f000000000000000000000000000000000000000000000000000000000000000090911690639387a3809060440161144f565b5050565b6000610cca836001600160a01b0384166134b4565b60606000610cca83613503565b6000610cca836001600160a01b03841661355f565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163b15611b90576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016630b61e12b612ee56020840184613af2565b600080516020614a668339815191525460405160e084901b6001600160e01b03191681526001600160a01b039290921660048301526024820152604401612c32565b6000612f3233610c7c565b806120f757505030331490565b60007f4bc804ba64359c0e35e5ed5d90ee596ecaa49a3a930ddcb1470ea0dd625da9008054612f6d90614655565b80601f0160208091040260200160405190810160405280929190818152602001828054612f9990614655565b8015612fe65780601f10612fbb57610100808354040283529160200191612fe6565b820191906000526020600020905b815481529060010190602001808311612fc957829003601f168201915b50505050509050816130157f4bc804ba64359c0e35e5ed5d90ee596ecaa49a3a930ddcb1470ea0dd625da90090565b9061302090826148e6565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a1681836040516130529291906149a5565b60405180910390a15050565b60607f3fd4a1a1a267c84185e3b7eecd57c68783c0581d538b9d6e5f23e4670497c1e961308e6020840184613af2565b61309e604085016020860161444c565b6130ab6040860186614467565b6040516020016130bc9291906149d3565b60408051601f19818403018152919052805160209091012060608601356130e960a0880160808901614420565b6130f960c0890160a08a01614420565b61310960e08a0160c08b01614420565b61311a6101008b0160e08c01614420565b60408051602081019a909a526001600160a01b039098169789019790975260ff9095166060880152608087019390935260a08601919091526001600160801b0390811660c086015290811660e0850152908116610100848101919091529116610120830152830135610140820152610160016040516020818303038152906040529050919050565b600061085c83838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050875160208901206131ee92509050613652565b90612801565b6060610cca8383604051806060016040528060278152602001614aa66027913961367f565b6000828260405160200161322e929190614a15565b60405160208183030381529060405280519060200120905092915050565b60008082516041036132825760208301516040840151606085015160001a613276878285856136f7565b9450945050505061328a565b506000905060025b9250929050565b60008160048111156132a5576132a5614a39565b036132ad5750565b60018160048111156132c1576132c1614a39565b0361330e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610978565b600281600481111561332257613322614a39565b0361336f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610978565b600381600481111561338357613383614a39565b03611b905760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610978565b60008260000182815481106133f2576133f261427f565b9060005260206000200154905092915050565b8061340e612825565b6001600160a01b038416600090815260049190910160205260409020805460ff19169115159190911790558015613457576134518261344b612825565b90612e42565b5061346b565b61346982613463612825565b90612e64565b505b816001600160a01b03167f235bc17e7930760029e9f4d860a2a8089976de5b381cf8380fc11c1d88a11133826040516134a8911515815260200190565b60405180910390a25050565b60008181526001830160205260408120546134fb575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556107a9565b5060006107a9565b60608160000180548060200260200160405190810160405280929190818152602001828054801561355357602002820191906000526020600020905b81548152602001906001019080831161353f575b50505050509050919050565b600081815260018301602052604081205480156136485760006135836001836142ff565b8554909150600090613597906001906142ff565b90508181146135fc5760008660000182815481106135b7576135b761427f565b90600052602060002001549050808760000184815481106135da576135da61427f565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061360d5761360d614a4f565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506107a9565b60009150506107a9565b60006107a961365f6126da565b8360405161190160f01b8152600281019290925260228201526042902090565b6060600080856001600160a01b03168560405161369c919061487f565b600060405180830381855af49150503d80600081146136d7576040519150601f19603f3d011682016040523d82523d6000602084013e6136dc565b606091505b50915091506136ed868383876137bb565b9695505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561372e57506000905060036137b2565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015613782573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166137ab576000600192509250506137b2565b9150600090505b94509492505050565b6060831561382a578251600003613823576001600160a01b0385163b6138235760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610978565b508161085c565b61085c838381511561383f5781518083602001fd5b8060405162461bcd60e51b81526004016109789190614129565b6040518060a0016040528060006001600160a01b03168152602001606081526020016000815260200160006001600160801b0316815260200160006001600160801b031681525090565b6000602082840312156138b557600080fd5b81356001600160e01b031981168114610cca57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561390b5761390b6138cd565b604052919050565b60006001600160401b0383111561392c5761392c6138cd565b61393f601f8401601f19166020016138e3565b905082815283838301111561395357600080fd5b828260208301376000602084830101529392505050565b600082601f83011261397b57600080fd5b610cca83833560208501613913565b60006020828403121561399c57600080fd5b81356001600160401b038111156139b257600080fd5b61085c8482850161396a565b6001600160a01b0381168114611b9057600080fd5b80356139de816139be565b919050565b600080600080608085870312156139f957600080fd5b8435613a04816139be565b93506020850135613a14816139be565b92506040850135915060608501356001600160401b03811115613a3657600080fd5b613a428782880161396a565b91505092959194509250565b60008060408385031215613a6157600080fd5b8235915060208301356001600160401b03811115613a7e57600080fd5b613a8a8582860161396a565b9150509250929050565b60006101608284031215613aa757600080fd5b50919050565b60008060408385031215613ac057600080fd5b8235613acb816139be565b915060208301356001600160401b03811115613ae657600080fd5b613a8a85828601613a94565b600060208284031215613b0457600080fd5b8135610cca816139be565b600080600060608486031215613b2457600080fd5b83356001600160401b03811115613b3a57600080fd5b613b4686828701613a94565b9660208601359650604090950135949350505050565b60008083601f840112613b6e57600080fd5b5081356001600160401b03811115613b8557600080fd5b6020830191508360208260051b850101111561328a57600080fd5b60008060008060008060608789031215613bb957600080fd5b86356001600160401b0380821115613bd057600080fd5b613bdc8a838b01613b5c565b90985096506020890135915080821115613bf557600080fd5b613c018a838b01613b5c565b90965094506040890135915080821115613c1a57600080fd5b50613c2789828a01613b5c565b979a9699509497509295939492505050565b60008060408385031215613c4c57600080fd5b8235613c57816139be565b946020939093013593505050565b60008083601f840112613c7757600080fd5b5081356001600160401b03811115613c8e57600080fd5b60208301915083602082850101111561328a57600080fd5b600080600060408486031215613cbb57600080fd5b83356001600160401b0380821115613cd257600080fd5b908501906101208288031215613ce757600080fd5b90935060208501359080821115613cfd57600080fd5b50613d0a86828701613c65565b9497909650939450505050565b80516001600160a01b03908116835260208083015160a082860181905281519086018190526000939183019290849060c08801905b80831015613d6e57855185168252948301946001929092019190830190613d4c565b506040870151604089015260608701519450613d9560608901866001600160801b03169052565b60808701519450613db160808901866001600160801b03169052565b979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613e1157603f19888603018452613dff858351613d17565b94509285019290850190600101613de3565b5092979650505050505050565b600060208284031215613e3057600080fd5b81356001600160401b03811115613e4657600080fd5b8201601f81018413613e5757600080fd5b61085c84823560208401613913565b60008060208385031215613e7957600080fd5b82356001600160401b03811115613e8f57600080fd5b613e9b85828601613b5c565b90969095509350505050565b60005b83811015613ec2578181015183820152602001613eaa565b50506000910152565b60008151808452613ee3816020860160208601613ea7565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613e1157603f19888603018452613f3a858351613ecb565b94509285019290850190600101613f1e565b60008060008060608587031215613f6257600080fd5b8435613f6d816139be565b93506020850135925060408501356001600160401b03811115613f8f57600080fd5b613f9b87828801613c65565b95989497509550505050565b60006001600160401b03821115613fc057613fc06138cd565b5060051b60200190565b600082601f830112613fdb57600080fd5b81356020613ff0613feb83613fa7565b6138e3565b82815260059290921b8401810191818101908684111561400f57600080fd5b8286015b8481101561402a5780358352918301918301614013565b509695505050505050565b600080600080600060a0868803121561404d57600080fd5b8535614058816139be565b94506020860135614068816139be565b935060408601356001600160401b038082111561408457600080fd5b61409089838a01613fca565b945060608801359150808211156140a657600080fd5b6140b289838a01613fca565b935060808801359150808211156140c857600080fd5b506140d58882890161396a565b9150509295509295909350565b6000806000604084860312156140f757600080fd5b8335614102816139be565b925060208401356001600160401b0381111561411d57600080fd5b613d0a86828701613c65565b602081526000610cca6020830184613ecb565b600081518084526020808501945080840160005b838110156141755781516001600160a01b031687529582019590820190600101614150565b509495945050505050565b602081526000610cca602083018461413c565b8015158114611b9057600080fd5b6000602082840312156141b357600080fd5b8135610cca81614193565b602081526000610cca6020830184613d17565b600080600080600060a086880312156141e957600080fd5b85356141f4816139be565b94506020860135614204816139be565b9350604086013592506060860135915060808601356001600160401b0381111561422d57600080fd5b6140d58882890161396a565b6000808335601e1984360301811261425057600080fd5b8301803591506001600160401b0382111561426a57600080fd5b60200191503681900382131561328a57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016142bd576142bd614295565b5060010190565b6000602082840312156142d657600080fd5b5051919050565b6000826142fa57634e487b7160e01b600052601260045260246000fd5b500690565b818103818111156107a9576107a9614295565b60008060008060008060c0878903121561432b57600080fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b60006020828403121561436e57600080fd5b8151610cca81614193565b85815284602082015260a06040820152600061439860a083018661413c565b6001600160a01b0394909416606083015250608001529392505050565b808201808211156107a9576107a9614295565b60208082526021908201527f4163636f756e743a206e6f742061646d696e206f7220456e747279506f696e746040820152601760f91b606082015260800190565b80356001600160801b03811681146139de57600080fd5b60006020828403121561443257600080fd5b610cca82614409565b803560ff811681146139de57600080fd5b60006020828403121561445e57600080fd5b610cca8261443b565b6000808335601e1984360301811261447e57600080fd5b8301803591506001600160401b0382111561449857600080fd5b6020019150600581901b360382131561328a57600080fd5b6000808335601e198436030181126144c757600080fd5b83016020810192503590506001600160401b038111156144e657600080fd5b8060051b360382131561328a57600080fd5b8183526000602080850194508260005b8581101561417557813561451b816139be565b6001600160a01b031687529582019590820190600101614508565b602081526145576020820161454a846139d3565b6001600160a01b03169052565b60006145656020840161443b565b60ff811660408401525061457c60408401846144b0565b610120806060860152614594610140860183856144f8565b9250606086013560808601526145ac60808701614409565b6001600160801b03811660a087015291506145c960a08701614409565b6001600160801b03811660c087015291506145e660c08701614409565b6001600160801b03811660e0870152915061460360e08701614409565b915061010061461c818701846001600160801b03169052565b9590950135939094019290925250919050565b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b600181811c9082168061466957607f821691505b602082108103613aa757634e487b7160e01b600052602260045260246000fd5b602080825260059082015264214461746160d81b604082015260600190565b600080858511156146b857600080fd5b838611156146c557600080fd5b5050820193919092039150565b6001600160e01b031981358181169160048510156146fa5780818660040360031b1b83161692505b505092915050565b60006020828403121561471457600080fd5b5035919050565b600082601f83011261472c57600080fd5b8135602061473c613feb83613fa7565b82815260059290921b8401810191818101908684111561475b57600080fd5b8286015b8481101561402a5780356001600160401b0381111561477e5760008081fd5b61478c8986838b010161396a565b84525091830191830161475f565b6000806000606084860312156147af57600080fd5b83356001600160401b03808211156147c657600080fd5b818601915086601f8301126147da57600080fd5b813560206147ea613feb83613fa7565b82815260059290921b8401810191818101908a84111561480957600080fd5b948201945b83861015614830578535614821816139be565b8252948201949082019061480e565b9750508701359250508082111561484657600080fd5b61485287838801613fca565b9350604086013591508082111561486857600080fd5b506148758682870161471b565b9150509250925092565b60008251614891818460208701613ea7565b9190910192915050565b601f8211156148e157600081815260208120601f850160051c810160208610156148c25750805b601f850160051c820191505b8181101561147d578281556001016148ce565b505050565b81516001600160401b038111156148ff576148ff6138cd565b6149138161490d8454614655565b8461489b565b602080601f83116001811461494857600084156149305750858301515b600019600386901b1c1916600185901b17855561147d565b600085815260208120601f198616915b8281101561497757888601518255948401946001909101908401614958565b50858210156149955787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260006149b86040830185613ecb565b82810360208401526149ca8185613ecb565b95945050505050565b60008184825b85811015614a0a5781356149ec816139be565b6001600160a01b0316835260209283019291909101906001016149d9565b509095945050505050565b6001600160a01b038316815260406020820181905260009061085c90830184613ecb565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603160045260246000fdfe036f52c1827dab135f7fd44ca0bddde297e2f659c710e0ec53e975f22b548301322cf19c484104d3b1a9c2982ebae869ede3fa5f6c4703ca41b9a48c76ee0300416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220cc791ff07726aca9ac72224bcb90cdca188a28d0f665a7502b7d50718bfea02364736f6c63430008140033",
    "sourceMap": "985:72:70:-:0;;;-1:-1:-1;;;;;;985:72:70;1015:42;985:72;;;;771:5259;1064:174;1119:42;771:5259;1064:174;;;1180:42;1064:174;;;;;;;;:::i;:::-;;1429:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1553:11;1574:4;1541:39;;;;;:::i;:::-;-1:-1:-1;;;;;812:15:78;;;794:34;;864:15;;859:2;844:18;;837:43;744:2;729:18;1541:39:70;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1898:36:65;;;;;1944:24;;;;1616:45:70::1;1342:4:39;1647:13:70::0;1616:10:::1;:45::i;:::-;1429:240:::0;;771:5259;;4229:160:40;4316:31;4333:4;4339:7;4316:16;:31::i;:::-;4357:25;4368:4;4374:7;4357:10;:25::i;:::-;4229:160;;:::o;5797:192:39:-;5875:30;:36;;;557:66;5875:36;;;;;;;;-1:-1:-1;;;;;5875:45:39;;;;;;;;;;:52;;-1:-1:-1;;5875:52:39;5923:4;5875:52;;;5942:40;3198:10:70;;5875:36:39;;5942:40;;5875:30;5942:40;5797:192;;:::o;4452:381:40:-;4522:11;4536:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:55;;-1:-1:-1;4660:1:40;4601:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:60;;:49;;:43;:60;;;;;:::i;:::-;;;;-1:-1:-1;4737:7:40;;-1:-1:-1;4672:31:40;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:62;;;:57;;:62;;;;:72;;-1:-1:-1;;;;;;4672:72:40;-1:-1:-1;;;;;4672:72:40;;;;;;;;;;:62;4754:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;-1:-1:-1;;;;;4754:66:40;;;;;:57;;;;:66;;;;;;:72;-1:-1:-1;4452:381:40:o;7864:25:39:-;7857:32;;7755:141;:::o;5286:171:40:-;5350:46;5415:35;1393:18;;-1:-1:-1;;619:56:40;674:1;627:43;619:56;:::i;:::-;608:68;;;;;;1432:25:78;;1420:2;1405:18;;1286:177;608:68:40;;;;-1:-1:-1;;608:68:40;;;;;;;;;598:79;;608:68;598:79;;;;:105;;1354:198;-1:-1:-1;;1354:198:40:o;771:5259:70:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;771:5259:70;-1:-1:-1;;;;;771:5259:70;;;;;;;;;;;-1:-1:-1;771:5259:70;;;;;;;-1:-1:-1;771:5259:70;;;-1:-1:-1;771:5259:70;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:131:78;-1:-1:-1;;;;;89:31:78;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:406::-;250:6;258;311:2;299:9;290:7;286:23;282:32;279:52;;;327:1;324;317:12;279:52;359:9;353:16;378:31;403:5;378:31;:::i;:::-;478:2;463:18;;457:25;428:5;;-1:-1:-1;491:33:78;457:25;491:33;:::i;:::-;543:7;533:17;;;150:406;;;;;:::o;891:127::-;952:10;947:3;943:20;940:1;933:31;983:4;980:1;973:15;1007:4;1004:1;997:15;1023:125;1088:9;;;1109:10;;;1106:36;;;1122:18;;:::i;:::-;1023:125;;;;:::o;1153:128::-;1220:9;;;1241:11;;;1238:37;;;1255:18;;:::i;1286:177::-;771:5259:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "771:5259:70:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5151:109:65;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3267:352;;;;;;:::i;:::-;;:::i;:::-;;5690:152;;;;;;:::i;:::-;;:::i;1432:46::-;;;;;;;;-1:-1:-1;;;;;1618:32:78;;;1600:51;;1588:2;1573:18;1432:46:65;1454:203:78;3363:142:39;;;;;;:::i;:::-;3431:7;3457:41;;;:35;:41;;;;;;;3363:142;;;;1993:25:78;;;1981:2;1966:18;3363:142:39;1847:177:78;3900:317:39;;;;;;:::i;:::-;;:::i;5181:219::-;;;;;;:::i;:::-;;:::i;5538:489:70:-;;;;;;:::i;:::-;;:::i;4503:101:65:-;;;:::i;3810:180:70:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2993:268:65:-;;;;;;:::i;:::-;;:::i;5368:240::-;;;;;;:::i;:::-;;:::i;2167:791:40:-;;;;;;:::i;:::-;;:::i;1881:153:39:-;;;;;;:::i;:::-;;:::i;:::-;;;5097:14:78;;5090:22;5072:41;;5060:2;5045:18;1881:153:39;4932:187:78;3702:355:65;;;;;;:::i;:::-;;:::i;1607:188:37:-;;;;;;:::i;:::-;;:::i;1297:49:39:-;;1342:4;1297:49;;2785:255;;;;;;:::i;:::-;;:::i;1484:35:65:-;;;;;1750:157:70;;;;;;:::i;:::-;;:::i;696:567:30:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4320:123:65:-;;;;;;:::i;:::-;;:::i;3365:462:40:-;;;;;;:::i;:::-;;:::i;4588:195:39:-;;;;;;:::i;:::-;;:::i;2213:690:65:-;;;;;;:::i;:::-;;:::i;4674:410::-;;;;;;:::i;:::-;;:::i;2173:138:37:-;;;:::i;:::-;;;;;;;:::i;5151:109:65:-;5198:16;5233:20;:11;:18;:20::i;:::-;5226:27;;5151:109;:::o;3267:352::-;3359:10;3387:35;3359:10;3416:5;3387:19;:35::i;:::-;3379:79;;;;-1:-1:-1;;;3379:79:65;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;3488:25:65;;3469:16;3488:25;;;:16;:25;;;;;:38;;3518:7;3488:29;:38::i;:::-;3469:57;;3541:11;3537:76;;;3594:7;-1:-1:-1;;;;;3573:29:65;3585:7;-1:-1:-1;;;;;3573:29:65;;;;;;;;;;;3537:76;3331:288;;3267:352;;:::o;5690:152::-;-1:-1:-1;;;;;5802:24:65;;;;;;:16;:24;;;;;5758:25;;5802:33;;:31;:33::i;:::-;5795:40;5690:152;-1:-1:-1;;5690:152:65:o;3900:317:39:-;3984:67;-1:-1:-1;;;;;;;;;;;3995:21:39;:41;;;;:35;;;;;:41;;;;;;3198:10:70;3984::39;:67::i;:::-;-1:-1:-1;;;;;;;;;;;4065:30:39;:36;;;;;;;;;;;-1:-1:-1;;;;;4065:45:39;;;;;;;;;;;4061:115;;;4126:39;;-1:-1:-1;;;4126:39:39;;8780:2:78;4126:39:39;;;8762:21:78;8819:2;8799:18;;;8792:30;8858:31;8838:18;;;8831:59;8907:18;;4126:39:39;8578:353:78;4061:115:39;4185:25;4196:4;4202:7;4185:10;:25::i;:::-;3900:317;;:::o;5181:219::-;3198:10:70;-1:-1:-1;;;;;5272:23:39;;;5268:90;;5311:36;;-1:-1:-1;;;5311:36:39;;9138:2:78;5311:36:39;;;9120:21:78;9177:2;9157:18;;;9150:30;9216:28;9196:18;;;9189:56;9262:18;;5311:36:39;8936:350:78;5268:90:39;5367:26;5379:4;5385:7;5367:11;:26::i;5538:489:70:-;2150:6;;-1:-1:-1;;;;;2150:6:70;2136:10;:20;2128:52;;;;-1:-1:-1;;;2128:52:70;;9493:2:78;2128:52:70;;;9475:21:78;9532:2;9512:18;;;9505:30;-1:-1:-1;;;9551:18:78;;;9544:49;9610:18;;2128:52:70;9291:343:78;2128:52:70;5661:14:::1;::::0;;5728:51:::1;::::0;;::::1;5739:11:::0;5728:51:::1;:::i;:::-;5660:119;;;;;;5795:6;5790:130;5806:12;:19;5803:1;:22;5790:130;;;5862:6;-1:-1:-1::0;;;;;5846:45:70::1;;5892:12;5905:1;5892:15;;;;;;;;:::i;:::-;;;;;;;5846:62;;;;;;;;;;;;;;-1:-1:-1::0;;;;;1618:32:78;;;;1600:51;;1588:2;1573:18;;1454:203;5846:62:70::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5827:3;;;;:::i;:::-;;;5790:130;;;;5934:11;5930:90;;;5977:6;-1:-1:-1::0;;;;;5961:45:70::1;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5930:90;5649:378;;;5538:489:::0;;:::o;4503:101:65:-;4551:7;4577:20;:11;:18;:20::i;3810:180:70:-;3882:17;3901:24;3968:14;:12;:14::i;:::-;3938:44;;;;-1:-1:-1;3810:180:70;-1:-1:-1;;;3810:180:70:o;2993:268:65:-;3065:10;3093:35;3065:10;3122:5;3093:19;:35::i;:::-;3085:79;;;;-1:-1:-1;;;3085:79:65;;;;;;;:::i;:::-;3183:24;:11;3199:7;3183:15;:24::i;:::-;3175:79;;;;-1:-1:-1;;;3175:79:65;;;;;;;:::i;5368:240::-;5453:7;5472:12;5487:34;5501:12;5515:5;;5487:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5487:13:65;;-1:-1:-1;;;5487:34:65:i;:::-;5472:49;;5538:63;5573:21;5596:4;5538:34;:63::i;:::-;5531:70;;;5368:240;;;;;;:::o;2167:791:40:-;2251:14;2277:20;2300:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:55;;-1:-1:-1;2300:43:40;2389:563;2413:12;2409:1;:16;2389:563;;;2525:1;2453:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:60;;;:57;;:60;;;;;-1:-1:-1;;;;;2453:60:40;:74;2449:493;;2560:5;2551;:14;2547:165;;2598:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:60;;;:57;;;;:60;;;;;-1:-1:-1;;;;;2598:60:40;;-1:-1:-1;2680:13:40;;-1:-1:-1;;2680:13:40;2547:165;2729:10;2738:1;2729:10;;:::i;:::-;;;2449:493;;;2781:25;2789:4;2803:1;2781:7;:25::i;:::-;:103;;;;;2815:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:69;;;:57;;:69;;;;;2810:74;;2781:103;2760:182;;;2917:10;2926:1;2917:10;;:::i;:::-;;;2760:182;2427:6;2432:1;2427:6;;:::i;:::-;;;2389:563;;;;2267:691;;2167:791;;;;:::o;1881:153:39:-;1959:4;1982:36;;;-1:-1:-1;;;;;;;;;;;1982:36:39;;;;;;;;-1:-1:-1;;;;;1982:45:39;;;;;;;;;;;;;;;1881:153::o;3702:355:65:-;3796:10;3824:35;3796:10;3853:5;3824:19;:35::i;:::-;3816:79;;;;-1:-1:-1;;;3816:79:65;;;;;;;:::i;:::-;-1:-1:-1;;;;;3923:25:65;;3906:14;3923:25;;;:16;:25;;;;;:41;;3956:7;3923:32;:41::i;:::-;3906:58;;3979:9;3975:76;;;4032:7;-1:-1:-1;;;;;4009:31:65;4023:7;-1:-1:-1;;;;;4009:31:65;;;;;;;;;;;3768:289;;3702:355;;:::o;1607:188:37:-;1684:20;:18;:20::i;:::-;1679:76;;1720:24;;-1:-1:-1;;;1720:24:37;;12194:2:78;1720:24:37;;;12176:21:78;12233:2;12213:18;;;12206:30;-1:-1:-1;;;12252:18:78;;;12245:44;12306:18;;1720:24:37;11992:338:78;1679:76:37;1765:23;1783:4;1765:17;:23::i;:::-;1607:188;:::o;2785:255:39:-;2864:4;-1:-1:-1;;;;;;;;;;;2885:30:39;:36;;;;;;;;;;;:48;;;;;;;;;;2880:132;;-1:-1:-1;;;;;;;;;;;2956:30:39;:36;;;;;;;;;;;-1:-1:-1;;;;;2956:45:39;;;;;;;;;;;;-1:-1:-1;2949:52:39;;2880:132;-1:-1:-1;3029:4:39;2785:255;;;;:::o;1750:157:70:-;1828:6;;-1:-1:-1;;;;;1828:6:70;:20;1820:52;;;;-1:-1:-1;;;1820:52:70;;12537:2:78;1820:52:70;;;12519:21:78;12576:2;12556:18;;;12549:30;-1:-1:-1;;;12595:18:78;;;12588:49;12654:18;;1820:52:70;12335:343:78;1820:52:70;1883:6;:16;;-1:-1:-1;;;;;;1883:16:70;-1:-1:-1;;;;;1883:16:70;;;;;;;;;;1750:157::o;696:567:30:-;756:22;812:4;-1:-1:-1;;;;;800:24:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;790:34:30;-1:-1:-1;3198:10:70;834:14:30;;922:311;942:15;;;922:311;;;982:11;978:245;;;1026:78;1063:4;1087;;1092:1;1087:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1096:6;1070:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1026:28;:78::i;:::-;1013:7;1021:1;1013:10;;;;;;;;:::i;:::-;;;;;;:91;;;;978:245;;;1156:52;1193:4;1200;;1205:1;1200:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1156:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1156:28:30;;-1:-1:-1;;;1156:52:30:i;:::-;1143:7;1151:1;1143:10;;;;;;;;:::i;:::-;;;;;;:65;;;;978:245;959:3;;;;:::i;:::-;;;;922:311;;4320:123:65;4383:4;4406:30;4383:4;4427:8;4406:20;:30::i;3365:462:40:-;3439:13;3464:20;3487:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:55;;-1:-1:-1;3553:193:40;3577:12;3573:1;:16;3553:193;;;3689:1;3617:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:60;;;:57;;:60;;;;;-1:-1:-1;;;;;3617:60:40;:74;3613:123;;3711:10;3720:1;3711:10;;:::i;:::-;;;3613:123;3591:6;3596:1;3591:6;;:::i;:::-;;;3553:193;;;;3759:25;3767:4;3781:1;3759:7;:25::i;:::-;3755:66;;;3800:10;3809:1;3800:10;;:::i;:::-;;;3755:66;3454:373;3365:462;;;:::o;4588:195:39:-;4673:67;-1:-1:-1;;;;;;;;;;;4684:21:39;5151:109:65;2213:690;2309:7;2328:12;2343:21;2328:36;;2374:12;2389:28;2403:6;2411:5;;2389:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2389:13:65;;-1:-1:-1;;;2389:28:65:i;:::-;2374:43;;2427:15;2445:46;2480:4;2486;2445:34;:46::i;:::-;2427:64;-1:-1:-1;;;;;;2506:19:65;;;:23;2502:68;;2552:7;-1:-1:-1;2545:14:65;;-1:-1:-1;;2545:14:65;2502:68;2590:37;2616:4;2622;2590:25;:37::i;:::-;2580:47;-1:-1:-1;2642:10:65;-1:-1:-1;;;;;2656:10:65;2642:24;;2638:134;;2690:24;:11;2706:7;2690:15;:24::i;:::-;2682:79;;;;-1:-1:-1;;;2682:79:65;;;;;;;:::i;:::-;2782:42;2801:7;2810:6;2818:5;;2782:18;:42::i;:::-;2864:6;-1:-1:-1;;;;;2840:31:65;2855:7;-1:-1:-1;;;;;2840:31:65;;;;;;;;;;;2889:7;2213:690;-1:-1:-1;;;;;;2213:690:65:o;4674:410::-;4748:25;4802:4;4793:6;:13;:45;;;;;4818:20;:11;:18;:20::i;:::-;4810:4;:28;;4793:45;4785:93;;;;-1:-1:-1;;;4785:93:65;;13776:2:78;4785:93:65;;;13758:21:78;13815:2;13795:18;;;13788:30;13854:34;13834:18;;;13827:62;-1:-1:-1;;;13905:18:78;;;13898:33;13948:19;;4785:93:65;13574:399:78;4785:93:65;4889:11;4903:13;4910:6;4903:4;:13;:::i;:::-;4889:27;-1:-1:-1;4951:13:65;4958:6;4951:4;:13;:::i;:::-;-1:-1:-1;;;;;4937:28:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4937:28:65;;4926:39;;4981:9;4976:102;5000:3;4996:1;:7;4976:102;;;5041:26;5056:10;5060:6;5056:1;:10;:::i;:::-;5041:11;;:14;:26::i;:::-;5027:8;5036:1;5027:11;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5027:40:65;;;:11;;;;;;;;;;;:40;5005:6;5010:1;5005:6;;:::i;:::-;;;4976:102;;;;4775:309;4674:410;;;;:::o;2173:138:37:-;2234:13;770:66;2259:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2173:138;:::o;9982:300:49:-;10045:16;10073:22;10098:19;10106:3;10098:7;:19::i;6115:238:65:-;6208:4;6224:17;6244:64;6279:21;6302:5;6244:34;:64::i;:::-;-1:-1:-1;;;;;6325:21:65;;;;;;;-1:-1:-1;;6115:238:65;;;;:::o;8028:150:49:-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:49;;8121:4;:50::i;6366:513:39:-;-1:-1:-1;;;;;;;;;;;6454:30:39;:36;;;;;;;;;;;-1:-1:-1;;;;;6454:45:39;;;;;;;;;;;6449:424;;6658:41;6686:7;-1:-1:-1;;;;;6658:41:39;6696:2;6658:19;:41::i;:::-;6770:38;6798:4;6805:2;6770:19;:38::i;:::-;6567:263;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6567:263:39;;;;;;;;;;-1:-1:-1;;;6515:347:39;;;;;;;:::i;4229:160:40:-;4316:31;4333:4;4339:7;4316:16;:31::i;:::-;4357:25;4368:4;4374:7;4357:10;:25::i;3951:165::-;4039:32;4057:4;4063:7;4039:17;:32::i;:::-;4081:28;4095:4;4101:7;4081:13;:28::i;8829:115:49:-;8892:7;8918:19;8926:3;4444:18;;4362:107;4002:1313:70;4049:4;4055:12;4089:31;4123:16;4089:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4089:50:70;;;;;;;;;;;;;;;;;;;;;;;4150:24;4177:16;:14;:16::i;:::-;4150:43;;4204:29;4250:14;:21;-1:-1:-1;;;;;4236:36:70;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4236:36:70;;4204:68;;4283:37;4331:10;4357:6;4352:956;4367:7;:14;4365:1;:16;4352:956;;;4407:6;4402:242;4417:14;:21;4415:1;:23;4402:242;;;4515:1;4474:14;4489:1;4474:17;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4467:35:70;;4503:7;4511:1;4503:10;;;;;;;;:::i;:::-;;;;;;;4467:47;;;;;;;;;;;;;;-1:-1:-1;;;;;1618:32:78;;;;1600:51;;1588:2;1573:18;;1454:203;4467:47:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;4463:166;;;4562:14;4577:1;4562:17;;;;;;;;:::i;:::-;;;;;;;4540:12;4553:5;4540:19;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4540:39:70;;;:19;;;;;;;;;;;:39;4602:7;;;:::i;:::-;;;4463:166;4440:3;;;:::i;:::-;;;4402:242;;;;4658:16;4693:7;4701:1;4693:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4677:40:70;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4759:10;;4781;;4658:61;;-1:-1:-1;4734:15:70;;-1:-1:-1;;;;;4759:10:70;;;;4752:28;;4781:7;;4789:1;;4781:10;;;;;;:::i;:::-;;;;;;;4752:40;;;;;;;;;;;;;;-1:-1:-1;;;;;1618:32:78;;;;1600:51;;1588:2;1573:18;;1454:203;4752:40:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4734:58;;4809:16;4861:11;4848:10;:24;4847:53;;;;-1:-1:-1;4898:1:70;4878:17;4891:4;4878:10;:17;:::i;:::-;:21;4847:53;:85;;4927:5;4847:85;;;4920:4;4847:85;4809:124;;4985:5;-1:-1:-1;;;;;4971:20:70;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4971:20:70;;4948:43;;5011:6;5006:102;5021:5;5019:1;:7;5006:102;;;5077:12;5090:1;5077:15;;;;;;;;:::i;:::-;;;;;;;5051:20;5072:1;5051:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5051:41:70;;;:23;;;;;;;;;;;:41;5028:3;;;:::i;:::-;;;5006:102;;;;5170:1;5140:20;:27;:31;:46;;;;5175:11;5140:46;5136:160;;;5216:4;5233:7;5241:1;5233:10;;;;;;;;:::i;:::-;;;;;;;5245:20;5267:11;5222:57;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5207:73;;;;;;;;;;;;;4002:1313;;:::o;5136:160::-;4387:921;;;4383:3;;;;:::i;:::-;;;4352:956;;;;4068:1247;;;;;4002:1313;;:::o;6608:159:65:-;6698:7;6745:6;6753:5;6734:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6724:36;;;;;;6717:43;;6608:159;;;;:::o;3801:227:41:-;3269:4;3263:11;4015:4;3303;3294:14;;3287:32;3355:34;3348:4;3339:14;;3332:58;-1:-1:-1;3410:14:41;;3403:38;;;3466:42;3454:55;;3538:4;3529:14;;3522:28;;;3612:4;3605;3596:14;;3586:31;3579:4;3570:14;;3563:55;3670:4;3663;3654:14;;;3644:31;3921:17;;3957:64;3011:680;5286:171:40;5350:46;5415:35;:33;:35::i;8346:156:49:-;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:49;;8442:7;:53::i;2876:141:70:-;2946:4;2970:39;2946:4;2998:10;2970:7;:39::i;1877:239:37:-;1943:21;770:66;1943:62;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2056:4;2015:26;770:66;;5151:109:65;2015:26:37;:38;:45;;:38;:45;:::i;:::-;;2076:33;2095:7;2104:4;2076:33;;;;;;;:::i;:::-;;;;;;;;1933:183;1877:239;:::o;6671:198:50:-;6754:12;6785:77;6806:6;6814:4;6785:77;;;;;;;;;;;;;;;;;:20;:77::i;8583:165:49:-;-1:-1:-1;;;;;8716:23:49;;8663:4;4250:19;;;:12;;;:19;;;;;;:24;;8686:55;4154:127;2107:794:41;2191:16;2523:48;2505:14;2499:4;2495:25;2489:4;2485:36;2482:90;2476:4;2469:104;2730:32;2713:14;2707:4;2703:25;2700:63;2694:4;2687:77;2812:4;2806;2800;2797:1;2789:28;2777:40;-1:-1:-1;;;;;;2844:22:41;;2836:58;;;;-1:-1:-1;;;2836:58:41;;19269:2:78;2836:58:41;;;19251:21:78;19308:2;19288:18;;;19281:30;19347:25;19327:18;;;19320:53;19390:18;;2836:58:41;19067:347:78;2604:173:70;2717:52;;-1:-1:-1;;;2717:52:70;;-1:-1:-1;;;;;2717:37:70;;;;;:52;;2755:6;;2763:5;;;;2717:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2604:173;;;;:::o;9286:156:49:-;9360:7;9410:22;9414:3;9426:5;9410:3;:22::i;5469:109::-;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;2113:404::-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:49;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:49;2488:12;;1563:441:52;1638:13;1663:19;1695:10;1699:6;1695:1;:10;:::i;:::-;:14;;1708:1;1695:14;:::i;:::-;-1:-1:-1;;;;;1685:25:52;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1685:25:52;;1663:47;;-1:-1:-1;;;1720:6:52;1727:1;1720:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1720:15:52;;;;;;;;;-1:-1:-1;;;1745:6:52;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1745:15:52;;;;;;;;-1:-1:-1;1775:9:52;1787:10;1791:6;1787:1;:10;:::i;:::-;:14;;1800:1;1787:14;:::i;:::-;1775:26;;1770:132;1807:1;1803;:5;1770:132;;;-1:-1:-1;;;1854:5:52;1862:3;1854:11;1841:25;;;;;;;:::i;:::-;;;;1829:6;1836:1;1829:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1829:37:52;;;;;;;;-1:-1:-1;1890:1:52;1880:11;;;;;1810:3;;;:::i;:::-;;;1770:132;;;-1:-1:-1;1919:10:52;;1911:55;;;;-1:-1:-1;;;1911:55:52;;20425:2:78;1911:55:52;;;20407:21:78;;;20444:18;;;20437:30;20503:34;20483:18;;;20476:62;20555:18;;1911:55:52;20223:356:78;5797:192:39;5875:30;:36;;;-1:-1:-1;;;;;;;;;;;5875:36:39;;;;;;;;-1:-1:-1;;;;;5875:45:39;;;;;;;;;;:52;;-1:-1:-1;;5875:52:39;5923:4;5875:52;;;5942:40;3198:10:70;;5875:36:39;;5942:40;;5875:30;5942:40;5797:192;;:::o;4452:381:40:-;4522:11;4536:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:55;;-1:-1:-1;4660:1:40;4601:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:60;;:49;;:43;:60;;;;;:::i;:::-;;;;-1:-1:-1;4737:7:40;;-1:-1:-1;4672:31:40;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:62;;;:57;;:62;;;;:72;;-1:-1:-1;;;;;;4672:72:40;-1:-1:-1;;;;;4672:72:40;;;;;;;;;;:62;4754:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;-1:-1:-1;;;;;4754:66:40;;;;;:57;;;;:66;;;;;;:72;-1:-1:-1;4452:381:40:o;6038:228:39:-;6117:25;6128:4;6134:7;6117:10;:25::i;:::-;6159:30;:36;;;-1:-1:-1;;;;;;;;;;;6159:36:39;;;;;;;;-1:-1:-1;;;;;6159:45:39;;;;;;;;;;6152:52;;-1:-1:-1;;6152:52:39;;;6219:40;3198:10:70;;6159:36:39;;6219:40;;6159:30;6219:40;6038:228;;:::o;4901:323:40:-;4974:11;4988:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;-1:-1:-1;;;;;4988:66:40;;;;:57;;:66;;;;;;-1:-1:-1;5072:31:40;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:62;;;:57;;:62;;;;5065:69;;-1:-1:-1;;;;;;5065:69:40;;;5151:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;-1:-1:-1;;;;;5151:66:40;;;;;:57;;;;:66;;-1:-1:-1;5151:66:40;;5144:73;4901:323::o;1354:198::-;1393:18;;-1:-1:-1;;619:56:40;674:1;627:43;619:56;:::i;:::-;608:68;;;;;;1993:25:78;;1981:2;1966:18;;1847:177;608:68:40;;;;-1:-1:-1;;608:68:40;;;;;;;;;598:79;;608:68;598:79;;;;:105;;1354:198;-1:-1:-1;;1354:198:40:o;2685:1388:49:-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:49;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;7055:325:50;7196:12;7221;7235:23;7262:6;-1:-1:-1;;;;;7262:19:50;7282:4;7262:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7220:67;;;;7304:69;7331:6;7339:7;7348:10;7360:12;7304:26;:69::i;:::-;7297:76;7055:325;-1:-1:-1;;;;;;7055:325:50:o;4811:118:49:-;4878:7;4904:3;:11;;4916:5;4904:18;;;;;;;;:::i;:::-;;;;;;;;;4897:25;;4811:118;;;;:::o;7668:628:50:-;7848:12;7876:7;7872:418;;;7903:10;:17;7924:1;7903:22;7899:286;;-1:-1:-1;;;;;1695:19:50;;;8110:60;;;;-1:-1:-1;;;8110:60:50;;21210:2:78;8110:60:50;;;21192:21:78;21249:2;21229:18;;;21222:30;21288:31;21268:18;;;21261:59;21337:18;;8110:60:50;21008:353:78;8110:60:50;-1:-1:-1;8205:10:50;8198:17;;7872:418;8246:33;8254:10;8266:12;8246:7;:33::i;:::-;7668:628;;;;;;:::o;8818:540::-;8977:17;;:21;8973:379;;9205:10;9199:17;9261:15;9248:10;9244:2;9240:19;9233:44;8973:379;9328:12;9321:20;;-1:-1:-1;;;9321:20:50;;;;;;;;:::i;14:461:78:-;67:3;105:5;99:12;132:6;127:3;120:19;158:4;187:2;182:3;178:12;171:19;;224:2;217:5;213:14;245:1;255:195;269:6;266:1;263:13;255:195;;;334:13;;-1:-1:-1;;;;;330:39:78;318:52;;390:12;;;;425:15;;;;366:1;284:9;255:195;;;-1:-1:-1;466:3:78;;14:461;-1:-1:-1;;;;;14:461:78:o;480:261::-;659:2;648:9;641:21;622:4;679:56;731:2;720:9;716:18;708:6;679:56;:::i;746:131::-;-1:-1:-1;;;;;821:31:78;;811:42;;801:70;;867:1;864;857:12;882:315;950:6;958;1011:2;999:9;990:7;986:23;982:32;979:52;;;1027:1;1024;1017:12;979:52;1066:9;1053:23;1085:31;1110:5;1085:31;:::i;:::-;1135:5;1187:2;1172:18;;;;1159:32;;-1:-1:-1;;;882:315:78:o;1202:247::-;1261:6;1314:2;1302:9;1293:7;1289:23;1285:32;1282:52;;;1330:1;1327;1320:12;1282:52;1369:9;1356:23;1388:31;1413:5;1388:31;:::i;1662:180::-;1721:6;1774:2;1762:9;1753:7;1749:23;1745:32;1742:52;;;1790:1;1787;1780:12;1742:52;-1:-1:-1;1813:23:78;;1662:180;-1:-1:-1;1662:180:78:o;2029:315::-;2097:6;2105;2158:2;2146:9;2137:7;2133:23;2129:32;2126:52;;;2174:1;2171;2164:12;2126:52;2210:9;2197:23;2187:33;;2270:2;2259:9;2255:18;2242:32;2283:31;2308:5;2283:31;:::i;:::-;2333:5;2323:15;;;2029:315;;;;;:::o;2349:347::-;2400:8;2410:6;2464:3;2457:4;2449:6;2445:17;2441:27;2431:55;;2482:1;2479;2472:12;2431:55;-1:-1:-1;2505:20:78;;-1:-1:-1;;;;;2537:30:78;;2534:50;;;2580:1;2577;2570:12;2534:50;2617:4;2609:6;2605:17;2593:29;;2669:3;2662:4;2653:6;2645;2641:19;2637:30;2634:39;2631:59;;;2686:1;2683;2676:12;2631:59;2349:347;;;;;:::o;2701:409::-;2771:6;2779;2832:2;2820:9;2811:7;2807:23;2803:32;2800:52;;;2848:1;2845;2838:12;2800:52;2888:9;2875:23;-1:-1:-1;;;;;2913:6:78;2910:30;2907:50;;;2953:1;2950;2943:12;2907:50;2992:58;3042:7;3033:6;3022:9;3018:22;2992:58;:::i;:::-;3069:8;;2966:84;;-1:-1:-1;2701:409:78;-1:-1:-1;;;;2701:409:78:o;3297:250::-;3382:1;3392:113;3406:6;3403:1;3400:13;3392:113;;;3482:11;;;3476:18;3463:11;;;3456:39;3428:2;3421:10;3392:113;;;-1:-1:-1;;3539:1:78;3521:16;;3514:27;3297:250::o;3552:270::-;3593:3;3631:5;3625:12;3658:6;3653:3;3646:19;3674:76;3743:6;3736:4;3731:3;3727:14;3720:4;3713:5;3709:16;3674:76;:::i;:::-;3804:2;3783:15;-1:-1:-1;;3779:29:78;3770:39;;;;3811:4;3766:50;;3552:270;-1:-1:-1;;3552:270:78:o;3827:298::-;4010:6;4003:14;3996:22;3985:9;3978:41;4055:2;4050;4039:9;4035:18;4028:30;3959:4;4075:44;4115:2;4104:9;4100:18;4092:6;4075:44;:::i;4130:544::-;4209:6;4217;4225;4278:2;4266:9;4257:7;4253:23;4249:32;4246:52;;;4294:1;4291;4284:12;4246:52;4333:9;4320:23;4352:31;4377:5;4352:31;:::i;:::-;4402:5;-1:-1:-1;4458:2:78;4443:18;;4430:32;-1:-1:-1;;;;;4474:30:78;;4471:50;;;4517:1;4514;4507:12;4471:50;4556:58;4606:7;4597:6;4586:9;4582:22;4556:58;:::i;:::-;4130:544;;4633:8;;-1:-1:-1;4530:84:78;;-1:-1:-1;;;;4130:544:78:o;4679:248::-;4747:6;4755;4808:2;4796:9;4787:7;4783:23;4779:32;4776:52;;;4824:1;4821;4814:12;4776:52;-1:-1:-1;;4847:23:78;;;4917:2;4902:18;;;4889:32;;-1:-1:-1;4679:248:78:o;5124:127::-;5185:10;5180:3;5176:20;5173:1;5166:31;5216:4;5213:1;5206:15;5240:4;5237:1;5230:15;5256:275;5327:2;5321:9;5392:2;5373:13;;-1:-1:-1;;5369:27:78;5357:40;;-1:-1:-1;;;;;5412:34:78;;5448:22;;;5409:62;5406:88;;;5474:18;;:::i;:::-;5510:2;5503:22;5256:275;;-1:-1:-1;5256:275:78:o;5536:764::-;5605:6;5636:2;5679;5667:9;5658:7;5654:23;5650:32;5647:52;;;5695:1;5692;5685:12;5647:52;5735:9;5722:23;-1:-1:-1;;;;;5805:2:78;5797:6;5794:14;5791:34;;;5821:1;5818;5811:12;5791:34;5859:6;5848:9;5844:22;5834:32;;5904:7;5897:4;5893:2;5889:13;5885:27;5875:55;;5926:1;5923;5916:12;5875:55;5962:2;5949:16;5984:2;5980;5977:10;5974:36;;;5990:18;;:::i;:::-;6032:53;6075:2;6056:13;;-1:-1:-1;;6052:27:78;6048:36;;6032:53;:::i;:::-;6019:66;;6108:2;6101:5;6094:17;6148:7;6143:2;6138;6134;6130:11;6126:20;6123:33;6120:53;;;6169:1;6166;6159:12;6120:53;6224:2;6219;6215;6211:11;6206:2;6199:5;6195:14;6182:45;6268:1;6247:14;;;6243:23;;;6236:34;;;;-1:-1:-1;6251:5:78;5536:764;-1:-1:-1;;;5536:764:78:o;6305:626::-;6402:6;6410;6463:2;6451:9;6442:7;6438:23;6434:32;6431:52;;;6479:1;6476;6469:12;6431:52;6519:9;6506:23;-1:-1:-1;;;;;6589:2:78;6581:6;6578:14;6575:34;;;6605:1;6602;6595:12;6575:34;6643:6;6632:9;6628:22;6618:32;;6688:7;6681:4;6677:2;6673:13;6669:27;6659:55;;6710:1;6707;6700:12;6659:55;6750:2;6737:16;6776:2;6768:6;6765:14;6762:34;;;6792:1;6789;6782:12;6762:34;6845:7;6840:2;6830:6;6827:1;6823:14;6819:2;6815:23;6811:32;6808:45;6805:65;;;6866:1;6863;6856:12;6805:65;6897:2;6889:11;;;;;6919:6;;-1:-1:-1;6305:626:78;;-1:-1:-1;;;;6305:626:78:o;6936:800::-;7096:4;7125:2;7165;7154:9;7150:18;7195:2;7184:9;7177:21;7218:6;7253;7247:13;7284:6;7276;7269:22;7322:2;7311:9;7307:18;7300:25;;7384:2;7374:6;7371:1;7367:14;7356:9;7352:30;7348:39;7334:53;;7422:2;7414:6;7410:15;7443:1;7453:254;7467:6;7464:1;7461:13;7453:254;;;7560:2;7556:7;7544:9;7536:6;7532:22;7528:36;7523:3;7516:49;7588:39;7620:6;7611;7605:13;7588:39;:::i;:::-;7578:49;-1:-1:-1;7685:12:78;;;;7650:15;;;;7489:1;7482:9;7453:254;;;-1:-1:-1;7724:6:78;;6936:800;-1:-1:-1;;;;;;;6936:800:78:o;7994:219::-;8143:2;8132:9;8125:21;8106:4;8163:44;8203:2;8192:9;8188:18;8180:6;8163:44;:::i;8218:355::-;8420:2;8402:21;;;8459:2;8439:18;;;8432:30;8498:33;8493:2;8478:18;;8471:61;8564:2;8549:18;;8218:355::o;9639:160::-;9704:20;;9760:13;;9753:21;9743:32;;9733:60;;9789:1;9786;9779:12;9733:60;9639:160;;;:::o;9804:1238::-;9911:6;9919;9927;9980:2;9968:9;9959:7;9955:23;9951:32;9948:52;;;9996:1;9993;9986:12;9948:52;10035:9;10022:23;10054:31;10079:5;10054:31;:::i;:::-;10104:5;-1:-1:-1;10128:2:78;10166:18;;;10153:32;-1:-1:-1;;;;;10234:14:78;;;10231:34;;;10261:1;10258;10251:12;10231:34;10299:6;10288:9;10284:22;10274:32;;10344:7;10337:4;10333:2;10329:13;10325:27;10315:55;;10366:1;10363;10356:12;10315:55;10402:2;10389:16;10424:2;10420;10417:10;10414:36;;;10430:18;;:::i;:::-;10476:2;10473:1;10469:10;10459:20;;10499:28;10523:2;10519;10515:11;10499:28;:::i;:::-;10561:15;;;10631:11;;;10627:20;;;10592:12;;;;10659:19;;;10656:39;;;10691:1;10688;10681:12;10656:39;10715:11;;;;10735:223;10751:6;10746:3;10743:15;10735:223;;;10833:3;10820:17;10805:32;;10850:33;10875:7;10850:33;:::i;:::-;10896:20;;;10768:12;;;;10936;;;;10735:223;;;10977:5;10967:15;;;;;;;;11001:35;11032:2;11021:9;11017:18;11001:35;:::i;:::-;10991:45;;9804:1238;;;;;:::o;11047:127::-;11108:10;11103:3;11099:20;11096:1;11089:31;11139:4;11136:1;11129:15;11163:4;11160:1;11153:15;11179:127;11240:10;11235:3;11231:20;11228:1;11221:31;11271:4;11268:1;11261:15;11295:4;11292:1;11285:15;11311:135;11350:3;11371:17;;;11368:43;;11391:18;;:::i;:::-;-1:-1:-1;11438:1:78;11427:13;;11311:135::o;11451:406::-;11653:2;11635:21;;;11692:2;11672:18;;;11665:30;11731:34;11726:2;11711:18;;11704:62;-1:-1:-1;;;11797:2:78;11782:18;;11775:40;11847:3;11832:19;;11451:406::o;11862:125::-;11927:9;;;11948:10;;;11945:36;;;11961:18;;:::i;12683:521::-;12760:4;12766:6;12826:11;12813:25;12920:2;12916:7;12905:8;12889:14;12885:29;12881:43;12861:18;12857:68;12847:96;;12939:1;12936;12929:12;12847:96;12966:33;;13018:20;;;-1:-1:-1;;;;;;13050:30:78;;13047:50;;;13093:1;13090;13083:12;13047:50;13126:4;13114:17;;-1:-1:-1;13157:14:78;13153:27;;;13143:38;;13140:58;;;13194:1;13191;13184:12;13209:360;13420:6;13412;13407:3;13394:33;13490:2;13486:15;;;;-1:-1:-1;;13482:53:78;13446:16;;13471:65;;;13560:2;13552:11;;13209:360;-1:-1:-1;13209:360:78:o;13978:128::-;14045:9;;;14066:11;;;14063:37;;;14080:18;;:::i;14111:380::-;14190:1;14186:12;;;;14233;;;14254:61;;14308:4;14300:6;14296:17;14286:27;;14254:61;14361:2;14353:6;14350:14;14330:18;14327:38;14324:161;;14407:10;14402:3;14398:20;14395:1;14388:31;14442:4;14439:1;14432:15;14470:4;14467:1;14460:15;14496:810;-1:-1:-1;;;14902:3:78;14895:36;14877:3;14960:6;14954:13;14976:75;15044:6;15039:2;15034:3;15030:12;15023:4;15015:6;15011:17;14976:75;:::i;:::-;-1:-1:-1;;;15110:2:78;15070:16;;;15102:11;;;15095:40;15160:13;;15182:76;15160:13;15244:2;15236:11;;15229:4;15217:17;;15182:76;:::i;:::-;15278:17;15297:2;15274:26;;14496:810;-1:-1:-1;;;;14496:810:78:o;15311:184::-;15381:6;15434:2;15422:9;15413:7;15409:23;15405:32;15402:52;;;15450:1;15447;15440:12;15402:52;-1:-1:-1;15473:16:78;;15311:184;-1:-1:-1;15311:184:78:o;15500:209::-;15532:1;15558;15548:132;;15602:10;15597:3;15593:20;15590:1;15583:31;15637:4;15634:1;15627:15;15665:4;15662:1;15655:15;15548:132;-1:-1:-1;15694:9:78;;15500:209::o;15714:439::-;-1:-1:-1;;;;;15943:32:78;;15925:51;;16012:2;16007;15992:18;;15985:30;;;-1:-1:-1;;16032:56:78;;16069:18;;16061:6;16032:56;:::i;:::-;16024:64;;16138:6;16131:14;16124:22;16119:2;16108:9;16104:18;16097:50;15714:439;;;;;;:::o;16158:314::-;-1:-1:-1;;;;;16333:32:78;;16315:51;;16402:2;16397;16382:18;;16375:30;;;-1:-1:-1;;16422:44:78;;16447:18;;16439:6;16422:44;:::i;16603:545::-;16705:2;16700:3;16697:11;16694:448;;;16741:1;16766:5;16762:2;16755:17;16811:4;16807:2;16797:19;16881:2;16869:10;16865:19;16862:1;16858:27;16852:4;16848:38;16917:4;16905:10;16902:20;16899:47;;;-1:-1:-1;16940:4:78;16899:47;16995:2;16990:3;16986:12;16983:1;16979:20;16973:4;16969:31;16959:41;;17050:82;17068:2;17061:5;17058:13;17050:82;;;17113:17;;;17094:1;17083:13;17050:82;;;17054:3;;;16694:448;16603:545;;;:::o;17324:1352::-;17450:3;17444:10;-1:-1:-1;;;;;17469:6:78;17466:30;17463:56;;;17499:18;;:::i;:::-;17528:97;17618:6;17578:38;17610:4;17604:11;17578:38;:::i;:::-;17572:4;17528:97;:::i;:::-;17680:4;;17744:2;17733:14;;17761:1;17756:663;;;;18463:1;18480:6;18477:89;;;-1:-1:-1;18532:19:78;;;18526:26;18477:89;-1:-1:-1;;17281:1:78;17277:11;;;17273:24;17269:29;17259:40;17305:1;17301:11;;;17256:57;18579:81;;17726:944;;17756:663;16550:1;16543:14;;;16587:4;16574:18;;-1:-1:-1;;17792:20:78;;;17910:236;17924:7;17921:1;17918:14;17910:236;;;18013:19;;;18007:26;17992:42;;18105:27;;;;18073:1;18061:14;;;;17940:19;;17910:236;;;17914:3;18174:6;18165:7;18162:19;18159:201;;;18235:19;;;18229:26;-1:-1:-1;;18318:1:78;18314:14;;;18330:3;18310:24;18306:37;18302:42;18287:58;18272:74;;18159:201;-1:-1:-1;;;;;18406:1:78;18390:14;;;18386:22;18373:36;;-1:-1:-1;17324:1352:78:o;18681:381::-;18878:2;18867:9;18860:21;18841:4;18904:44;18944:2;18933:9;18929:18;18921:6;18904:44;:::i;:::-;18996:9;18988:6;18984:22;18979:2;18968:9;18964:18;18957:50;19024:32;19049:6;19041;19024:32;:::i;19419:485::-;-1:-1:-1;;;;;19604:32:78;;19586:51;;19673:2;19668;19653:18;;19646:30;;;19692:18;;19685:34;;;19712:6;19761;19756:2;19741:18;;19728:48;19825:1;19796:22;;;19820:2;19792:31;;;19785:42;;;;19888:2;19867:15;;;-1:-1:-1;;19863:29:78;19848:45;19844:54;;19419:485;-1:-1:-1;;19419:485:78:o;19909:168::-;19982:9;;;20013;;20030:15;;;20024:22;;20010:37;20000:71;;20051:18;;:::i;20082:136::-;20121:3;20149:5;20139:39;;20158:18;;:::i;:::-;-1:-1:-1;;;20194:18:78;;20082:136::o;20584:127::-;20645:10;20640:3;20636:20;20633:1;20626:31;20676:4;20673:1;20666:15;20700:4;20697:1;20690:15;20716:287;20845:3;20883:6;20877:13;20899:66;20958:6;20953:3;20946:4;20938:6;20934:17;20899:66;:::i;:::-;20981:16;;;;;20716:287;-1:-1:-1;;20716:287:78:o",
    "linkReferences": {},
    "immutableReferences": {
      "35188": [
        {
          "start": 505,
          "length": 32
        },
        {
          "start": 2154,
          "length": 32
        },
        {
          "start": 3541,
          "length": 32
        },
        {
          "start": 4370,
          "length": 32
        }
      ],
      "35190": [
        {
          "start": 900,
          "length": 32
        },
        {
          "start": 3705,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "accountImplementation()": "11464fbe",
    "checkUpkeep(bytes)": "6e04ff0d",
    "contractURI()": "e8a3d485",
    "createAccount(address,bytes)": "d8fd8f44",
    "entrypoint()": "a65d69d4",
    "getAccounts(uint256,uint256)": "e68a7c3b",
    "getAccountsOfSigner(address)": "0e6254fd",
    "getAddress(address,bytes)": "8878ed33",
    "getAllAccounts()": "08e93d0a",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initializeUpkeepAndRouter(address)": "a9709e15",
    "isRegistered(address)": "c3c5a547",
    "multicall(bytes[])": "ac9650d8",
    "onRegister(bytes32)": "83a03f8c",
    "onSignerAdded(address,bytes32)": "0b61e12b",
    "onSignerRemoved(address,bytes32)": "9387a380",
    "performUpkeep(bytes)": "4585e33b",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setContractURI(string)": "938e3d7b",
    "totalAccounts()": "58451f97"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entrypoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accountAdmin\",\"type\":\"address\"}],\"name\":\"AccountCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"SignerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"SignerRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accountImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entrypoint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"getAccounts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"getAccountsOfSigner\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adminSigner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAccounts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_upkeep\",\"type\":\"address\"}],\"name\":\"initializeUpkeepAndRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"onRegister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"onSignerAdded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"onSignerRemoved\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAccounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"checkUpkeep function called off-chain by Chainlink Automation infrastructureChecks for balances elegible for swap\",\"returns\":{\"performData\":\"The performData parameter triggering the performUpkeep\",\"upkeepNeeded\":\"A boolean indicating whether upkeep is needed.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initializeUpkeepAndRouter(address)\":{\"details\":\"Initializes the Factory upkeep using Chainlink Automation.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"performUpkeep(bytes)\":{\"details\":\"performUpkeep function called by Chainlink Automation infrastructure after checkUpkeep checks\",\"params\":{\"performData\":\"the data inputed by Chainlink Automation retrieved by checkUpkeep\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AccountCreated(address,address)\":{\"notice\":\"Emitted when a new Account is created.\"},\"SignerAdded(address,address)\":{\"notice\":\"Emitted when a new signer is added to an Account.\"},\"SignerRemoved(address,address)\":{\"notice\":\"Emitted when a new signer is added to an Account.\"}},\"kind\":\"user\",\"methods\":{\"accountImplementation()\":{\"notice\":\"Returns the address of the Account implementation.\"},\"checkUpkeep(bytes)\":{\"notice\":\"This function is external, view, and implements the Upkeep interface.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"createAccount(address,bytes)\":{\"notice\":\"Deploys a new Account for admin.\"},\"getAccounts(uint256,uint256)\":{\"notice\":\"Returns all accounts between the given indices.\"},\"getAccountsOfSigner(address)\":{\"notice\":\"Returns all accounts that the given address is a signer of.\"},\"getAddress(address,bytes)\":{\"notice\":\"Returns the address of an Account that would be deployed with the given admin signer.\"},\"getAllAccounts()\":{\"notice\":\"Returns all accounts created on the factory.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"isRegistered(address)\":{\"notice\":\"Returns whether an account is registered on this factory.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"onRegister(bytes32)\":{\"notice\":\"Callback function for an Account to register itself on the factory.\"},\"onSignerRemoved(address,bytes32)\":{\"notice\":\"Callback function for an Account to un-register its signers.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"totalAccounts()\":{\"notice\":\"Returns the total number of accounts.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/AccountFactory.sol\":\"AccountFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/chainlink/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@thirdweb/=lib/thirdweb-smartaccount/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":std/=lib/forge-std/src/\",\":thirdweb-smartaccount/=lib/thirdweb-smartaccount/\"]},\"sources\":{\"lib/chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x5d354afa1a97dffe66094397cdcbb0c14713cf3d609d88fd8f9891010e9a351a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3613ee132e1f05b3e23955db6a849966487fab8ea33e9bb70d6f038fc48c0608\",\"dweb:/ipfs/QmRgdumWFMX35vSrZpCCvXDTvRBVXRkexnxoZqqfnGisnZ\"]},\"lib/chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0x40e5ae0eff4edd0740c1b5590d09c344f84dee031e82d5294563e99603774f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24a134c3bea2e8a6ed29f109e422a9bafb3f43523235188618cf016ed86fafc8\",\"dweb:/ipfs/QmPUGoVde38kbteT358jsskzh5spoJtUoaNZ8UJWVqP3im\"]},\"lib/chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e\",\"dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/thirdweb-smartaccount/eip/ERC1271.sol\":{\"keccak256\":\"0xce12f73b64a1d954ce3b96cc83974d9a9d7b1e6f34e75ed8c1fdcf19ed92574e\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://ac19729c3f76aa804eff7dd0365bfaff3871b22953908a26cc0dd07a0319c6c0\",\"dweb:/ipfs/QmTQMZGceJ4QvWAwngCEbt6PfQhZMHWhuzE8wWVC8yR7Ro\"]},\"lib/thirdweb-smartaccount/eip/ERC165.sol\":{\"keccak256\":\"0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c\",\"dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr\"]},\"lib/thirdweb-smartaccount/eip/interface/IERC165.sol\":{\"keccak256\":\"0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a\",\"dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R\"]},\"lib/thirdweb-smartaccount/extension/Multicall.sol\":{\"keccak256\":\"0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e\",\"dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ\"]},\"lib/thirdweb-smartaccount/extension/interface/IAccountPermissions.sol\":{\"keccak256\":\"0xfb7f2234c9c03480db9241fb9ca487a6b671c03f27836abbb33e24e79f401c52\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://156c44d9bc550c602e964dd655112de25a3966cfd6870e9631b9d841cebe028b\",\"dweb:/ipfs/Qmbq5ozkA52o86eGxDG3wMBYtMZM6dMatnA3B64sbYjADJ\"]},\"lib/thirdweb-smartaccount/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a\",\"dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr\"]},\"lib/thirdweb-smartaccount/extension/interface/IMulticall.sol\":{\"keccak256\":\"0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca\",\"dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar\"]},\"lib/thirdweb-smartaccount/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d\",\"dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS\"]},\"lib/thirdweb-smartaccount/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee\",\"dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG\"]},\"lib/thirdweb-smartaccount/extension/upgradeable/AccountPermissions.sol\":{\"keccak256\":\"0x24c130546924f7838c676f71585d30bd7891ee51098d4b0e39a2be43acce3852\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f7ae95a9bd317b220d1c8fe99c4eca2ea3dca14456f225e17accf28e5acd4f03\",\"dweb:/ipfs/QmaAUPY6C1diScgonDxeUHjr6AezSpD5iJU9vZ5Vdt97Ws\"]},\"lib/thirdweb-smartaccount/extension/upgradeable/ContractMetadata.sol\":{\"keccak256\":\"0xe42f63bdf826446047de0825bc930d8a157cf613cf35b74cd10ade9246ed5907\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a907ddcadb07f70600753b37b129d7be234f44cd557aaa0a5833b0a796a2a826\",\"dweb:/ipfs/QmdhJ3Y4N6nnQDgLCPVmyRU26sgJfkLxUnqgSt911Eqmms\"]},\"lib/thirdweb-smartaccount/extension/upgradeable/Initializable.sol\":{\"keccak256\":\"0x359ee85a4b1b32f7e875ff4742ce3b347a036e2d065675494889e9753fc6f64a\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://daa0a7f80cf27545e7040c2bc32486c4d9a8a8a75a7cde5ad6ea4b85f75f6fbf\",\"dweb:/ipfs/QmZmKPCTUUKN8BKo2aCGFRYVAkZtEs3R6Ysx1m3Kibv4Ai\"]},\"lib/thirdweb-smartaccount/extension/upgradeable/Permissions.sol\":{\"keccak256\":\"0xc543a8f28fd99b1c4f313fc74f1549e96a645681e11d50e4de54f6a7a6f1d3e9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://61b0641aed031275f1cca7fa202adf9535ae2295fcde96544c059f770caf0080\",\"dweb:/ipfs/QmfQJDmhTgm3qVxN6jN3diZyCKYBXuEYwb247FF1KKwxdL\"]},\"lib/thirdweb-smartaccount/extension/upgradeable/PermissionsEnumerable.sol\":{\"keccak256\":\"0xd69a09eb5078dc85e9fb3e59f578c267e7694f2bc9f995461225b596af93b07f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://08fa417baf97ef109876f76a0040e28d9c7b9edafb52189352642790f10a335c\",\"dweb:/ipfs/QmZDMmbLDuG48VUZLvAZnkUuNexyZ3ys1hoqFGn7hvtNyc\"]},\"lib/thirdweb-smartaccount/external-deps/openzeppelin/proxy/Clones.sol\":{\"keccak256\":\"0x0e1fe02da411a6293004e5ee85bdd1facef5f1b6ef2aab8d36c73f0d77b448db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5bfd474499866fe24ac6b88eb92969395baf1e644a0f0b0054e66f9ae90c00e\",\"dweb:/ipfs/QmS5j268UauZARToNJazEBJDWvWM35j8kHx779PF3c5rib\"]},\"lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xfa15dab6578501dc97f9b3fbb5c149f687556f1c9e05f8e308e203487202a826\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d78ecefcc13f40d148f851c3ee037c52e6bc4d9cf99bff47202372e8b12ebb4\",\"dweb:/ipfs/QmYSFk1hKNeW5M1SXg8JREVSw3EkTtheHm6je8kFzJCwfn\"]},\"lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3105f99cacb873592e34c8a0ac41c082e640ca5ba5f1269f9d156f72780aabb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52d27f9e2e65e3f9cd8376a4cd30370b065d355f810458872115e0b23ca483d7\",\"dweb:/ipfs/QmQ9rofayAoymc4pgjqCss4AmkGGKJEsDcieqPMsKtKByC\"]},\"lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0xe703814ee88fca440ac66fbfbbf3a5085d9028237145e6c3447c7ca44d1177ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c09e9ee347c311074d0cce306cef98c1b9ab7d06ff360031c4c71214e1395ef\",\"dweb:/ipfs/QmTE9VX4ejp2D5wimaPvzoAZefAMVNybCwdYJm2sEwfXni\"]},\"lib/thirdweb-smartaccount/external-deps/openzeppelin/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x2f1ee59fbdefde38381074fcd365a919dbd9ab6d6240e07b1753961f8e6fcd3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://108be415a1fe17915fa42ba5eb6cdf812b25d88b299c8dc05721241078871ebe\",\"dweb:/ipfs/Qmc8AJ6jfL3jTi597Z86hkQYEX2FaP66s1tWs9uuEyTRPn\"]},\"lib/thirdweb-smartaccount/external-deps/openzeppelin/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"lib/thirdweb-smartaccount/external-deps/openzeppelin/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"lib/thirdweb-smartaccount/lib/Address.sol\":{\"keccak256\":\"0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5\",\"dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn\"]},\"lib/thirdweb-smartaccount/lib/BytesLib.sol\":{\"keccak256\":\"0xa6eb27284b96770c4eb22be18bb0c71f73caff260e6223abb5f0fdaf3788e515\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://12bc240624a3dc7eb720af95f7b9532984864520c251be31a0b310a214e8af65\",\"dweb:/ipfs/QmTktZehWmPBNfaNw1VVm6MySkmNaPQeJyuuLjuBma4wCA\"]},\"lib/thirdweb-smartaccount/lib/Strings.sol\":{\"keccak256\":\"0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb\",\"dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/IAccount.sol\":{\"keccak256\":\"0x98f2d41bd69f4b46a697957681d2e14cf2f10b6133ede864b838f821899d4e41\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ddaae235044c84994f693a38030d3923bb8e65f9b7f1fc5028a424a16f7a723c\",\"dweb:/ipfs/QmdXzv1k9mdECGxUDigBf6GAb3bn3qMdTKcmGadJ4EoLzL\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/IAccountCore.sol\":{\"keccak256\":\"0xd1fc238376d4fa8c881f06159662b4c5b855c633fad840d97b1abc368b701a83\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://990de8226236d213aa9b8eef60d96782c58cc226a0f4ec0ea6c0c63a2a3019bc\",\"dweb:/ipfs/QmWoUNKgiAH8vPfsNsjEtSNsg6Rmgnqp4fU9Zaej4iKRsE\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/IAccountFactory.sol\":{\"keccak256\":\"0xc57560766cadb9834bed6f7ade0d8968152dd8118e46211d084f3aa476dd3169\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://189672029caee09d461fc4bc8d6d9fdbdc25ce0ce96e0b07cd47c0ad739cccc3\",\"dweb:/ipfs/QmeBzdQHTuupCW5LeuGCqxJYSDXTnprHcBegBY3v93ahwW\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/IAccountFactoryCore.sol\":{\"keccak256\":\"0x8a518d843fb5249c28df0b50d8beb0726f8114f42dd74d90dbfe62b1b0c26856\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://48379dc33cd42392ce0d988585dc62101c45a24ab554e3ab1e5e6d324845ef6c\",\"dweb:/ipfs/QmRRmYDzyL5x82pWSDWJSHniNFP87aQdXYqfWtj4g9aw5s\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/IAggregator.sol\":{\"keccak256\":\"0xf25b6da72dfcb022d6d3c16aaa4a2d9860bf51483356cb26b314b37a01e7a1bb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://800a724a532870ae3de64fe798352427c9a3168cc44fe1320f1fecea8126df03\",\"dweb:/ipfs/QmNb1s7rDkKePrE4iKMQ3UJyrsScZRomLWf4aj6QBJnRAZ\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/IEntrypoint.sol\":{\"keccak256\":\"0x8108c62da675ac3e840e56c07dc74f04e6993d1f23812821082a92cfd6a079b1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://abc88d73e8e22622456cc4079e8df66ce81a66e6fd280731c63875d7cb667f0c\",\"dweb:/ipfs/QmVpxV56vM6TbZEK5idNEtdvHtQ3dXMJdWXusm6cit3FPo\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/INonceManager.sol\":{\"keccak256\":\"0xf509795f7336c849ac5d247d71af20376b67201c647aa847fd17ca8e7909dec3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b3418173e37999ba0015bb352ab1b9dfbe1296143a8565ea3d3ce7a9a9e087b4\",\"dweb:/ipfs/QmS93Dw1FfPj5kHk9cLrh1VssbwNyaKKo5LNmEHwxzDqNp\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/IStakeManager.sol\":{\"keccak256\":\"0x61562da096c3c3da5755bbb5b552ea713723d7be36975cd401022ff321753b73\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e6bcd63477257007d2fcd92b38c8105cb82c2d0eae3836ac856839234481f4ab\",\"dweb:/ipfs/QmZuNE3y1RvtRXYiw3eiT25YQH2SAa1kFcpxAgW9KX6KtZ\"]},\"lib/thirdweb-smartaccount/prebuilts/account/utils/AccountCore.sol\":{\"keccak256\":\"0x41257c708182d057736a9089c01c24a8c7983f3953cdfa99ee16539066412fe2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ed83fa3d50dc45e98a0150e3428328893e17fd487cc147db3f9d586d30fdf17b\",\"dweb:/ipfs/QmTbx5MqAAiBLNeuAmFEyXicoxqH1Q2YgkRB2C7ZoxArkJ\"]},\"lib/thirdweb-smartaccount/prebuilts/account/utils/AccountCoreStorage.sol\":{\"keccak256\":\"0x2cc0f23b78b77cb625ca9f16a4098d9695dae300f50f627ff9447d0fee4c6d6c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://accce31e4cf16735ee72fb4619582a9a0441fd07c5259dc7dbefd758121b2383\",\"dweb:/ipfs/Qmdh4i9mbjFqNncakFBGppkNVvxRkhQfpLktjbi3LorTue\"]},\"lib/thirdweb-smartaccount/prebuilts/account/utils/AccountExtension.sol\":{\"keccak256\":\"0xd587034549a0d54fa035427ad87737cdcdba37e7c14edc36f836336521d2f432\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://10375a7085bd4a74074a287905de656c74c934576ee640db3d446cf895266f7e\",\"dweb:/ipfs/QmXJno6iZfHmdoJktv4PqstPBYwv14sECZA6HXTwyCtGjq\"]},\"lib/thirdweb-smartaccount/prebuilts/account/utils/BaseAccount.sol\":{\"keccak256\":\"0xe4c645052e3223dc617ce4fdb8c44eee6047f50187b38d2b19e8f88575a6362d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://25f657768c1c652e7e68ba8ba3c4e667ff22872a7476c902ea7966092923f4aa\",\"dweb:/ipfs/QmRke55xXKGsKMoNFUtm17t2nqmgfSHfEgx4vrib8c3i7D\"]},\"lib/thirdweb-smartaccount/prebuilts/account/utils/BaseAccountFactory.sol\":{\"keccak256\":\"0xcfb39e6e3f79edb20349258ec73ae268535fffdecd9da1735b0930162bad1a32\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ab1e486393e7988a10a5e235e05ca506db57c91d1151aedb8b0c684829719f13\",\"dweb:/ipfs/QmVNm7Vf32ubfUCZKVRnhHkfDtXdc9ozLmWkp5JZEZPBWT\"]},\"lib/thirdweb-smartaccount/prebuilts/account/utils/Helpers.sol\":{\"keccak256\":\"0x362ebd624a0a4893c8d80f2dc86b27198a6f22d3bca6d4ad648cd4f12b8b2e5d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bb43f98886861a0d1a6a80aaf8bfda8a2e8dace798e559dcba9fe5ebd2738817\",\"dweb:/ipfs/QmUfAk7cbLqfhJdGgZeCqdzHFxrtjQgcbGtcQEbioLUDuS\"]},\"lib/thirdweb-smartaccount/prebuilts/account/utils/UserOperation.sol\":{\"keccak256\":\"0x3f3aa133687f459f9fb538835a54aa769418dd6303a02c9fa691690fcc397964\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://993f8daa2320ca301167767fff33a6989697394fe6dc65905edc4b32368850b5\",\"dweb:/ipfs/Qmaymg8dsE6mrfAWJPs4DXbHR1wxESJnxyFhNkm7AmKBCK\"]},\"src/Account.sol\":{\"keccak256\":\"0x8a96582afd06a1ad2cb60bf5de23a53c3c015a3f048ed7754fe24a61567a7b67\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f0c00b1520fb90ff8fc8564feeb27963f074ede28244862f6bbf4161abc9b1fd\",\"dweb:/ipfs/QmWxTce1498naUrYc9KNv8TMnB5PYbZAtoTtX9XUTaiyGn\"]},\"src/AccountFactory.sol\":{\"keccak256\":\"0x129486f9baf6257b50d542020c44544ae523b26fa05bd3d40c037b112b6e5949\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://80eea0d719bae7b4d58d3866e136a7165329c09eb865be8dd94a5ec5c11c7ce4\",\"dweb:/ipfs/QmeJ9xiUfZvCNzbTZrs6vgRQdfFEy6ffsnuhkEmxQSh2pm\"]},\"src/utils/IERC4626.sol\":{\"keccak256\":\"0x4d2adb06959f1bdf2b08c941a342412d8d295bc1cd1c3fe0997096df6b459a50\",\"urls\":[\"bzz-raw://e5baaae82c9dadf55f96c25b17864acf727be8d649531c771363d42c21c17868\",\"dweb:/ipfs/QmaU7XGHbfcuwFkA1XooaFEKvXTFtCA3Jiip6yu22P38Sk\"]},\"src/utils/IPool.sol\":{\"keccak256\":\"0x6cd8210ffe76dce9abb73c619a11b5ca8f359a0cf4af7b9b4ec35c7763f536ea\",\"urls\":[\"bzz-raw://5deb4ee8f2d46d406bc71da05458cca8c5f717fb907e93b10ce1e9eedcd3d490\",\"dweb:/ipfs/QmTtmti5CsLNfWJXMjs2qvw97Du1rQEWJVmrXBjdRjPLde\"]},\"src/utils/IUniswapV2Router01.sol\":{\"keccak256\":\"0x167aada7cde8b658c604466895a9196082792f905f63399cf1acd44747b0c182\",\"urls\":[\"bzz-raw://c8d2ea57a1ec5615caa936962c17588ea23550a4ba64453fa27c38fa83439901\",\"dweb:/ipfs/QmajFA91YZkHQbhwZQYQ183CM3yp79t1H43xwtqPF1kozD\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "contract IEntryPoint",
              "name": "_entrypoint",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlySimulatedBackend"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "accountAdmin",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AccountCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SignerAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SignerRemoved",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "accountImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkUpkeep",
          "outputs": [
            {
              "internalType": "bool",
              "name": "upkeepNeeded",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "performData",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAccount",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entrypoint",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_end",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccounts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccountsOfSigner",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_adminSigner",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllAccounts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_upkeep",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeUpkeepAndRouter"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRegistered",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_salt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onRegister"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_signer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_salt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onSignerAdded"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_signer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_salt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onSignerRemoved"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "performData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "performUpkeep"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAccounts",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "checkUpkeep(bytes)": {
            "details": "checkUpkeep function called off-chain by Chainlink Automation infrastructureChecks for balances elegible for swap",
            "returns": {
              "performData": "The performData parameter triggering the performUpkeep",
              "upkeepNeeded": "A boolean indicating whether upkeep is needed."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initializeUpkeepAndRouter(address)": {
            "details": "Initializes the Factory upkeep using Chainlink Automation."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "performUpkeep(bytes)": {
            "details": "performUpkeep function called by Chainlink Automation infrastructure after checkUpkeep checks",
            "params": {
              "performData": "the data inputed by Chainlink Automation retrieved by checkUpkeep"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "accountImplementation()": {
            "notice": "Returns the address of the Account implementation."
          },
          "checkUpkeep(bytes)": {
            "notice": "This function is external, view, and implements the Upkeep interface."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "createAccount(address,bytes)": {
            "notice": "Deploys a new Account for admin."
          },
          "getAccounts(uint256,uint256)": {
            "notice": "Returns all accounts between the given indices."
          },
          "getAccountsOfSigner(address)": {
            "notice": "Returns all accounts that the given address is a signer of."
          },
          "getAddress(address,bytes)": {
            "notice": "Returns the address of an Account that would be deployed with the given admin signer."
          },
          "getAllAccounts()": {
            "notice": "Returns all accounts created on the factory."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "isRegistered(address)": {
            "notice": "Returns whether an account is registered on this factory."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "onRegister(bytes32)": {
            "notice": "Callback function for an Account to register itself on the factory."
          },
          "onSignerRemoved(address,bytes32)": {
            "notice": "Callback function for an Account to un-register its signers."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "totalAccounts()": {
            "notice": "Returns the total number of accounts."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=lib/chainlink/contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@thirdweb/=lib/thirdweb-smartaccount/",
        ":chainlink/=lib/chainlink/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":std/=lib/forge-std/src/",
        ":thirdweb-smartaccount/=lib/thirdweb-smartaccount/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/AccountFactory.sol": "AccountFactory"
      },
      "libraries": {}
    },
    "sources": {
      "lib/chainlink/contracts/src/v0.8/automation/AutomationBase.sol": {
        "keccak256": "0x5d354afa1a97dffe66094397cdcbb0c14713cf3d609d88fd8f9891010e9a351a",
        "urls": [
          "bzz-raw://3613ee132e1f05b3e23955db6a849966487fab8ea33e9bb70d6f038fc48c0608",
          "dweb:/ipfs/QmRgdumWFMX35vSrZpCCvXDTvRBVXRkexnxoZqqfnGisnZ"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol": {
        "keccak256": "0x40e5ae0eff4edd0740c1b5590d09c344f84dee031e82d5294563e99603774f80",
        "urls": [
          "bzz-raw://24a134c3bea2e8a6ed29f109e422a9bafb3f43523235188618cf016ed86fafc8",
          "dweb:/ipfs/QmPUGoVde38kbteT358jsskzh5spoJtUoaNZ8UJWVqP3im"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
        "keccak256": "0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340",
        "urls": [
          "bzz-raw://b738dba680a6fbc4afc85819743f13f5b7f4790ec8634c9894e1160327b11b6e",
          "dweb:/ipfs/Qmbv3euvQppeBm2g61khcJSRMZWi78xUWzbnjKAvDBnka4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/eip/ERC1271.sol": {
        "keccak256": "0xce12f73b64a1d954ce3b96cc83974d9a9d7b1e6f34e75ed8c1fdcf19ed92574e",
        "urls": [
          "bzz-raw://ac19729c3f76aa804eff7dd0365bfaff3871b22953908a26cc0dd07a0319c6c0",
          "dweb:/ipfs/QmTQMZGceJ4QvWAwngCEbt6PfQhZMHWhuzE8wWVC8yR7Ro"
        ],
        "license": "Apache 2.0"
      },
      "lib/thirdweb-smartaccount/eip/ERC165.sol": {
        "keccak256": "0x0ea604ea6ebe99809a2f620009c8dead82d7fb17ab12b734e1e29c8ceb85938b",
        "urls": [
          "bzz-raw://d9d109154c913e34d107db2cec5608dd8a55075dee35ae77aa78ebb9ff7d856c",
          "dweb:/ipfs/QmW8QKw4kag1Bv68FjSZiGvPP8WDocjdhLSd3ssUXZ5Kgr"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/eip/interface/IERC165.sol": {
        "keccak256": "0x35d0a916f70344a5fcc6c67cb531b6150d2fce43e72a6282385eab02020f2f49",
        "urls": [
          "bzz-raw://75ccd8b9a8b52a93b8097fcb8181b7afb6d72bbe6eaabf434f0481a7a207cc8a",
          "dweb:/ipfs/QmPUZAEE4nwkijcE2amAXAWEVGVG5XaKWGhpgnRwpAf93R"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/extension/Multicall.sol": {
        "keccak256": "0xe4479833f6297a1461478733e14dd0e9b8376da474fa7067cb8937f9ccff2836",
        "urls": [
          "bzz-raw://b03c41daeba7783e04387eff65f6ccc50f2312d895ff3cb9198410976df19c4e",
          "dweb:/ipfs/QmV54V9YQn9TWZhoAsFex8GdCkQmFX6iajYnUv5zU1sxEQ"
        ],
        "license": "Apache 2.0"
      },
      "lib/thirdweb-smartaccount/extension/interface/IAccountPermissions.sol": {
        "keccak256": "0xfb7f2234c9c03480db9241fb9ca487a6b671c03f27836abbb33e24e79f401c52",
        "urls": [
          "bzz-raw://156c44d9bc550c602e964dd655112de25a3966cfd6870e9631b9d841cebe028b",
          "dweb:/ipfs/Qmbq5ozkA52o86eGxDG3wMBYtMZM6dMatnA3B64sbYjADJ"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x41d3f7f43c124e9ff0247cb94f4e8fc8c5a79b1de331c67eb03654154248d7f2",
        "urls": [
          "bzz-raw://fa8d6251cf3a876193cc719b456c02ff23d3f2d5486431e9bdaf290be9a4ce9a",
          "dweb:/ipfs/QmRwnA2q15Vdkc66fz6BAinZM3tjuVNHn5CeGzc7ZFMAzr"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/extension/interface/IMulticall.sol": {
        "keccak256": "0xe2bbd37b8fdb9cc8b933e598512a068ebb214b3f5abc2bc634916def55be4ef3",
        "urls": [
          "bzz-raw://012352099c262348ac755a53b082af520babc6c66dc5f1251fc23609728340ca",
          "dweb:/ipfs/QmcXEgzQ53jdJX5ZNy8zivvUjDq7J8WTnR1yAiwTpkQ2ar"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/extension/interface/IPermissions.sol": {
        "keccak256": "0xc0cd1f87bac474a06f85e2b341b9b57662aee957fc24180d42c872481c2f2ae3",
        "urls": [
          "bzz-raw://7dec3eed451d63867531d693f0be3279fa2c9aef3130f0826c3520c06820fa5d",
          "dweb:/ipfs/QmTYANrcPdd9SCe99DWsKJ19evNRQKQGZeoS1Keew4M2cS"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x2e742c18a4481bad41d56424cd16c52def2fb415f69e5fb5f67d8d979300ff95",
        "urls": [
          "bzz-raw://d9be33bb865e3e82aca540a3e38cbc2bf2e431f9d1bf39c50d6c757e7b7bf3ee",
          "dweb:/ipfs/Qmdad1Xqj5SQ44Bk4bwD2uA36XnGHtqnVYSomKZQvnUBVG"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/extension/upgradeable/AccountPermissions.sol": {
        "keccak256": "0x24c130546924f7838c676f71585d30bd7891ee51098d4b0e39a2be43acce3852",
        "urls": [
          "bzz-raw://f7ae95a9bd317b220d1c8fe99c4eca2ea3dca14456f225e17accf28e5acd4f03",
          "dweb:/ipfs/QmaAUPY6C1diScgonDxeUHjr6AezSpD5iJU9vZ5Vdt97Ws"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/extension/upgradeable/ContractMetadata.sol": {
        "keccak256": "0xe42f63bdf826446047de0825bc930d8a157cf613cf35b74cd10ade9246ed5907",
        "urls": [
          "bzz-raw://a907ddcadb07f70600753b37b129d7be234f44cd557aaa0a5833b0a796a2a826",
          "dweb:/ipfs/QmdhJ3Y4N6nnQDgLCPVmyRU26sgJfkLxUnqgSt911Eqmms"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/extension/upgradeable/Initializable.sol": {
        "keccak256": "0x359ee85a4b1b32f7e875ff4742ce3b347a036e2d065675494889e9753fc6f64a",
        "urls": [
          "bzz-raw://daa0a7f80cf27545e7040c2bc32486c4d9a8a8a75a7cde5ad6ea4b85f75f6fbf",
          "dweb:/ipfs/QmZmKPCTUUKN8BKo2aCGFRYVAkZtEs3R6Ysx1m3Kibv4Ai"
        ],
        "license": "Apache 2.0"
      },
      "lib/thirdweb-smartaccount/extension/upgradeable/Permissions.sol": {
        "keccak256": "0xc543a8f28fd99b1c4f313fc74f1549e96a645681e11d50e4de54f6a7a6f1d3e9",
        "urls": [
          "bzz-raw://61b0641aed031275f1cca7fa202adf9535ae2295fcde96544c059f770caf0080",
          "dweb:/ipfs/QmfQJDmhTgm3qVxN6jN3diZyCKYBXuEYwb247FF1KKwxdL"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/extension/upgradeable/PermissionsEnumerable.sol": {
        "keccak256": "0xd69a09eb5078dc85e9fb3e59f578c267e7694f2bc9f995461225b596af93b07f",
        "urls": [
          "bzz-raw://08fa417baf97ef109876f76a0040e28d9c7b9edafb52189352642790f10a335c",
          "dweb:/ipfs/QmZDMmbLDuG48VUZLvAZnkUuNexyZ3ys1hoqFGn7hvtNyc"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/external-deps/openzeppelin/proxy/Clones.sol": {
        "keccak256": "0x0e1fe02da411a6293004e5ee85bdd1facef5f1b6ef2aab8d36c73f0d77b448db",
        "urls": [
          "bzz-raw://c5bfd474499866fe24ac6b88eb92969395baf1e644a0f0b0054e66f9ae90c00e",
          "dweb:/ipfs/QmS5j268UauZARToNJazEBJDWvWM35j8kHx779PF3c5rib"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xfa15dab6578501dc97f9b3fbb5c149f687556f1c9e05f8e308e203487202a826",
        "urls": [
          "bzz-raw://7d78ecefcc13f40d148f851c3ee037c52e6bc4d9cf99bff47202372e8b12ebb4",
          "dweb:/ipfs/QmYSFk1hKNeW5M1SXg8JREVSw3EkTtheHm6je8kFzJCwfn"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC1155/utils/ERC1155Holder.sol": {
        "keccak256": "0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3",
        "urls": [
          "bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519",
          "dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC1155/utils/ERC1155Receiver.sol": {
        "keccak256": "0x3105f99cacb873592e34c8a0ac41c082e640ca5ba5f1269f9d156f72780aabb8",
        "urls": [
          "bzz-raw://52d27f9e2e65e3f9cd8376a4cd30370b065d355f810458872115e0b23ca483d7",
          "dweb:/ipfs/QmQ9rofayAoymc4pgjqCss4AmkGGKJEsDcieqPMsKtKByC"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC721/utils/ERC721Holder.sol": {
        "keccak256": "0xe703814ee88fca440ac66fbfbbf3a5085d9028237145e6c3447c7ca44d1177ed",
        "urls": [
          "bzz-raw://2c09e9ee347c311074d0cce306cef98c1b9ab7d06ff360031c4c71214e1395ef",
          "dweb:/ipfs/QmTE9VX4ejp2D5wimaPvzoAZefAMVNybCwdYJm2sEwfXni"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/external-deps/openzeppelin/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x2f1ee59fbdefde38381074fcd365a919dbd9ab6d6240e07b1753961f8e6fcd3b",
        "urls": [
          "bzz-raw://108be415a1fe17915fa42ba5eb6cdf812b25d88b299c8dc05721241078871ebe",
          "dweb:/ipfs/Qmc8AJ6jfL3jTi597Z86hkQYEX2FaP66s1tWs9uuEyTRPn"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/external-deps/openzeppelin/utils/cryptography/EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/external-deps/openzeppelin/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/lib/Address.sol": {
        "keccak256": "0xa1e2c06c07422ce6f27ab1c4d4ce62bdc3200e082b735b5e3a75c2e7b61cbc4f",
        "urls": [
          "bzz-raw://cc90229c980f78c582a05386d4621172c7d20dec9ad528a5bf1d59b243fff0a5",
          "dweb:/ipfs/QmcZZLaZ9XU1gWj7b9EBZftPoED3pKEvvFGhS5yBvtMPtn"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/lib/BytesLib.sol": {
        "keccak256": "0xa6eb27284b96770c4eb22be18bb0c71f73caff260e6223abb5f0fdaf3788e515",
        "urls": [
          "bzz-raw://12bc240624a3dc7eb720af95f7b9532984864520c251be31a0b310a214e8af65",
          "dweb:/ipfs/QmTktZehWmPBNfaNw1VVm6MySkmNaPQeJyuuLjuBma4wCA"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/lib/Strings.sol": {
        "keccak256": "0xd8fcca4db8f1678a124ae0d3b4da6c29e9737e5ae03f90f18b84261ae4499568",
        "urls": [
          "bzz-raw://ed0d23694c31613645904cc5d6f3e08ecd34063aeb5bd23ebc9a8223a67f91fb",
          "dweb:/ipfs/QmTf9WBdvzU2dDDTqeSn1g85AkXTe8MfN1pdyaVzm15Cdb"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/IAccount.sol": {
        "keccak256": "0x98f2d41bd69f4b46a697957681d2e14cf2f10b6133ede864b838f821899d4e41",
        "urls": [
          "bzz-raw://ddaae235044c84994f693a38030d3923bb8e65f9b7f1fc5028a424a16f7a723c",
          "dweb:/ipfs/QmdXzv1k9mdECGxUDigBf6GAb3bn3qMdTKcmGadJ4EoLzL"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/IAccountCore.sol": {
        "keccak256": "0xd1fc238376d4fa8c881f06159662b4c5b855c633fad840d97b1abc368b701a83",
        "urls": [
          "bzz-raw://990de8226236d213aa9b8eef60d96782c58cc226a0f4ec0ea6c0c63a2a3019bc",
          "dweb:/ipfs/QmWoUNKgiAH8vPfsNsjEtSNsg6Rmgnqp4fU9Zaej4iKRsE"
        ],
        "license": "Apache 2.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/IAccountFactory.sol": {
        "keccak256": "0xc57560766cadb9834bed6f7ade0d8968152dd8118e46211d084f3aa476dd3169",
        "urls": [
          "bzz-raw://189672029caee09d461fc4bc8d6d9fdbdc25ce0ce96e0b07cd47c0ad739cccc3",
          "dweb:/ipfs/QmeBzdQHTuupCW5LeuGCqxJYSDXTnprHcBegBY3v93ahwW"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/IAccountFactoryCore.sol": {
        "keccak256": "0x8a518d843fb5249c28df0b50d8beb0726f8114f42dd74d90dbfe62b1b0c26856",
        "urls": [
          "bzz-raw://48379dc33cd42392ce0d988585dc62101c45a24ab554e3ab1e5e6d324845ef6c",
          "dweb:/ipfs/QmRRmYDzyL5x82pWSDWJSHniNFP87aQdXYqfWtj4g9aw5s"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/IAggregator.sol": {
        "keccak256": "0xf25b6da72dfcb022d6d3c16aaa4a2d9860bf51483356cb26b314b37a01e7a1bb",
        "urls": [
          "bzz-raw://800a724a532870ae3de64fe798352427c9a3168cc44fe1320f1fecea8126df03",
          "dweb:/ipfs/QmNb1s7rDkKePrE4iKMQ3UJyrsScZRomLWf4aj6QBJnRAZ"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/IEntrypoint.sol": {
        "keccak256": "0x8108c62da675ac3e840e56c07dc74f04e6993d1f23812821082a92cfd6a079b1",
        "urls": [
          "bzz-raw://abc88d73e8e22622456cc4079e8df66ce81a66e6fd280731c63875d7cb667f0c",
          "dweb:/ipfs/QmVpxV56vM6TbZEK5idNEtdvHtQ3dXMJdWXusm6cit3FPo"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/INonceManager.sol": {
        "keccak256": "0xf509795f7336c849ac5d247d71af20376b67201c647aa847fd17ca8e7909dec3",
        "urls": [
          "bzz-raw://b3418173e37999ba0015bb352ab1b9dfbe1296143a8565ea3d3ce7a9a9e087b4",
          "dweb:/ipfs/QmS93Dw1FfPj5kHk9cLrh1VssbwNyaKKo5LNmEHwxzDqNp"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/IStakeManager.sol": {
        "keccak256": "0x61562da096c3c3da5755bbb5b552ea713723d7be36975cd401022ff321753b73",
        "urls": [
          "bzz-raw://e6bcd63477257007d2fcd92b38c8105cb82c2d0eae3836ac856839234481f4ab",
          "dweb:/ipfs/QmZuNE3y1RvtRXYiw3eiT25YQH2SAa1kFcpxAgW9KX6KtZ"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/utils/AccountCore.sol": {
        "keccak256": "0x41257c708182d057736a9089c01c24a8c7983f3953cdfa99ee16539066412fe2",
        "urls": [
          "bzz-raw://ed83fa3d50dc45e98a0150e3428328893e17fd487cc147db3f9d586d30fdf17b",
          "dweb:/ipfs/QmTbx5MqAAiBLNeuAmFEyXicoxqH1Q2YgkRB2C7ZoxArkJ"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/utils/AccountCoreStorage.sol": {
        "keccak256": "0x2cc0f23b78b77cb625ca9f16a4098d9695dae300f50f627ff9447d0fee4c6d6c",
        "urls": [
          "bzz-raw://accce31e4cf16735ee72fb4619582a9a0441fd07c5259dc7dbefd758121b2383",
          "dweb:/ipfs/Qmdh4i9mbjFqNncakFBGppkNVvxRkhQfpLktjbi3LorTue"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/utils/AccountExtension.sol": {
        "keccak256": "0xd587034549a0d54fa035427ad87737cdcdba37e7c14edc36f836336521d2f432",
        "urls": [
          "bzz-raw://10375a7085bd4a74074a287905de656c74c934576ee640db3d446cf895266f7e",
          "dweb:/ipfs/QmXJno6iZfHmdoJktv4PqstPBYwv14sECZA6HXTwyCtGjq"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/utils/BaseAccount.sol": {
        "keccak256": "0xe4c645052e3223dc617ce4fdb8c44eee6047f50187b38d2b19e8f88575a6362d",
        "urls": [
          "bzz-raw://25f657768c1c652e7e68ba8ba3c4e667ff22872a7476c902ea7966092923f4aa",
          "dweb:/ipfs/QmRke55xXKGsKMoNFUtm17t2nqmgfSHfEgx4vrib8c3i7D"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/utils/BaseAccountFactory.sol": {
        "keccak256": "0xcfb39e6e3f79edb20349258ec73ae268535fffdecd9da1735b0930162bad1a32",
        "urls": [
          "bzz-raw://ab1e486393e7988a10a5e235e05ca506db57c91d1151aedb8b0c684829719f13",
          "dweb:/ipfs/QmVNm7Vf32ubfUCZKVRnhHkfDtXdc9ozLmWkp5JZEZPBWT"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/utils/Helpers.sol": {
        "keccak256": "0x362ebd624a0a4893c8d80f2dc86b27198a6f22d3bca6d4ad648cd4f12b8b2e5d",
        "urls": [
          "bzz-raw://bb43f98886861a0d1a6a80aaf8bfda8a2e8dace798e559dcba9fe5ebd2738817",
          "dweb:/ipfs/QmUfAk7cbLqfhJdGgZeCqdzHFxrtjQgcbGtcQEbioLUDuS"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/utils/UserOperation.sol": {
        "keccak256": "0x3f3aa133687f459f9fb538835a54aa769418dd6303a02c9fa691690fcc397964",
        "urls": [
          "bzz-raw://993f8daa2320ca301167767fff33a6989697394fe6dc65905edc4b32368850b5",
          "dweb:/ipfs/Qmaymg8dsE6mrfAWJPs4DXbHR1wxESJnxyFhNkm7AmKBCK"
        ],
        "license": "GPL-3.0"
      },
      "src/Account.sol": {
        "keccak256": "0x8a96582afd06a1ad2cb60bf5de23a53c3c015a3f048ed7754fe24a61567a7b67",
        "urls": [
          "bzz-raw://f0c00b1520fb90ff8fc8564feeb27963f074ede28244862f6bbf4161abc9b1fd",
          "dweb:/ipfs/QmWxTce1498naUrYc9KNv8TMnB5PYbZAtoTtX9XUTaiyGn"
        ],
        "license": "Apache-2.0"
      },
      "src/AccountFactory.sol": {
        "keccak256": "0x129486f9baf6257b50d542020c44544ae523b26fa05bd3d40c037b112b6e5949",
        "urls": [
          "bzz-raw://80eea0d719bae7b4d58d3866e136a7165329c09eb865be8dd94a5ec5c11c7ce4",
          "dweb:/ipfs/QmeJ9xiUfZvCNzbTZrs6vgRQdfFEy6ffsnuhkEmxQSh2pm"
        ],
        "license": "GPL-3.0"
      },
      "src/utils/IERC4626.sol": {
        "keccak256": "0x4d2adb06959f1bdf2b08c941a342412d8d295bc1cd1c3fe0997096df6b459a50",
        "urls": [
          "bzz-raw://e5baaae82c9dadf55f96c25b17864acf727be8d649531c771363d42c21c17868",
          "dweb:/ipfs/QmaU7XGHbfcuwFkA1XooaFEKvXTFtCA3Jiip6yu22P38Sk"
        ],
        "license": null
      },
      "src/utils/IPool.sol": {
        "keccak256": "0x6cd8210ffe76dce9abb73c619a11b5ca8f359a0cf4af7b9b4ec35c7763f536ea",
        "urls": [
          "bzz-raw://5deb4ee8f2d46d406bc71da05458cca8c5f717fb907e93b10ce1e9eedcd3d490",
          "dweb:/ipfs/QmTtmti5CsLNfWJXMjs2qvw97Du1rQEWJVmrXBjdRjPLde"
        ],
        "license": null
      },
      "src/utils/IUniswapV2Router01.sol": {
        "keccak256": "0x167aada7cde8b658c604466895a9196082792f905f63399cf1acd44747b0c182",
        "urls": [
          "bzz-raw://c8d2ea57a1ec5615caa936962c17588ea23550a4ba64453fa27c38fa83439901",
          "dweb:/ipfs/QmajFA91YZkHQbhwZQYQ183CM3yp79t1H43xwtqPF1kozD"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/AccountFactory.sol",
    "id": 45256,
    "exportedSymbols": {
      "Account": [
        44825
      ],
      "AccountFactory": [
        45255
      ],
      "Address": [
        33114
      ],
      "AutomationBase": [
        29
      ],
      "AutomationCompatible": [
        38
      ],
      "AutomationCompatibleInterface": [
        57
      ],
      "BaseAccount": [
        35168
      ],
      "BaseAccountFactory": [
        35608
      ],
      "BytesLib": [
        33144
      ],
      "Clones": [
        31494
      ],
      "ContractMetadata": [
        30380
      ],
      "ContractMetadataStorage": [
        30300
      ],
      "EnumerableSet": [
        32784
      ],
      "IAccount": [
        33432
      ],
      "IAccountFactory": [
        33472
      ],
      "IAccountFactoryCore": [
        33538
      ],
      "IAccountPermissions": [
        29394
      ],
      "IAggregator": [
        33572
      ],
      "IContractMetadata": [
        29417
      ],
      "IERC20": [
        27357
      ],
      "IEntryPoint": [
        33778
      ],
      "IMulticall": [
        29431
      ],
      "INonceManager": [
        33797
      ],
      "IPermissions": [
        29504
      ],
      "IPermissionsEnumerable": [
        29529
      ],
      "IStakeManager": [
        33903
      ],
      "Multicall": [
        29261
      ],
      "Permissions": [
        31035
      ],
      "PermissionsEnumerable": [
        31414
      ],
      "PermissionsEnumerableStorage": [
        31097
      ],
      "PermissionsStorage": [
        30649
      ],
      "Strings": [
        33415
      ],
      "UserOperation": [
        35875
      ],
      "UserOperationLib": [
        36045
      ],
      "ValidationData": [
        35618
      ],
      "_intersectTimeRange": [
        35762
      ],
      "_packValidationData": [
        35799,
        35837
      ],
      "_parseValidationData": [
        35677
      ],
      "calldataKeccak": [
        35847
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:5993:70",
    "nodes": [
      {
        "id": 44827,
        "nodeType": "PragmaDirective",
        "src": "37:24:70",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 44828,
        "nodeType": "ImportDirective",
        "src": "75:66:70",
        "nodes": [],
        "absolutePath": "lib/thirdweb-smartaccount/prebuilts/account/utils/BaseAccountFactory.sol",
        "file": "@thirdweb/prebuilts/account/utils/BaseAccountFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45256,
        "sourceUnit": 35609,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44829,
        "nodeType": "ImportDirective",
        "src": "143:59:70",
        "nodes": [],
        "absolutePath": "lib/thirdweb-smartaccount/prebuilts/account/utils/BaseAccount.sol",
        "file": "@thirdweb/prebuilts/account/utils/BaseAccount.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45256,
        "sourceUnit": 35169,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44830,
        "nodeType": "ImportDirective",
        "src": "204:63:70",
        "nodes": [],
        "absolutePath": "lib/thirdweb-smartaccount/external-deps/openzeppelin/proxy/Clones.sol",
        "file": "@thirdweb/external-deps/openzeppelin/proxy/Clones.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45256,
        "sourceUnit": 31495,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44831,
        "nodeType": "ImportDirective",
        "src": "286:67:70",
        "nodes": [],
        "absolutePath": "lib/thirdweb-smartaccount/extension/upgradeable/PermissionsEnumerable.sol",
        "file": "@thirdweb/extension/upgradeable/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45256,
        "sourceUnit": 31415,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44832,
        "nodeType": "ImportDirective",
        "src": "355:62:70",
        "nodes": [],
        "absolutePath": "lib/thirdweb-smartaccount/extension/upgradeable/ContractMetadata.sol",
        "file": "@thirdweb/extension/upgradeable/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45256,
        "sourceUnit": 30381,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44833,
        "nodeType": "ImportDirective",
        "src": "435:63:70",
        "nodes": [],
        "absolutePath": "lib/thirdweb-smartaccount/prebuilts/account/interface/IEntrypoint.sol",
        "file": "@thirdweb/prebuilts/account/interface/IEntrypoint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45256,
        "sourceUnit": 33779,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44835,
        "nodeType": "ImportDirective",
        "src": "534:40:70",
        "nodes": [],
        "absolutePath": "src/Account.sol",
        "file": "./Account.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45256,
        "sourceUnit": 44826,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44834,
              "name": "Account",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44825,
              "src": "543:7:70",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44836,
        "nodeType": "ImportDirective",
        "src": "614:65:70",
        "nodes": [],
        "absolutePath": "lib/chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
        "file": "@chainlink/src/v0.8/automation/AutomationCompatible.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45256,
        "sourceUnit": 39,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44837,
        "nodeType": "ImportDirective",
        "src": "711:56:70",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45256,
        "sourceUnit": 27358,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45255,
        "nodeType": "ContractDefinition",
        "src": "771:5259:70",
        "nodes": [
          {
            "id": 44847,
            "nodeType": "VariableDeclaration",
            "src": "889:22:70",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "906:5:70",
            "scope": 45255,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44846,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "889:7:70",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44849,
            "nodeType": "VariableDeclaration",
            "src": "918:23:70",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "upkeep",
            "nameLocation": "935:6:70",
            "scope": 45255,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44848,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "918:7:70",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44851,
            "nodeType": "VariableDeclaration",
            "src": "948:30:70",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "uniswapRouter",
            "nameLocation": "965:13:70",
            "scope": 45255,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44850,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "948:7:70",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44854,
            "nodeType": "VariableDeclaration",
            "src": "985:72:70",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "ghoAddress",
            "nameLocation": "1002:10:70",
            "scope": 45255,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44852,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "985:7:70",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307863346246354362446142453539353336313433384638633661313837624463333330353339633630",
              "id": 44853,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1015:42:70",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xc4bF5CbDaBE595361438F8c6a187bDc330539c60"
            },
            "visibility": "internal"
          },
          {
            "id": 44860,
            "nodeType": "VariableDeclaration",
            "src": "1064:174:70",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_swappableERC20",
            "nameLocation": "1083:16:70",
            "scope": 45255,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 44855,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1064:7:70",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 44856,
              "nodeType": "ArrayTypeName",
              "src": "1064:9:70",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "307839346139443941433861323235333445334661436139463465374632453263663835643545344338",
                  "id": 44857,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1119:42:70",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x94a9D9AC8a22534E3FaCa9F4e7F2E2cf85d5E4C8"
                },
                {
                  "hexValue": "307861413845323346623130373945413731653061353646343861326141353138353144383433334430",
                  "id": 44858,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1180:42:70",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xaA8E23Fb1079EA71e0a56F48a2aA51851D8433D0"
                }
              ],
              "id": 44859,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "1108:130:70",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                "typeString": "address[2] memory"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44892,
            "nodeType": "FunctionDefinition",
            "src": "1429:240:70",
            "nodes": [],
            "body": {
              "id": 44891,
              "nodeType": "Block",
              "src": "1605:64:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44887,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30655,
                        "src": "1627:18:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 44888,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44862,
                        "src": "1647:13:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44886,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        31310
                      ],
                      "referencedDeclaration": 31310,
                      "src": "1616:10:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 44889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1616:45:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44890,
                  "nodeType": "ExpressionStatement",
                  "src": "1616:45:70"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44873,
                            "name": "_entrypoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44865,
                            "src": "1553:11:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IEntryPoint_$33778",
                              "typeString": "contract IEntryPoint"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 44876,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1574:4:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AccountFactory_$45255",
                                  "typeString": "contract AccountFactory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AccountFactory_$45255",
                                  "typeString": "contract AccountFactory"
                                }
                              ],
                              "id": 44875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1566:7:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 44874,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1566:7:70",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 44877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1566:13:70",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IEntryPoint_$33778",
                              "typeString": "contract IEntryPoint"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 44872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1541:11:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IEntryPoint_$33778_$_t_address_$returns$_t_contract$_Account_$44825_$",
                            "typeString": "function (contract IEntryPoint,address) returns (contract Account)"
                          },
                          "typeName": {
                            "id": 44871,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 44870,
                              "name": "Account",
                              "nameLocations": [
                                "1545:7:70"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 44825,
                              "src": "1545:7:70"
                            },
                            "referencedDeclaration": 44825,
                            "src": "1545:7:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Account_$44825",
                              "typeString": "contract Account"
                            }
                          }
                        },
                        "id": 44878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1541:39:70",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Account_$44825",
                          "typeString": "contract Account"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Account_$44825",
                          "typeString": "contract Account"
                        }
                      ],
                      "id": 44869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1533:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 44868,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1533:7:70",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 44879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1533:48:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "arguments": [
                      {
                        "id": 44882,
                        "name": "_entrypoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44865,
                        "src": "1591:11:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntryPoint_$33778",
                          "typeString": "contract IEntryPoint"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IEntryPoint_$33778",
                          "typeString": "contract IEntryPoint"
                        }
                      ],
                      "id": 44881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1583:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 44880,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1583:7:70",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 44883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1583:20:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 44884,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 44867,
                  "name": "BaseAccountFactory",
                  "nameLocations": [
                    "1514:18:70"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35608,
                  "src": "1514:18:70"
                },
                "nodeType": "ModifierInvocation",
                "src": "1514:90:70"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 44866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44862,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "1459:13:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 44892,
                  "src": "1451:21:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1451:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44865,
                  "mutability": "mutable",
                  "name": "_entrypoint",
                  "nameLocation": "1495:11:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 44892,
                  "src": "1483:23:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$33778",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 44864,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44863,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "1483:11:70"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33778,
                      "src": "1483:11:70"
                    },
                    "referencedDeclaration": 33778,
                    "src": "1483:11:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$33778",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1440:73:70"
            },
            "returnParameters": {
              "id": 44885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:0:70"
            },
            "scope": 45255,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44913,
            "nodeType": "FunctionDefinition",
            "src": "1750:157:70",
            "nodes": [],
            "body": {
              "id": 44912,
              "nodeType": "Block",
              "src": "1809:98:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 44904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 44899,
                          "name": "upkeep",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44849,
                          "src": "1828:6:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 44902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1846:1:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 44901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1838:7:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44900,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1838:7:70",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1838:10:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1828:20:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920696e697469616c697a6564",
                        "id": 44905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1850:21:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        },
                        "value": "Already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        }
                      ],
                      "id": 44898,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1820:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1820:52:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44907,
                  "nodeType": "ExpressionStatement",
                  "src": "1820:52:70"
                },
                {
                  "expression": {
                    "id": 44910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44908,
                      "name": "upkeep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44849,
                      "src": "1883:6:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44909,
                      "name": "_upkeep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44895,
                      "src": "1892:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1883:16:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 44911,
                  "nodeType": "ExpressionStatement",
                  "src": "1883:16:70"
                }
              ]
            },
            "documentation": {
              "id": 44893,
              "nodeType": "StructuredDocumentation",
              "src": "1677:67:70",
              "text": "@dev Initializes the Factory upkeep using Chainlink Automation."
            },
            "functionSelector": "a9709e15",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeUpkeepAndRouter",
            "nameLocation": "1759:25:70",
            "parameters": {
              "id": 44896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44895,
                  "mutability": "mutable",
                  "name": "_upkeep",
                  "nameLocation": "1793:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 44913,
                  "src": "1785:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1785:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1784:17:70"
            },
            "returnParameters": {
              "id": 44897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1809:0:70"
            },
            "scope": 45255,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44925,
            "nodeType": "ModifierDefinition",
            "src": "2096:104:70",
            "nodes": [],
            "body": {
              "id": 44924,
              "nodeType": "Block",
              "src": "2117:83:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 44919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 44916,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2136:3:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 44917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2140:6:70",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2136:10:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 44918,
                          "name": "upkeep",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44849,
                          "src": "2150:6:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2136:20:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792075706b65657020616c6c6f776564",
                        "id": 44920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2158:21:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0818dec75135ca1ab7e1290b8b723f73d23327d2a3a0e3037ed028ffc49c480",
                          "typeString": "literal_string \"Only upkeep allowed\""
                        },
                        "value": "Only upkeep allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0818dec75135ca1ab7e1290b8b723f73d23327d2a3a0e3037ed028ffc49c480",
                          "typeString": "literal_string \"Only upkeep allowed\""
                        }
                      ],
                      "id": 44915,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2128:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2128:52:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44922,
                  "nodeType": "ExpressionStatement",
                  "src": "2128:52:70"
                },
                {
                  "id": 44923,
                  "nodeType": "PlaceholderStatement",
                  "src": "2191:1:70"
                }
              ]
            },
            "name": "onlyUpkeep",
            "nameLocation": "2105:10:70",
            "parameters": {
              "id": 44914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2115:2:70"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 44937,
            "nodeType": "ModifierDefinition",
            "src": "2206:101:70",
            "nodes": [],
            "body": {
              "id": 44936,
              "nodeType": "Block",
              "src": "2226:81:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 44931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 44928,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2245:3:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 44929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2249:6:70",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2245:10:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 44930,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44847,
                          "src": "2259:5:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2245:19:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e657220616c6c6f776564",
                        "id": 44932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2266:20:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_723fda17fb30a6cc7e06a9af2db3699db1a079268819efeab370ce8cb87b0282",
                          "typeString": "literal_string \"Only owner allowed\""
                        },
                        "value": "Only owner allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_723fda17fb30a6cc7e06a9af2db3699db1a079268819efeab370ce8cb87b0282",
                          "typeString": "literal_string \"Only owner allowed\""
                        }
                      ],
                      "id": 44927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2237:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2237:50:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44934,
                  "nodeType": "ExpressionStatement",
                  "src": "2237:50:70"
                },
                {
                  "id": 44935,
                  "nodeType": "PlaceholderStatement",
                  "src": "2298:1:70"
                }
              ]
            },
            "name": "onlyOwner",
            "nameLocation": "2215:9:70",
            "parameters": {
              "id": 44926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2224:2:70"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 44960,
            "nodeType": "FunctionDefinition",
            "src": "2604:173:70",
            "nodes": [],
            "body": {
              "id": 44959,
              "nodeType": "Block",
              "src": "2706:71:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44955,
                        "name": "_admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44942,
                        "src": "2755:6:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44956,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44944,
                        "src": "2763:5:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 44951,
                                "name": "_account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44940,
                                "src": "2733:8:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 44950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2725:8:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 44949,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2725:8:70",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 44952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2725:17:70",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 44948,
                          "name": "Account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44825,
                          "src": "2717:7:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Account_$44825_$",
                            "typeString": "type(contract Account)"
                          }
                        },
                        "id": 44953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2717:26:70",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Account_$44825",
                          "typeString": "contract Account"
                        }
                      },
                      "id": 44954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2744:10:70",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44252,
                      "src": "2717:37:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 44957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2717:52:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44958,
                  "nodeType": "ExpressionStatement",
                  "src": "2717:52:70"
                }
              ]
            },
            "baseFunctions": [
              35607
            ],
            "documentation": {
              "id": 44938,
              "nodeType": "StructuredDocumentation",
              "src": "2502:96:70",
              "text": "@dev Called in `createAccount`. Initializes the account contract created in `createAccount`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initializeAccount",
            "nameLocation": "2613:18:70",
            "overrides": {
              "id": 44946,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2697:8:70"
            },
            "parameters": {
              "id": 44945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44940,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "2640:8:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 44960,
                  "src": "2632:16:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2632:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44942,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "2658:6:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 44960,
                  "src": "2650:14:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2650:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44944,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "2681:5:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 44960,
                  "src": "2666:20:70",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44943,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2666:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2631:56:70"
            },
            "returnParameters": {
              "id": 44947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2706:0:70"
            },
            "scope": 45255,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 44974,
            "nodeType": "FunctionDefinition",
            "src": "2876:141:70",
            "nodes": [],
            "body": {
              "id": 44973,
              "nodeType": "Block",
              "src": "2952:65:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44968,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30655,
                        "src": "2978:18:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 44969,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2998:3:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3002:6:70",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2998:10:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 44967,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30688,
                      "src": "2970:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 44971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2970:39:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 44966,
                  "id": 44972,
                  "nodeType": "Return",
                  "src": "2963:46:70"
                }
              ]
            },
            "baseFunctions": [
              30379
            ],
            "documentation": {
              "id": 44961,
              "nodeType": "StructuredDocumentation",
              "src": "2785:85:70",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "2885:18:70",
            "overrides": {
              "id": 44963,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2928:8:70"
            },
            "parameters": {
              "id": 44962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2903:2:70"
            },
            "returnParameters": {
              "id": 44966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44965,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44974,
                  "src": "2946:4:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 44964,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2946:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2945:6:70"
            },
            "scope": 45255,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 44987,
            "nodeType": "FunctionDefinition",
            "src": "3093:123:70",
            "nodes": [],
            "body": {
              "id": 44986,
              "nodeType": "Block",
              "src": "3180:36:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 44983,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "3198:3:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 44984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3202:6:70",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3198:10:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 44982,
                  "id": 44985,
                  "nodeType": "Return",
                  "src": "3191:17:70"
                }
              ]
            },
            "baseFunctions": [
              29260,
              31011
            ],
            "documentation": {
              "id": 44975,
              "nodeType": "StructuredDocumentation",
              "src": "3025:62:70",
              "text": "@notice Returns the sender in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "3102:10:70",
            "overrides": {
              "id": 44979,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 44977,
                  "name": "Multicall",
                  "nameLocations": [
                    "3138:9:70"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29261,
                  "src": "3138:9:70"
                },
                {
                  "id": 44978,
                  "name": "Permissions",
                  "nameLocations": [
                    "3149:11:70"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31035,
                  "src": "3149:11:70"
                }
              ],
              "src": "3129:32:70"
            },
            "parameters": {
              "id": 44976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3112:2:70"
            },
            "returnParameters": {
              "id": 44982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44981,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44987,
                  "src": "3171:7:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3171:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3170:9:70"
            },
            "scope": 45255,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45006,
            "nodeType": "FunctionDefinition",
            "src": "3810:180:70",
            "nodes": [],
            "body": {
              "id": 45005,
              "nodeType": "Block",
              "src": "3927:63:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 44998,
                          "name": "upkeepNeeded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44994,
                          "src": "3939:12:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 44999,
                          "name": "performData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44996,
                          "src": "3953:11:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 45000,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3938:27:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45001,
                        "name": "_checkUpkeep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45187,
                        "src": "3968:12:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function () view returns (bool,bytes memory)"
                        }
                      },
                      "id": 45002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3968:14:70",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "3938:44:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45004,
                  "nodeType": "ExpressionStatement",
                  "src": "3938:44:70"
                }
              ]
            },
            "baseFunctions": [
              50
            ],
            "documentation": {
              "id": 44988,
              "nodeType": "StructuredDocumentation",
              "src": "3412:392:70",
              "text": " @dev checkUpkeep function called off-chain by Chainlink Automation infrastructure\n @dev Checks for balances elegible for swap\n @return upkeepNeeded A boolean indicating whether upkeep is needed.\n @return performData The performData parameter triggering the performUpkeep\n @notice This function is external, view, and implements the Upkeep interface."
            },
            "functionSelector": "6e04ff0d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "3819:11:70",
            "overrides": {
              "id": 44992,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3863:8:70"
            },
            "parameters": {
              "id": 44991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44990,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45006,
                  "src": "3831:14:70",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44989,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3831:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3830:17:70"
            },
            "returnParameters": {
              "id": 44997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44994,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "3887:12:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 45006,
                  "src": "3882:17:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 44993,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3882:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44996,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "3914:11:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 45006,
                  "src": "3901:24:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44995,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3901:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3881:45:70"
            },
            "scope": 45255,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45187,
            "nodeType": "FunctionDefinition",
            "src": "4002:1313:70",
            "nodes": [],
            "body": {
              "id": 45186,
              "nodeType": "Block",
              "src": "4068:1247:70",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45017,
                      "mutability": "mutable",
                      "name": "swappableERC20",
                      "nameLocation": "4106:14:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 45186,
                      "src": "4089:31:70",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 45015,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4089:7:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45016,
                        "nodeType": "ArrayTypeName",
                        "src": "4089:9:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45019,
                  "initialValue": {
                    "id": 45018,
                    "name": "s_swappableERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44860,
                    "src": "4123:16:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4089:50:70"
                },
                {
                  "assignments": [
                    45024
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45024,
                      "mutability": "mutable",
                      "name": "wallets",
                      "nameLocation": "4167:7:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 45186,
                      "src": "4150:24:70",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 45022,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4150:7:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45023,
                        "nodeType": "ArrayTypeName",
                        "src": "4150:9:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45027,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 45025,
                      "name": "getAllAccounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35496,
                      "src": "4177:14:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view returns (address[] memory)"
                      }
                    },
                    "id": 45026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4177:16:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4150:43:70"
                },
                {
                  "assignments": [
                    45032
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45032,
                      "mutability": "mutable",
                      "name": "tokensToSwap",
                      "nameLocation": "4221:12:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 45186,
                      "src": "4204:29:70",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 45030,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4204:7:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45031,
                        "nodeType": "ArrayTypeName",
                        "src": "4204:9:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45039,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45036,
                          "name": "swappableERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45017,
                          "src": "4250:14:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 45037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4265:6:70",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "4250:21:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4236:13:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 45033,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4240:7:70",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45034,
                        "nodeType": "ArrayTypeName",
                        "src": "4240:9:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 45038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4236:36:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4204:68:70"
                },
                {
                  "assignments": [
                    45044
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45044,
                      "mutability": "mutable",
                      "name": "filteredTokensToSwap",
                      "nameLocation": "4300:20:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 45186,
                      "src": "4283:37:70",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 45042,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4283:7:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45043,
                        "nodeType": "ArrayTypeName",
                        "src": "4283:9:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45045,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4283:37:70"
                },
                {
                  "assignments": [
                    45047
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45047,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "4336:5:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 45186,
                      "src": "4331:10:70",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45046,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4331:4:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45048,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4331:10:70"
                },
                {
                  "body": {
                    "id": 45184,
                    "nodeType": "Block",
                    "src": "4387:921:70",
                    "statements": [
                      {
                        "body": {
                          "id": 45094,
                          "nodeType": "Block",
                          "src": "4444:200:70",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 45080,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 45075,
                                        "name": "wallets",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45024,
                                        "src": "4503:7:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 45077,
                                      "indexExpression": {
                                        "id": 45076,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45050,
                                        "src": "4511:1:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4503:10:70",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 45070,
                                            "name": "swappableERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 45017,
                                            "src": "4474:14:70",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 45072,
                                          "indexExpression": {
                                            "id": 45071,
                                            "name": "j",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 45060,
                                            "src": "4489:1:70",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4474:17:70",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 45069,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 27357,
                                        "src": "4467:6:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$27357_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 45073,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4467:25:70",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$27357",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 45074,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4493:9:70",
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 27314,
                                    "src": "4467:35:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 45078,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4467:47:70",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 45079,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4515:1:70",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4467:49:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 45093,
                              "nodeType": "IfStatement",
                              "src": "4463:166:70",
                              "trueBody": {
                                "id": 45092,
                                "nodeType": "Block",
                                "src": "4517:112:70",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 45087,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 45081,
                                          "name": "tokensToSwap",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45032,
                                          "src": "4540:12:70",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 45083,
                                        "indexExpression": {
                                          "id": 45082,
                                          "name": "count",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45047,
                                          "src": "4553:5:70",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "4540:19:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 45084,
                                          "name": "swappableERC20",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45017,
                                          "src": "4562:14:70",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 45086,
                                        "indexExpression": {
                                          "id": 45085,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45060,
                                          "src": "4577:1:70",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4562:17:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "4540:39:70",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 45088,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4540:39:70"
                                  },
                                  {
                                    "expression": {
                                      "id": 45090,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": true,
                                      "src": "4602:7:70",
                                      "subExpression": {
                                        "id": 45089,
                                        "name": "count",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45047,
                                        "src": "4604:5:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 45091,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4602:7:70"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 45065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 45062,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45060,
                            "src": "4415:1:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 45063,
                              "name": "swappableERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45017,
                              "src": "4417:14:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 45064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4432:6:70",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4417:21:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4415:23:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 45095,
                        "initializationExpression": {
                          "assignments": [
                            45060
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 45060,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "4412:1:70",
                              "nodeType": "VariableDeclaration",
                              "scope": 45095,
                              "src": "4407:6:70",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 45059,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "4407:4:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 45061,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4407:6:70"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 45067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "4440:3:70",
                            "subExpression": {
                              "id": 45066,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45060,
                              "src": "4442:1:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 45068,
                          "nodeType": "ExpressionStatement",
                          "src": "4440:3:70"
                        },
                        "nodeType": "ForStatement",
                        "src": "4402:242:70"
                      },
                      {
                        "assignments": [
                          45097
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 45097,
                            "mutability": "mutable",
                            "name": "ghoTreshold",
                            "nameLocation": "4663:11:70",
                            "nodeType": "VariableDeclaration",
                            "scope": 45184,
                            "src": "4658:16:70",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 45096,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4658:4:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 45108,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 45101,
                                        "name": "wallets",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45024,
                                        "src": "4693:7:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 45103,
                                      "indexExpression": {
                                        "id": 45102,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45050,
                                        "src": "4701:1:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4693:10:70",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 45100,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4685:8:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_payable_$",
                                      "typeString": "type(address payable)"
                                    },
                                    "typeName": {
                                      "id": 45099,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4685:8:70",
                                      "stateMutability": "payable",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 45104,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4685:19:70",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 45098,
                                "name": "Account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44825,
                                "src": "4677:7:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Account_$44825_$",
                                  "typeString": "type(contract Account)"
                                }
                              },
                              "id": 45105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4677:28:70",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Account_$44825",
                                "typeString": "contract Account"
                              }
                            },
                            "id": 45106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4706:11:70",
                            "memberName": "ghoTreshold",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44121,
                            "src": "4677:40:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 45107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4677:42:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4658:61:70"
                      },
                      {
                        "assignments": [
                          45110
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 45110,
                            "mutability": "mutable",
                            "name": "ghoBalance",
                            "nameLocation": "4739:10:70",
                            "nodeType": "VariableDeclaration",
                            "scope": 45184,
                            "src": "4734:15:70",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 45109,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4734:4:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 45119,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 45115,
                                "name": "wallets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45024,
                                "src": "4781:7:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 45117,
                              "indexExpression": {
                                "id": 45116,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45050,
                                "src": "4789:1:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4781:10:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 45112,
                                  "name": "ghoAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44854,
                                  "src": "4759:10:70",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 45111,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27357,
                                "src": "4752:6:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$27357_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 45113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4752:18:70",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$27357",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 45114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4771:9:70",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27314,
                            "src": "4752:28:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 45118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4752:40:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4734:58:70"
                      },
                      {
                        "assignments": [
                          45121
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 45121,
                            "mutability": "mutable",
                            "name": "ghoReceived",
                            "nameLocation": "4814:11:70",
                            "nodeType": "VariableDeclaration",
                            "scope": 45184,
                            "src": "4809:16:70",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 45120,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4809:4:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 45137,
                        "initialValue": {
                          "components": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 45132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 45124,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 45122,
                                        "name": "ghoBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45110,
                                        "src": "4848:10:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "id": 45123,
                                        "name": "ghoTreshold",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45097,
                                        "src": "4861:11:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4848:24:70",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 45125,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4847:26:70",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 45130,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 45128,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 45126,
                                          "name": "ghoBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45110,
                                          "src": "4878:10:70",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "%",
                                        "rightExpression": {
                                          "hexValue": "31653138",
                                          "id": 45127,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "4891:4:70",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                            "typeString": "int_const 1000000000000000000"
                                          },
                                          "value": "1e18"
                                        },
                                        "src": "4878:17:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 45129,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4898:1:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "4878:21:70",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 45131,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4877:23:70",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "4847:53:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "hexValue": "66616c7365",
                                "id": 45134,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4927:5:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "id": 45135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "4847:85:70",
                              "trueExpression": {
                                "hexValue": "74727565",
                                "id": 45133,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4920:4:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 45136,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4828:105:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4809:124:70"
                      },
                      {
                        "expression": {
                          "id": 45144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 45138,
                            "name": "filteredTokensToSwap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45044,
                            "src": "4948:20:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 45142,
                                "name": "count",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45047,
                                "src": "4985:5:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 45141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "4971:13:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (address[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 45139,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4975:7:70",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 45140,
                                "nodeType": "ArrayTypeName",
                                "src": "4975:9:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                  "typeString": "address[]"
                                }
                              }
                            },
                            "id": 45143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4971:20:70",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "src": "4948:43:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 45145,
                        "nodeType": "ExpressionStatement",
                        "src": "4948:43:70"
                      },
                      {
                        "body": {
                          "id": 45163,
                          "nodeType": "Block",
                          "src": "5032:76:70",
                          "statements": [
                            {
                              "expression": {
                                "id": 45161,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 45155,
                                    "name": "filteredTokensToSwap",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45044,
                                    "src": "5051:20:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 45157,
                                  "indexExpression": {
                                    "id": 45156,
                                    "name": "k",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45147,
                                    "src": "5072:1:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5051:23:70",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 45158,
                                    "name": "tokensToSwap",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45032,
                                    "src": "5077:12:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 45160,
                                  "indexExpression": {
                                    "id": 45159,
                                    "name": "k",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45147,
                                    "src": "5090:1:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5077:15:70",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "5051:41:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 45162,
                              "nodeType": "ExpressionStatement",
                              "src": "5051:41:70"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 45151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 45149,
                            "name": "k",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45147,
                            "src": "5019:1:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 45150,
                            "name": "count",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45047,
                            "src": "5021:5:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5019:7:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 45164,
                        "initializationExpression": {
                          "assignments": [
                            45147
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 45147,
                              "mutability": "mutable",
                              "name": "k",
                              "nameLocation": "5016:1:70",
                              "nodeType": "VariableDeclaration",
                              "scope": 45164,
                              "src": "5011:6:70",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 45146,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "5011:4:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 45148,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5011:6:70"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 45153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "5028:3:70",
                            "subExpression": {
                              "id": 45152,
                              "name": "k",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45147,
                              "src": "5030:1:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 45154,
                          "nodeType": "ExpressionStatement",
                          "src": "5028:3:70"
                        },
                        "nodeType": "ForStatement",
                        "src": "5006:102:70"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 45170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 45168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 45165,
                                "name": "filteredTokensToSwap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45044,
                                "src": "5140:20:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 45166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5161:6:70",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "5140:27:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 45167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5170:1:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5140:31:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "id": 45169,
                            "name": "ghoReceived",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45121,
                            "src": "5175:11:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5140:46:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 45183,
                        "nodeType": "IfStatement",
                        "src": "5136:160:70",
                        "trueBody": {
                          "id": 45182,
                          "nodeType": "Block",
                          "src": "5188:108:70",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "74727565",
                                    "id": 45171,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5216:4:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 45174,
                                          "name": "wallets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45024,
                                          "src": "5233:7:70",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 45176,
                                        "indexExpression": {
                                          "id": 45175,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 45050,
                                          "src": "5241:1:70",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5233:10:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 45177,
                                        "name": "filteredTokensToSwap",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45044,
                                        "src": "5245:20:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      {
                                        "id": 45178,
                                        "name": "ghoReceived",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45121,
                                        "src": "5267:11:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "expression": {
                                        "id": 45172,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "5222:3:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 45173,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "5226:6:70",
                                      "memberName": "encode",
                                      "nodeType": "MemberAccess",
                                      "src": "5222:10:70",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 45179,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5222:57:70",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "id": 45180,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5215:65:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "functionReturnParameters": 45012,
                              "id": 45181,
                              "nodeType": "Return",
                              "src": "5207:73:70"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45052,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45050,
                      "src": "4365:1:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 45053,
                        "name": "wallets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45024,
                        "src": "4367:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 45054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4375:6:70",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4367:14:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4365:16:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45185,
                  "initializationExpression": {
                    "assignments": [
                      45050
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 45050,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4362:1:70",
                        "nodeType": "VariableDeclaration",
                        "scope": 45185,
                        "src": "4357:6:70",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 45049,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4357:4:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 45051,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4357:6:70"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 45057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "4383:3:70",
                      "subExpression": {
                        "id": 45056,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45050,
                        "src": "4385:1:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 45058,
                    "nodeType": "ExpressionStatement",
                    "src": "4383:3:70"
                  },
                  "nodeType": "ForStatement",
                  "src": "4352:956:70"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkUpkeep",
            "nameLocation": "4011:12:70",
            "parameters": {
              "id": 45007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4023:2:70"
            },
            "returnParameters": {
              "id": 45012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45009,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45187,
                  "src": "4049:4:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45008,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4049:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45011,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45187,
                  "src": "4055:12:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 45010,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4055:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4048:20:70"
            },
            "scope": 45255,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45254,
            "nodeType": "FunctionDefinition",
            "src": "5538:489:70",
            "nodes": [],
            "body": {
              "id": 45253,
              "nodeType": "Block",
              "src": "5649:378:70",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45198,
                    45201,
                    45203
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45198,
                      "mutability": "mutable",
                      "name": "wallet",
                      "nameLocation": "5669:6:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 45253,
                      "src": "5661:14:70",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 45197,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5661:7:70",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 45201,
                      "mutability": "mutable",
                      "name": "tokensToSwap",
                      "nameLocation": "5694:12:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 45253,
                      "src": "5677:29:70",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 45199,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5677:7:70",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45200,
                        "nodeType": "ArrayTypeName",
                        "src": "5677:9:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 45203,
                      "mutability": "mutable",
                      "name": "ghoReceived",
                      "nameLocation": "5713:11:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 45253,
                      "src": "5708:16:70",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 45202,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5708:4:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45216,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 45206,
                        "name": "performData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45190,
                        "src": "5739:11:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 45208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5753:7:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45207,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5753:7:70",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 45210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5762:7:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45209,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5762:7:70",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5762:9:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "type(address[] memory)"
                            }
                          },
                          {
                            "id": 45213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5773:4:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bool_$",
                              "typeString": "type(bool)"
                            },
                            "typeName": {
                              "id": 45212,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5773:4:70",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 45214,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5752:26:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_bool_$_$",
                          "typeString": "tuple(type(address),type(address[] memory),type(bool))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_bool_$_$",
                          "typeString": "tuple(type(address),type(address[] memory),type(bool))"
                        }
                      ],
                      "expression": {
                        "id": 45204,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5728:3:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 45205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5732:6:70",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "5728:10:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 45215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5728:51:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_array$_t_address_$dyn_memory_ptr_$_t_bool_$",
                      "typeString": "tuple(address payable,address[] memory,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5660:119:70"
                },
                {
                  "body": {
                    "id": 45239,
                    "nodeType": "Block",
                    "src": "5831:89:70",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 45234,
                                "name": "tokensToSwap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45201,
                                "src": "5892:12:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 45236,
                              "indexExpression": {
                                "id": 45235,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45218,
                                "src": "5905:1:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5892:15:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 45230,
                                      "name": "wallet",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45198,
                                      "src": "5862:6:70",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 45229,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5854:8:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_payable_$",
                                      "typeString": "type(address payable)"
                                    },
                                    "typeName": {
                                      "id": 45228,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5854:8:70",
                                      "stateMutability": "payable",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 45231,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5854:15:70",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 45227,
                                "name": "Account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44825,
                                "src": "5846:7:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Account_$44825_$",
                                  "typeString": "type(contract Account)"
                                }
                              },
                              "id": 45232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5846:24:70",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Account_$44825",
                                "typeString": "contract Account"
                              }
                            },
                            "id": 45233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5871:20:70",
                            "memberName": "executeSwapAndSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44643,
                            "src": "5846:45:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 45237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5846:62:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45238,
                        "nodeType": "ExpressionStatement",
                        "src": "5846:62:70"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45220,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45218,
                      "src": "5803:1:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 45221,
                        "name": "tokensToSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45201,
                        "src": "5806:12:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 45222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5819:6:70",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5806:19:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5803:22:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45240,
                  "initializationExpression": {
                    "assignments": [
                      45218
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 45218,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5800:1:70",
                        "nodeType": "VariableDeclaration",
                        "scope": 45240,
                        "src": "5795:6:70",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 45217,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5795:4:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 45219,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5795:6:70"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 45225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "5827:3:70",
                      "subExpression": {
                        "id": 45224,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45218,
                        "src": "5829:1:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 45226,
                    "nodeType": "ExpressionStatement",
                    "src": "5827:3:70"
                  },
                  "nodeType": "ForStatement",
                  "src": "5790:130:70"
                },
                {
                  "condition": {
                    "id": 45241,
                    "name": "ghoReceived",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45203,
                    "src": "5934:11:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45252,
                  "nodeType": "IfStatement",
                  "src": "5930:90:70",
                  "trueBody": {
                    "id": 45251,
                    "nodeType": "Block",
                    "src": "5946:74:70",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 45245,
                                      "name": "wallet",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45198,
                                      "src": "5977:6:70",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 45244,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5969:8:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_payable_$",
                                      "typeString": "type(address payable)"
                                    },
                                    "typeName": {
                                      "id": 45243,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5969:8:70",
                                      "stateMutability": "payable",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 45246,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5969:15:70",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 45242,
                                "name": "Account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44825,
                                "src": "5961:7:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Account_$44825_$",
                                  "typeString": "type(contract Account)"
                                }
                              },
                              "id": 45247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5961:24:70",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Account_$44825",
                                "typeString": "contract Account"
                              }
                            },
                            "id": 45248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5986:20:70",
                            "memberName": "executeSupplyToVault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44692,
                            "src": "5961:45:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 45249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5961:47:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45250,
                        "nodeType": "ExpressionStatement",
                        "src": "5961:47:70"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              56
            ],
            "documentation": {
              "id": 45188,
              "nodeType": "StructuredDocumentation",
              "src": "5323:209:70",
              "text": " @dev performUpkeep function called by Chainlink Automation infrastructure after checkUpkeep checks\n @param performData the data inputed by Chainlink Automation retrieved by checkUpkeep"
            },
            "functionSelector": "4585e33b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45193,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45192,
                  "name": "onlyUpkeep",
                  "nameLocations": [
                    "5589:10:70"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44925,
                  "src": "5589:10:70"
                },
                "nodeType": "ModifierInvocation",
                "src": "5589:10:70"
              }
            ],
            "name": "performUpkeep",
            "nameLocation": "5547:13:70",
            "overrides": {
              "id": 45195,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 45194,
                  "name": "AutomationCompatibleInterface",
                  "nameLocations": [
                    "5618:29:70"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57,
                  "src": "5618:29:70"
                }
              ],
              "src": "5609:39:70"
            },
            "parameters": {
              "id": 45191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45190,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "5576:11:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 45254,
                  "src": "5561:26:70",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 45189,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5561:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5560:28:70"
            },
            "returnParameters": {
              "id": 45196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5649:0:70"
            },
            "scope": 45255,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44838,
              "name": "BaseAccountFactory",
              "nameLocations": [
                "798:18:70"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35608,
              "src": "798:18:70"
            },
            "id": 44839,
            "nodeType": "InheritanceSpecifier",
            "src": "798:18:70"
          },
          {
            "baseName": {
              "id": 44840,
              "name": "ContractMetadata",
              "nameLocations": [
                "818:16:70"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30380,
              "src": "818:16:70"
            },
            "id": 44841,
            "nodeType": "InheritanceSpecifier",
            "src": "818:16:70"
          },
          {
            "baseName": {
              "id": 44842,
              "name": "PermissionsEnumerable",
              "nameLocations": [
                "836:21:70"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31414,
              "src": "836:21:70"
            },
            "id": 44843,
            "nodeType": "InheritanceSpecifier",
            "src": "836:21:70"
          },
          {
            "baseName": {
              "id": 44844,
              "name": "AutomationCompatible",
              "nameLocations": [
                "859:20:70"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38,
              "src": "859:20:70"
            },
            "id": 44845,
            "nodeType": "InheritanceSpecifier",
            "src": "859:20:70"
          }
        ],
        "canonicalName": "AccountFactory",
        "contractDependencies": [
          44825
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45255,
          38,
          57,
          29,
          31414,
          31035,
          29529,
          29504,
          30380,
          29417,
          35608,
          29261,
          29431,
          33472,
          33538
        ],
        "name": "AccountFactory",
        "nameLocation": "780:14:70",
        "scope": 45256,
        "usedErrors": [
          3
        ],
        "usedEvents": [
          29416,
          29443,
          29452,
          29461,
          33481,
          33488,
          33495
        ]
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 70
}