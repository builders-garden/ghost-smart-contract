{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultAdmin",
          "type": "address"
        },
        {
          "internalType": "contract IEntryPoint",
          "name": "_entrypoint",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "OnlySimulatedBackend",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "accountAdmin",
          "type": "address"
        }
      ],
      "name": "AccountCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "SignerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "SignerRemoved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accountImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "createAccount",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entrypoint",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_end",
          "type": "uint256"
        }
      ],
      "name": "getAccounts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "getAccountsOfSigner",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_adminSigner",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllAccounts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRoleWithSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_upkeep",
          "type": "address"
        }
      ],
      "name": "initializeUpkeepAndRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "onRegister",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "onSignerAdded",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "onSignerRemoved",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAccounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x600680546001600160a01b03191673c4bf5cbdabe595361438f8c6a187bdc330539c601790556101006040527394a9d9ac8a22534e3faca9f4e7f2e2cf85d5e4c860c090815273aa8e23fb1079ea71e0a56f48a2aa51851d8433d060e0526200006d906007906002620002da565b503480156200007b57600080fd5b5060405162007fcc38038062007fcc8339810160408190526200009e9162000382565b8030604051620000ae9062000344565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015620000e2573d6000803e3d6000fd5b506001600160a01b03908116608052811660a052620001036000836200010b565b505062000409565b62000117828262000127565b620001238282620001a1565b5050565b60008281527f0a7b0f5c59907924802379ebe98cdc23e2ee7820f63d30126e10b3752010e500602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000620001ad6200026f565b6000848152602091909152604090205490506001620001cb6200026f565b6000858152602091909152604081208054909190620001ec908490620003d7565b90915550829050620001fd6200026f565b6000858152602091825260408082208583526001019092522080546001600160a01b0319166001600160a01b0392909216919091179055806200023f6200026f565b6000948552602090815260408086206001600160a01b03909516865260029094019052919092205550565b905090565b60006200026a60008060ff19620002a860017f0c4ba382c0009cf238e4c1ca1a52f51c61e6248a70bdfb34e5ed49d5578a5c0c620003f3565b604051602001620002bb91815260200190565b60408051601f1981840301815291905280516020909101201692915050565b82805482825590600052602060002090810192821562000332579160200282015b828111156200033257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002fb565b506200034092915062000352565b5090565b6150ca8062002f0283390190565b5b8082111562000340576000815560010162000353565b6001600160a01b03811681146200037f57600080fd5b50565b600080604083850312156200039657600080fd5b8251620003a38162000369565b6020840151909250620003b68162000369565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b80820180821115620003ed57620003ed620003c1565b92915050565b81810381811115620003ed57620003ed620003c1565b60805160a051612ab76200044b600039600081816103840152610e790152600081816101f90152818161086a01528181610dd501526111120152612ab76000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c806391d14854116100f9578063ac9650d811610097578063d547741f11610071578063d547741f146103ff578063d8fd8f4414610412578063e68a7c3b14610425578063e8a3d4851461043857600080fd5b8063ac9650d8146103b9578063c3c5a547146103d9578063ca15c873146103ec57600080fd5b8063a217fddf116100d3578063a217fddf14610364578063a32fa5b31461036c578063a65d69d41461037f578063a9709e15146103a657600080fd5b806391d148541461031b5780639387a3801461033e578063938e3d7b1461035157600080fd5b806336568abe116101665780636e04ff0d116101405780636e04ff0d146102c157806383a03f8c146102e25780638878ed33146102f55780639010d07c1461030857600080fd5b806336568abe146102935780634585e33b146102a657806358451f97146102b957600080fd5b806308e93d0a146101ae5780630b61e12b146101cc5780630e6254fd146101e157806311464fbe146101f4578063248a9ca3146102335780632f2ff15d14610280575b600080fd5b6101b661044d565b6040516101c39190612107565b60405180910390f35b6101df6101da36600461212f565b61045e565b005b6101b66101ef36600461215b565b6104ff565b61021b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101c3565b610272610241366004612178565b60009081527f0a7b0f5c59907924802379ebe98cdc23e2ee7820f63d30126e10b3752010e501602052604090205490565b6040519081526020016101c3565b6101df61028e366004612191565b610529565b6101df6102a1366004612191565b6105e2565b6101df6102b4366004612209565b610644565b6102726107af565b6102d46102cf366004612209565b6107bb565b6040516101c392919061229a565b6101df6102f0366004612178565b6107d2565b61021b6103033660046122b5565b610820565b61021b610316366004612309565b61089a565b61032e610329366004612191565b6109a8565b60405190151581526020016101c3565b6101df61034c36600461212f565b6109e0565b6101df61035f366004612371565b610a77565b610272600081565b61032e61037a366004612191565b610ac8565b61021b7f000000000000000000000000000000000000000000000000000000000000000081565b6101df6103b436600461215b565b610b39565b6103cc6103c7366004612405565b610baa565b6040516101c39190612479565b61032e6103e736600461215b565b610d10565b6102726103fa366004612178565b610d1c565b6101df61040d366004612191565b610db9565b61021b6104203660046122b5565b610dd0565b6101b6610433366004612309565b610f1b565b61044061104c565b6040516101c391906124db565b606061045960006110fd565b905090565b33610469818361110a565b61048e5760405162461bcd60e51b8152600401610485906124ee565b60405180910390fd5b6001600160a01b03831660009081526002602052604081206104b0908361114e565b905080156104f957836001600160a01b0316826001600160a01b03167f12146497b3b826918ec47f0cac7272a09ed06b30c16c030e99ec48ff5dd60b4760405160405180910390a35b50505050565b6001600160a01b0381166000908152600260205260409020606090610523906110fd565b92915050565b610555600080516020612a628339815191525b6000848152600191909101602052604090205433611163565b600080516020612a628339815191526000838152602091825260408082206001600160a01b0385168352909252205460ff16156105d45760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206772616e7420746f206e6f6e20686f6c646572730000006044820152606401610485565b6105de82826111ef565b5050565b336001600160a01b0382161461063a5760405162461bcd60e51b815260206004820152601a60248201527f43616e206f6e6c792072656e6f756e636520666f722073656c660000000000006044820152606401610485565b6105de8282611203565b6004546001600160a01b031633146106945760405162461bcd60e51b815260206004820152601360248201527213db9b1e481d5c1ad9595c08185b1b1bddd959606a1b6044820152606401610485565b600080806106a48486018661253a565b92509250925060005b825181101561074d57836001600160a01b0316633dd6e0258483815181106106d7576106d7612610565b60200260200101516040518263ffffffff1660e01b815260040161070a91906001600160a01b0391909116815260200190565b600060405180830381600087803b15801561072457600080fd5b505af1158015610738573d6000803e3d6000fd5b50505050806107469061263c565b90506106ad565b5080156107a857826001600160a01b031663b28362776040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561078f57600080fd5b505af11580156107a3573d6000803e3d6000fd5b505050505b5050505050565b60006104596000611217565b600060606107c7611221565b909590945092505050565b336107dd818361110a565b6107f95760405162461bcd60e51b8152600401610485906124ee565b61080460008261114e565b6105de5760405162461bcd60e51b815260040161048590612655565b6000806108638585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061168192505050565b905061088f7f0000000000000000000000000000000000000000000000000000000000000000826116b4565b9150505b9392505050565b6000806108a5611714565b600085815260209190915260408120549150805b8281101561099f5760006108cb611714565b60008881526020918252604080822085835260010190925220546001600160a01b0316146109435784820361093157610902611714565b600087815260209182526040808220938252600190930190915220546001600160a01b03169250610523915050565b61093c60018361269f565b915061098d565b61094e8660006109a8565b801561097a575061095d611714565b600087815260209182526040808220828052600201909252205481145b1561098d5761098a60018361269f565b91505b61099860018261269f565b90506108b9565b50505092915050565b6000918252600080516020612a62833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b336109eb818361110a565b610a075760405162461bcd60e51b8152600401610485906124ee565b6001600160a01b0383166000908152600260205260408120610a29908361171e565b905080156104f957836001600160a01b0316826001600160a01b03167f98d1ebbe00ae92a5de96a0f49742a8afa89f42363592bc2e7cfaaed68b45e7a660405160405180910390a350505050565b610a7f611733565b610abc5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610485565b610ac58161173f565b50565b6000600080516020612a62833981519152600084815260209182526040808220828052909252205460ff16610b3057600080516020612a628339815191526000848152602091825260408082206001600160a01b0386168352909252205460ff169050610523565b50600192915050565b6004546001600160a01b031615610b885760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606401610485565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6060816001600160401b03811115610bc457610bc461232b565b604051908082528060200260200182016040528015610bf757816020015b6060815260200190600190039081610be25790505b509050336000805b8481101561099f578115610c7e57610c5c30878784818110610c2357610c23612610565b9050602002810190610c3591906126b2565b86604051602001610c48939291906126f8565b60405160208183030381529060405261185e565b848281518110610c6e57610c6e612610565b6020026020010181905250610cfe565b610ce030878784818110610c9457610c94612610565b9050602002810190610ca691906126b2565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061185e92505050565b848281518110610cf257610cf2612610565b60200260200101819052505b80610d088161263c565b915050610bff565b60006105238183611883565b600080610d27611714565b6000848152602091909152604081205491505b81811015610d94576000610d4c611714565b60008681526020918252604080822085835260010190925220546001600160a01b031614610d8257610d7f60018461269f565b92505b610d8d60018261269f565b9050610d3a565b50610da08360006109a8565b15610db357610db060018361269f565b91505b50919050565b61063a600080516020612a6283398151915261053c565b6000807f000000000000000000000000000000000000000000000000000000000000000090506000610e388686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061168192505050565b90506000610e4683836116b4565b90506001600160a01b0381163b15610e62579250610893915050565b610e6c83836118a5565b9050336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ec557610ea960008261114e565b610ec55760405162461bcd60e51b815260040161048590612655565b610ed181888888611942565b866001600160a01b0316816001600160a01b03167fac631f3001b55ea1509cf3d7e74898f85392a61a76e8149181ae1259622dabc860405160405180910390a39695505050505050565b60608183108015610f355750610f316000611217565b8211155b610f8d5760405162461bcd60e51b815260206004820152602360248201527f426173654163636f756e74466163746f72793a20696e76616c696420696e646960448201526263657360e81b6064820152608401610485565b6000610f99848461271e565b9050610fa5848461271e565b6001600160401b03811115610fbc57610fbc61232b565b604051908082528060200260200182016040528015610fe5578160200160208202803683370190505b50915060005b8181101561104457611008611000868361269f565b6000906119aa565b83828151811061101a5761101a612610565b6001600160a01b039092166020928302919091019091015261103d60018261269f565b9050610feb565b505092915050565b60607f4bc804ba64359c0e35e5ed5d90ee596ecaa49a3a930ddcb1470ea0dd625da900805461107a90612731565b80601f01602080910402602001604051908101604052809291908181526020018280546110a690612731565b80156110f35780601f106110c8576101008083540402835291602001916110f3565b820191906000526020600020905b8154815290600101906020018083116110d657829003601f168201915b5050505050905090565b60606000610893836119b6565b6000806111377f0000000000000000000000000000000000000000000000000000000000000000846116b4565b6001600160a01b0385811691161491505092915050565b6000610893836001600160a01b038416611a12565b600080516020612a628339815191526000838152602091825260408082206001600160a01b0385168352909252205460ff166105de576111ad816001600160a01b03166014611a61565b6111b8836020611a61565b6040516020016111c9929190612765565b60408051601f198184030181529082905262461bcd60e51b8252610485916004016124db565b6111f98282611bfc565b6105de8282611c64565b61120d8282611d23565b6105de8282611d92565b6000610523825490565b600060606000600780548060200260200160405190810160405280929190818152602001828054801561127d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161125f575b50505050509050600061128e61044d565b9050600082516001600160401b038111156112ab576112ab61232b565b6040519080825280602002602001820160405280156112d4578160200160208202803683370190505b50905060606000805b84518110156116775760005b865181101561140857600087828151811061130657611306612610565b60200260200101516001600160a01b03166370a0823188858151811061132e5761132e612610565b60200260200101516040518263ffffffff1660e01b815260040161136191906001600160a01b0391909116815260200190565b602060405180830381865afa15801561137e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a291906127d2565b11156113f8578681815181106113ba576113ba612610565b60200260200101518584815181106113d4576113d4612610565b6001600160a01b03909216602092830291909101909101526113f58361263c565b92505b6114018161263c565b90506112e9565b50600085828151811061141d5761141d612610565b60200260200101516001600160a01b0316634e11f6a56040518163ffffffff1660e01b8152600401602060405180830381865afa158015611462573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148691906127d2565b60065487519192506000916001600160a01b03909116906370a08231908990869081106114b5576114b5612610565b60200260200101516040518263ffffffff1660e01b81526004016114e891906001600160a01b0391909116815260200190565b602060405180830381865afa158015611505573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152991906127d2565b90506000828211801561154d5750600061154b670de0b6b3a7640000846127eb565b115b61155857600061155b565b60015b9050846001600160401b038111156115755761157561232b565b60405190808252806020026020018201604052801561159e578160200160208202803683370190505b50955060005b85811015611600578781815181106115be576115be612610565b60200260200101518782815181106115d8576115d8612610565b6001600160a01b03909216602092830291909101909101526115f98161263c565b90506115a4565b5060008651118061160e5750805b1561166357600188858151811061162757611627612610565b602002602001015187836040516020016116439392919061280d565b6040516020818303038152906040529a509a505050505050505050509091565b505050806116709061263c565b90506112dd565b5050505050509091565b60008282604051602001611696929190612843565b60405160208183030381529060405280519060200120905092915050565b6040513060388201526f5af43d82803e903d91602b57fd5bf3ff602482015260148101839052733d602d80600a3d3981f3363d3d373d3d3d363d738152605881018290526037600c82012060788201526055604390910120600090610893565b6000610459611e21565b6000610893836001600160a01b038416611e83565b600061045981336109a8565b60007f4bc804ba64359c0e35e5ed5d90ee596ecaa49a3a930ddcb1470ea0dd625da900805461176d90612731565b80601f016020809104026020016040519081016040528092919081815260200182805461179990612731565b80156117e65780601f106117bb576101008083540402835291602001916117e6565b820191906000526020600020905b8154815290600101906020018083116117c957829003601f168201915b50505050509050816118157f4bc804ba64359c0e35e5ed5d90ee596ecaa49a3a930ddcb1470ea0dd625da90090565b9061182090826128b6565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051611852929190612975565b60405180910390a15050565b60606108938383604051806060016040528060278152602001612a3b60279139611f76565b6001600160a01b03811660009081526001830160205260408120541515610893565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166105235760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606401610485565b60405163347d5e2560e21b81526001600160a01b0385169063d1f57894906119729086908690869060040161299a565b600060405180830381600087803b15801561198c57600080fd5b505af11580156119a0573d6000803e3d6000fd5b5050505050505050565b60006108938383611fee565b606081600001805480602002602001604051908101604052809291908181526020018280548015611a0657602002820191906000526020600020905b8154815260200190600101908083116119f2575b50505050509050919050565b6000818152600183016020526040812054611a5957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610523565b506000610523565b60606000611a708360026129da565b611a7b90600261269f565b6001600160401b03811115611a9257611a9261232b565b6040519080825280601f01601f191660200182016040528015611abc576020820181803683370190505b509050600360fc1b81600081518110611ad757611ad7612610565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611b0657611b06612610565b60200101906001600160f81b031916908160001a9053506000611b2a8460026129da565b611b3590600161269f565b90505b6001811115611bad576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611b6957611b69612610565b1a60f81b828281518110611b7f57611b7f612610565b60200101906001600160f81b031916908160001a90535060049490941c93611ba6816129f1565b9050611b38565b5083156108935760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610485565b6000828152600080516020612a62833981519152602090815260408083206001600160a01b0385168085529252808320805460ff1916600117905551339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000611c6e611714565b6000848152602091909152604090205490506001611c8a611714565b6000858152602091909152604081208054909190611ca990849061269f565b90915550829050611cb8611714565b6000858152602091825260408082208583526001019092522080546001600160a01b0319166001600160a01b039290921691909117905580611cf8611714565b6000948552602090815260408086206001600160a01b03909516865260029094019052919092205550565b611d2d8282611163565b6000828152600080516020612a62833981519152602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000611d9c611714565b6000848152602091825260408082206001600160a01b038616835260020190925220549050611dc9611714565b6000848152602091825260408082208483526001019092522080546001600160a01b0319169055611df8611714565b6000938452602090815260408085206001600160a01b0390941685526002909301905250812055565b60008060ff19611e5260017f0c4ba382c0009cf238e4c1ca1a52f51c61e6248a70bdfb34e5ed49d5578a5c0c61271e565b604051602001611e6491815260200190565b60408051601f1981840301815291905280516020909101201692915050565b60008181526001830160205260408120548015611f6c576000611ea760018361271e565b8554909150600090611ebb9060019061271e565b9050818114611f20576000866000018281548110611edb57611edb612610565b9060005260206000200154905080876000018481548110611efe57611efe612610565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611f3157611f31612a08565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610523565b6000915050610523565b6060600080856001600160a01b031685604051611f939190612a1e565b600060405180830381855af49150503d8060008114611fce576040519150601f19603f3d011682016040523d82523d6000602084013e611fd3565b606091505b5091509150611fe486838387612018565b9695505050505050565b600082600001828154811061200557612005612610565b9060005260206000200154905092915050565b60608315612087578251600003612080576001600160a01b0385163b6120805760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610485565b5081612091565b6120918383612099565b949350505050565b8151156120a95781518083602001fd5b8060405162461bcd60e51b815260040161048591906124db565b600081518084526020808501945080840160005b838110156120fc5781516001600160a01b0316875295820195908201906001016120d7565b509495945050505050565b60208152600061089360208301846120c3565b6001600160a01b0381168114610ac557600080fd5b6000806040838503121561214257600080fd5b823561214d8161211a565b946020939093013593505050565b60006020828403121561216d57600080fd5b81356108938161211a565b60006020828403121561218a57600080fd5b5035919050565b600080604083850312156121a457600080fd5b8235915060208301356121b68161211a565b809150509250929050565b60008083601f8401126121d357600080fd5b5081356001600160401b038111156121ea57600080fd5b60208301915083602082850101111561220257600080fd5b9250929050565b6000806020838503121561221c57600080fd5b82356001600160401b0381111561223257600080fd5b61223e858286016121c1565b90969095509350505050565b60005b8381101561226557818101518382015260200161224d565b50506000910152565b6000815180845261228681602086016020860161224a565b601f01601f19169290920160200192915050565b8215158152604060208201526000612091604083018461226e565b6000806000604084860312156122ca57600080fd5b83356122d58161211a565b925060208401356001600160401b038111156122f057600080fd5b6122fc868287016121c1565b9497909650939450505050565b6000806040838503121561231c57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156123695761236961232b565b604052919050565b6000602080838503121561238457600080fd5b82356001600160401b038082111561239b57600080fd5b818501915085601f8301126123af57600080fd5b8135818111156123c1576123c161232b565b6123d3601f8201601f19168501612341565b915080825286848285010111156123e957600080fd5b8084840185840137600090820190930192909252509392505050565b6000806020838503121561241857600080fd5b82356001600160401b038082111561242f57600080fd5b818501915085601f83011261244357600080fd5b81358181111561245257600080fd5b8660208260051b850101111561246757600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156124ce57603f198886030184526124bc85835161226e565b945092850192908501906001016124a0565b5092979650505050505050565b602081526000610893602083018461226e565b6020808252601f908201527f4163636f756e74466163746f72793a206e6f7420616e206163636f756e742e00604082015260600190565b8035801515811461253557600080fd5b919050565b60008060006060848603121561254f57600080fd5b833561255a8161211a565b92506020848101356001600160401b038082111561257757600080fd5b818701915087601f83011261258b57600080fd5b81358181111561259d5761259d61232b565b8060051b91506125ae848301612341565b818152918301840191848101908a8411156125c857600080fd5b938501935b838510156125f257843592506125e28361211a565b82825293850193908501906125cd565b80975050505050505061260760408501612525565b90509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161264e5761264e612626565b5060010190565b6020808252602a908201527f4163636f756e74466163746f72793a206163636f756e7420616c7265616479206040820152691c9959da5cdd195c995960b21b606082015260800190565b8082018082111561052357610523612626565b6000808335601e198436030181126126c957600080fd5b8301803591506001600160401b038211156126e357600080fd5b60200191503681900382131561220257600080fd5b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b8181038181111561052357610523612626565b600181811c9082168061274557607f821691505b602082108103610db357634e487b7160e01b600052602260045260246000fd5b7402832b936b4b9b9b4b7b7399d1030b1b1b7bab73a1605d1b81526000835161279581601585016020880161224a565b7001034b99036b4b9b9b4b733903937b6329607d1b60159184019182015283516127c681602684016020880161224a565b01602601949350505050565b6000602082840312156127e457600080fd5b5051919050565b60008261280857634e487b7160e01b600052601260045260246000fd5b500690565b6001600160a01b0384168152606060208201819052600090612831908301856120c3565b90508215156040830152949350505050565b6001600160a01b03831681526040602082018190526000906120919083018461226e565b601f8211156128b157600081815260208120601f850160051c8101602086101561288e5750805b601f850160051c820191505b818110156128ad5782815560010161289a565b5050505b505050565b81516001600160401b038111156128cf576128cf61232b565b6128e3816128dd8454612731565b84612867565b602080601f83116001811461291857600084156129005750858301515b600019600386901b1c1916600185901b1785556128ad565b600085815260208120601f198616915b8281101561294757888601518255948401946001909101908401612928565b50858210156129655787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000612988604083018561226e565b828103602084015261088f818561226e565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b808202811582820484141761052357610523612626565b600081612a0057612a00612626565b506000190190565b634e487b7160e01b600052603160045260246000fd5b60008251612a3081846020870161224a565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65640a7b0f5c59907924802379ebe98cdc23e2ee7820f63d30126e10b3752010e500a26469706673582212202271032390b92ef159e2653c3c8d23793c8f152b0b9e7a30089ed61bae5673d964736f6c634300081400336101806040523480156200001257600080fd5b50604051620050ca380380620050ca833981016040819052620000359162000274565b60408051808201825260078152661058d8dbdd5b9d60ca1b60208083019182528351808501855260018152603160f81b908201529151902060e08190527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66101008190524660a081815285517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818701819052818801959095526060810193909352608080840192909252308382018190528651808503909201825260c093840190965280519401939093209092529190526101205281816200011762000158565b6001600160a01b039081166101405216610160525050600180546001600160a01b031916331790556007805460ff60a01b1916600160a01b179055620002b3565b7f322cf19c484104d3b1a9c2982ebae869ede3fa5f6c4703ca41b9a48c76ee03005460ff808216916101009004168015620001e95760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60ff828116101562000257577f322cf19c484104d3b1a9c2982ebae869ede3fa5f6c4703ca41b9a48c76ee0300805460ff191660ff90811790915560408051918252517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989181900360200190a15b5050565b6001600160a01b03811681146200027157600080fd5b50565b600080604083850312156200028857600080fd5b825162000295816200025b565b6020840151909250620002a8816200025b565b809150509250929050565b60805160a05160c05160e05161010051610120516101405161016051614d87620003436000396000611e7b01526000818161067601528181612d7f01528181612f0f01528181612f450152818161300d0152818161308301526130b301526000612964015260006129b30152600061298e015260006128e7015260006129110152600061293b0152614d876000f3fe60806040526004361061023f5760003560e01c8063938e3d7b1161012e578063c45a0155116100ab578063e9523c971161006f578063e9523c9714610704578063ec1afaaa14610726578063f15d424e14610746578063f23a6e6114610773578063fbfa77cf1461079f57600080fd5b8063c45a015514610664578063d087d28814610698578063d1f57894146106ad578063d42f2f35146106cd578063e8a3d485146106e257600080fd5b8063b0d691fe116100f2578063b0d691fe146105ce578063b2836277146105e3578063b61d27f6146105f8578063b76464d514610618578063bc197c811461063857600080fd5b8063938e3d7b146105015780639934cdb114610521578063a03e4bc314610542578063a9082d8414610562578063ac9650d8146105a157600080fd5b80633dd6e025116101bc5780635892e236116101805780635892e2361461045f578063735de9f71461047f57806374c13fda1461049f5780637dff5a79146104bf5780638b52d723146104df57600080fd5b80633dd6e025146103df57806347e1da2a146104015780634a58db19146104215780634d44560d146104295780634e11f6a51461044957600080fd5b80631626ba7e116102035780631626ba7e1461033f5780631dd756c51461035f57806324d7806c1461037f578063292454141461039f5780633a871cdd146103bf57600080fd5b806301ffc9a71461024b5780630a1028c4146102805780630db796e9146102ae57806311eac855146102e6578063150b7a021461030657600080fd5b3661024657005b600080fd5b34801561025757600080fd5b5061026b610266366004613aa3565b6107bf565b60405190151581526020015b60405180910390f35b34801561028c57600080fd5b506102a061029b366004613b8a565b610805565b604051908152602001610277565b3480156102ba57600080fd5b506007546102ce906001600160a01b031681565b6040516001600160a01b039091168152602001610277565b3480156102f257600080fd5b506003546102ce906001600160a01b031681565b34801561031257600080fd5b50610326610321366004613be3565b6108a9565b6040516001600160e01b03199091168152602001610277565b34801561034b57600080fd5b5061032661035a366004613c4e565b6108ba565b34801561036b57600080fd5b5061026b61037a366004613cad565b6109fa565b34801561038b57600080fd5b5061026b61039a366004613cf2565b610cd2565b3480156103ab57600080fd5b506001546102ce906001600160a01b031681565b3480156103cb57600080fd5b506102a06103da366004613d0f565b610d01565b3480156103eb57600080fd5b506103ff6103fa366004613cf2565b610d27565b005b34801561040d57600080fd5b506103ff61041c366004613da0565b6112a3565b6103ff611483565b34801561043557600080fd5b506103ff610444366004613e39565b6114ea565b34801561045557600080fd5b506102a060005481565b34801561046b57600080fd5b506103ff61047a366004613ea6565b611563565b34801561048b57600080fd5b506004546102ce906001600160a01b031681565b3480156104ab57600080fd5b506002546102ce906001600160a01b031681565b3480156104cb57600080fd5b5061026b6104da366004613cf2565b611929565b3480156104eb57600080fd5b506104f46119e2565b6040516102779190613fbc565b34801561050d57600080fd5b506103ff61051c36600461401e565b611c29565b34801561052d57600080fd5b5060075461026b90600160a01b900460ff1681565b34801561054e57600080fd5b506005546102ce906001600160a01b031681565b34801561056e57600080fd5b5061058261057d366004613ea6565b611c7a565b6040805192151583526001600160a01b03909116602083015201610277565b3480156105ad57600080fd5b506105c16105bc366004614066565b611cd1565b60405161027791906140f7565b3480156105da57600080fd5b506102ce611e40565b3480156105ef57600080fd5b506103ff611ea0565b34801561060457600080fd5b506103ff61061336600461414c565b6120f1565b34801561062457600080fd5b506103ff610633366004613cf2565b6121f7565b34801561064457600080fd5b50610326610653366004614235565b63bc197c8160e01b95945050505050565b34801561067057600080fd5b506102ce7f000000000000000000000000000000000000000000000000000000000000000081565b3480156106a457600080fd5b506102a0612240565b3480156106b957600080fd5b506103ff6106c83660046142e2565b6122c0565b3480156106d957600080fd5b506104f4612534565b3480156106ee57600080fd5b506106f76126a5565b6040516102779190614329565b34801561071057600080fd5b50610719612756565b6040516102779190614380565b34801561073257600080fd5b506103ff6107413660046143a1565b612768565b34801561075257600080fd5b50610766610761366004613cf2565b6127cd565b60405161027791906143be565b34801561077f57600080fd5b5061032661078e3660046143d1565b63f23a6e6160e01b95945050505050565b3480156107ab57600080fd5b506006546102ce906001600160a01b031681565b60006001600160e01b03198216630271189760e51b14806107f057506001600160e01b03198216630a85bd0160e11b145b806107ff57506107ff826128a5565b92915050565b6000807f82cac545155fcbf147f2a9013809613677ac7d65498556e6d19ce43bcbf6c284838051906020012060405160200161084b929190918252602082015260400190565b60405160208183030381529060405280519060200120905061086b6128da565b60405161190160f01b602082015260228101919091526042810182905260620160405160208183030381529060405280519060200120915050919050565b630a85bd0160e11b5b949350505050565b6000806108e7846040516020016108d391815260200190565b604051602081830303815290604052610805565b905060006108f58285612a01565b905061090081610cd2565b156109175750630b135d3f60e11b91506107ff9050565b336000610922612a25565b6001600160a01b038416600090815260069190910160205260409020905061094a8183612a49565b8061097a575061095981612a6b565b600114801561097a5750600061096f8282612a75565b6001600160a01b0316145b6109d75760405162461bcd60e51b8152602060048201526024808201527f4163636f756e743a2063616c6c6572206e6f7420617070726f7665642074617260448201526333b2ba1760e11b60648201526084015b60405180910390fd5b6109e083611929565b156109f057630b135d3f60e11b94505b5050505092915050565b6000610a04612a25565b6001600160a01b0384166000908152600491909101602052604090205460ff1615610a31575060016107ff565b6000610a3b612a25565b6001600160a01b0385166000908152600591909101602090815260408083208151606081018352815481526001909101546001600160801b0380821694830194909452600160801b9004909216908201529150610a96612a25565b6006016000866001600160a01b03166001600160a01b0316815260200190815260200160002090504282602001516001600160801b03161180610ae6575081604001516001600160801b03164210155b80610af75750610af581612a6b565b155b15610b07576000925050506107ff565b6000610b1e610b196060870187614439565b612a81565b90506000610b2b83612a6b565b6001148015610b4c57506000610b418482612a75565b6001600160a01b0316145b90506324f16c0560e11b6001600160e01b0319831601610bc357600080610b7e610b7960608a018a614439565b612abb565b9150915082610ba457610b918583612a49565b610ba457600096505050505050506107ff565b8551811115610bbc57600096505050505050506107ff565b5050610cc5565b635c0f12eb60e11b6001600160e01b0319831601610cb857600080610bf3610bee60608a018a614439565b612b20565b509150915082610c5d5760005b8251811015610c5b57610c35838281518110610c1e57610c1e61447f565b602002602001015187612a4990919063ffffffff16565b610c495760009750505050505050506107ff565b80610c53816144ab565b915050610c00565b505b60005b8251811015610cb057818181518110610c7b57610c7b61447f565b602002602001015187600001511015610c9e5760009750505050505050506107ff565b80610ca8816144ab565b915050610c60565b505050610cc5565b60009450505050506107ff565b5060019695505050505050565b6000610cdc612a25565b6001600160a01b03909216600090815260049290920160205250604090205460ff1690565b6000610d0b612b6d565b610d158484612bd7565b9050610d2082612d1d565b9392505050565b6001546001600160a01b0316331480610d445750610d4433610cd2565b610d905760405162461bcd60e51b815260206004820152601d60248201527f4163636f756e743a206e6f742061646d696e206f722055706b6565702e00000060448201526064016109ce565b600754600160a01b900460ff16610de95760405162461bcd60e51b815260206004820152601760248201527f4163636f756e743a20737570706c79207061757365642e00000000000000000060448201526064016109ce565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5491906144c4565b90506000610e65620f4240836144dd565b90506000610e7382846144ff565b600554604051632fe4a15f60e21b81523060048201529192506000916001600160a01b039091169063bf92857c9060240160c060405180830381865afa158015610ec1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee59190614512565b5050505091505060008311156110f857600081118015610f055750808311155b1561100c5760055460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590529086169063095ea7b3906044016020604051808303816000875af1158015610f5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f81919061455c565b5060055460405163573ade8160e01b81526001600160a01b03878116600483015260248201869052600260448301523060648301529091169063573ade81906084016020604051808303816000875af1158015610fe2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100691906144c4565b506110f8565b60055460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590529086169063095ea7b3906044016020604051808303816000875af115801561105f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611083919061455c565b5060055460405163617ba03760e01b81526001600160a01b03878116600483015260248201869052306044830152600060648301529091169063617ba03790608401600060405180830381600087803b1580156110df57600080fd5b505af11580156110f3573d6000803e3d6000fd5b505050505b604080516002808252606082018352600092602083019080368337019050509050858160008151811061112d5761112d61447f565b6001600160a01b03928316602091820292909201015260025482519116908290600190811061115e5761115e61447f565b6001600160a01b0392831660209182029290920101526004805460405163095ea7b360e01b815290831691810191909152602481018590529087169063095ea7b3906044016020604051808303816000875af11580156111c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e6919061455c565b50600480546040516338ed173960e01b81526060926001600160a01b03909216916338ed173991611221918891829188913091429101614579565b6000604051808303816000875af1158015611240573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261126891908101906145b5565b90508060018151811061127d5761127d61447f565b6020026020010151600080828254611295919061463a565b909155505050505050505050565b6112ab611e40565b6001600160a01b0316336001600160a01b031614806112ce57506112ce33610cd2565b6112ea5760405162461bcd60e51b81526004016109ce9061464d565b6112f2612d6a565b848114801561130057508483145b61134c5760405162461bcd60e51b815260206004820152601d60248201527f4163636f756e743a2077726f6e67206172726179206c656e677468732e00000060448201526064016109ce565b60005b8581101561140b576113f887878381811061136c5761136c61447f565b90506020020160208101906113819190613cf2565b8686848181106113935761139361447f565b905060200201358585858181106113ac576113ac61447f565b90506020028101906113be9190614439565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612e4c92505050565b5080611403816144ab565b91505061134f565b506002546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611454573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147891906144c4565b600055505050505050565b61148b611e40565b60405163b760faf960e01b81523060048201526001600160a01b03919091169063b760faf99034906024016000604051808303818588803b1580156114cf57600080fd5b505af11580156114e3573d6000803e3d6000fd5b5050505050565b6114f2612ebd565b6114fa611e40565b60405163040b850f60e31b81526001600160a01b03848116600483015260248201849052919091169063205c2878906044015b600060405180830381600087803b15801561154757600080fd5b505af115801561155b573d6000803e3d6000fd5b505050505050565b60006115726020850185613cf2565b90504261158560e0860160c087016146a5565b6001600160801b0316111580156115b457506115a8610100850160e086016146a5565b6001600160801b031642105b6115ea5760405162461bcd60e51b8152602060048201526007602482015266085c195c9a5bd960ca1b60448201526064016109ce565b6000806115f8868686611c7a565b91509150816116325760405162461bcd60e51b81526004016109ce906020808252600490820152632173696760e01b604082015260600190565b600161163c612a25565b610100880135600090815260079190910160209081526040808320805460ff1916941515949094179093559091611678919089019089016146d1565b60ff1611156116ae57600061169360408801602089016146d1565b60ff1660011490506116a58482612efb565b50505050505050565b6116b783610cd2565b156116ec5760405162461bcd60e51b815260206004820152600560248201526430b236b4b760d91b60448201526064016109ce565b611701836116f8612a25565b60020190613042565b5060405180606001604052808760600135815260200187608001602081019061172a91906146a5565b6001600160801b0316815260200161174860c0890160a08a016146a5565b6001600160801b0316905261175b612a25565b6001600160a01b03851660009081526005919091016020908152604080832084518155918401519301516001600160801b03908116600160801b029316929092176001909201919091556117d16117b0612a25565b6001600160a01b038616600090815260069190910160205260409020613057565b805190915060005b8181101561183b576118288382815181106117f6576117f661447f565b6020026020010151611806612a25565b6001600160a01b03891660009081526006919091016020526040902090613064565b5061183460018261463a565b90506117d9565b5061184960408901896146ec565b9050905060005b818110156118ca576118b761186860408b018b6146ec565b838181106118785761187861447f565b905060200201602081019061188d9190613cf2565b611895612a25565b6001600160a01b03891660009081526006919091016020526040902090613042565b506118c360018261463a565b9050611850565b506118d488613079565b846001600160a01b0316836001600160a01b03167ff21d10c26e35863a8df291aca54181ee8c4a3bc8e00246c3f7a5a14b69d826a78a60405161191791906147bb565b60405180910390a35050505050505050565b600080611934612a25565b6001600160a01b038416600090815260059190910160209081526040918290208251606081018452815481526001909101546001600160801b03808216938301849052600160801b909104169281019290925290915042108015906119a5575080604001516001600160801b031642105b8015610d20575060006119da6119b9612a25565b6001600160a01b038616600090815260069190910160205260409020612a6b565b119392505050565b606060006119f96119f1612a25565b600201613057565b80519091506000805b82811015611a8a57611a2c848281518110611a1f57611a1f61447f565b6020026020010151611929565b15611a435781611a3b816144ab565b925050611a78565b6000848281518110611a5757611a5761447f565b60200260200101906001600160a01b031690816001600160a01b0316815250505b611a8360018261463a565b9050611a02565b50806001600160401b03811115611aa357611aa3613acd565b604051908082528060200260200182016040528015611adc57816020015b611ac9613a59565b815260200190600190039081611ac15790505b5093506000805b83811015611c215760006001600160a01b0316858281518110611b0857611b0861447f565b60200260200101516001600160a01b031614611c0f576000858281518110611b3257611b3261447f565b602002602001015190506000611b46612a25565b6001600160a01b038316600081815260059290920160209081526040928390208351606081018552815481526001909101546001600160801b0380821683850152600160801b9091041681850152835160a081019094529183529092508101611bb06117b0612a25565b81526020018260000151815260200182602001516001600160801b0316815260200182604001516001600160801b0316815250888580611bef906144ab565b965081518110611c0157611c0161447f565b602002602001018190525050505b611c1a60018261463a565b9050611ae3565b505050505090565b611c31613127565b611c6e5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016109ce565b611c778161313f565b50565b600080611c90611c898661325e565b85856133a2565b9050611c9a612a25565b6101008601356000908152600791909101602052604090205460ff16158015611cc75750611cc781610cd2565b9150935093915050565b6060816001600160401b03811115611ceb57611ceb613acd565b604051908082528060200260200182016040528015611d1e57816020015b6060815260200190600190039081611d095790505b509050336000805b84811015611e37578115611da557611d8330878784818110611d4a57611d4a61447f565b9050602002810190611d5c9190614439565b86604051602001611d6f939291906148b4565b6040516020818303038152906040526133f4565b848281518110611d9557611d9561447f565b6020026020010181905250611e25565b611e0730878784818110611dbb57611dbb61447f565b9050602002810190611dcd9190614439565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506133f492505050565b848281518110611e1957611e1961447f565b60200260200101819052505b80611e2f816144ab565b915050611d26565b50505092915050565b7f036f52c1827dab135f7fd44ca0bddde297e2f659c710e0ec53e975f22b548300546000906001600160a01b03168015611e7957919050565b7f000000000000000000000000000000000000000000000000000000000000000091505090565b6001546001600160a01b0316331480611ebd5750611ebd33610cd2565b611f095760405162461bcd60e51b815260206004820152601d60248201527f4163636f756e743a206e6f742061646d696e206f722055706b6565702e00000060448201526064016109ce565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611f52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f7691906144c4565b90506000611f8c670de0b6b3a7640000836144dd565b60025460065460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b3906044016020604051808303816000875af1158015611fe3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612007919061455c565b50600654604051636e553f6560e01b8152600481018390523060248201526001600160a01b0390911690636e553f65906044016020604051808303816000875af1158015612059573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207d91906144c4565b506002546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156120c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ea91906144c4565b6000555050565b6120f9611e40565b6001600160a01b0316336001600160a01b0316148061211c575061211c33610cd2565b6121385760405162461bcd60e51b81526004016109ce9061464d565b612140612d6a565b612181848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612e4c92505050565b506002546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156121ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121ee91906144c4565b60005550505050565b6121ff612ebd565b7f036f52c1827dab135f7fd44ca0bddde297e2f659c710e0ec53e975f22b54830080546001600160a01b0319166001600160a01b0392909216919091179055565b600061224a611e40565b604051631aab3f0d60e11b8152306004820152600060248201526001600160a01b0391909116906335567e1a90604401602060405180830381865afa158015612297573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122bb91906144c4565b905090565b600080516020614d0b8339815191525460ff8082169161010090041680158080156122ee575060018360ff16105b806123065750303b15801561230657508260ff166001145b6123695760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016109ce565b600080516020614d0b833981519152805460ff1916600117905580156123a657600080516020614d0b833981519152805461ff0019166101001790555b6123e68686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061341992505050565b600080516020614ceb83398151915255612401866001612efb565b600180546001600160a01b031990811633179091556007805460028054841673c4bf5cbdabe595361438f8c6a187bdc330539c601790556003805484167394a9d9ac8a22534e3faca9f4e7f2e2cf85d5e4c817905560048054841673c51afe94b5931894f92a7d8f2d628985ffe4c9f9179055600580548416736ae43d3271ff6888e7fc43fd7321a503ff7389511790556006805490931673ca324eb66adda0b9612d3cf40cc1ddb50bbb756d1790925574013b1356916ba1d5e2b78dc0bc4fbb0ae33353fa126001600160a81b0319909216919091179055801561155b57600080516020614d0b833981519152805461ff0019169055604080516001815290517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989181900360200190a1505050505050565b606060006125436119f1612a25565b8051909150806001600160401b0381111561256057612560613acd565b60405190808252806020026020018201604052801561259957816020015b612586613a59565b81526020019060019003908161257e5790505b50925060005b8181101561269f5760008382815181106125bb576125bb61447f565b6020026020010151905060006125cf612a25565b6001600160a01b038316600081815260059290920160209081526040928390208351606081018552815481526001909101546001600160801b0380821683850152600160801b9091041681850152835160a0810190945291835290925081016126396117b0612a25565b81526020018260000151815260200182602001516001600160801b0316815260200182604001516001600160801b031681525086848151811061267e5761267e61447f565b60200260200101819052505050600181612698919061463a565b905061259f565b50505090565b60607f4bc804ba64359c0e35e5ed5d90ee596ecaa49a3a930ddcb1470ea0dd625da90080546126d3906148da565b80601f01602080910402602001604051908101604052809291908181526020018280546126ff906148da565b801561274c5780601f106127215761010080835404028352916020019161274c565b820191906000526020600020905b81548152906001019060200180831161272f57829003601f168201915b5050505050905090565b60606122bb612763612a25565b613057565b612770611e40565b6001600160a01b0316336001600160a01b03161480612793575061279333610cd2565b6127af5760405162461bcd60e51b81526004016109ce9061464d565b60078054911515600160a01b0260ff60a01b19909216919091179055565b6127d5613a59565b60006127df612a25565b6001600160a01b038416600081815260059290920160209081526040928390208351606081018552815481526001909101546001600160801b0380821683850152600160801b9091041681850152835160a08101909452918352909250810161286a612849612a25565b6001600160a01b038716600090815260069190910160205260409020613057565b81526020018260000151815260200182602001516001600160801b0316815260200182604001516001600160801b0316815250915050919050565b60006001600160e01b03198216630271189760e51b14806107ff57506301ffc9a760e01b6001600160e01b03198316146107ff565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561293357507f000000000000000000000000000000000000000000000000000000000000000046145b1561295d57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000806000612a10858561344c565b91509150612a1d81613491565b509392505050565b7f3181e78fc1b109bc611fd2406150bf06e33faa75f71cba12c3e1fd670f2def0090565b6001600160a01b03811660009081526001830160205260408120541515610d20565b60006107ff825490565b6000610d2083836135db565b60006004821015612aa45760405162461bcd60e51b81526004016109ce9061490e565b612ab260046000848661492d565b610d2091614957565b6000806044831015612adf5760405162461bcd60e51b81526004016109ce9061490e565b612aed60246004858761492d565b810190612afa9190613cf2565b9150612b0a60446024858761492d565b810190612b179190614987565b90509250929050565b606080806064841015612b455760405162461bcd60e51b81526004016109ce9061490e565b612b52846004818861492d565b810190612b5f9190614a1f565b919790965090945092505050565b612b75611e40565b6001600160a01b0316336001600160a01b031614612bd55760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e740000000060448201526064016109ce565b565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c81206000612c56612c19610140870187614439565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508693925050612a019050565b9050612c6281866109fa565b612c71576001925050506107ff565b6000612c7b612a25565b6001600160a01b03929092166000908152600590920160209081526040808420815160608082018452825482526001909201546001600160801b0380821683870152600160801b8204908116928501929092528351928301845295825265ffffffffffff8087169483019490945292831691015260d09290921b6001600160d01b03191660a09290921b65ffffffffffff60a01b169190911795945050505050565b8015611c7757604051600090339060001990849084818181858888f193505050503d80600081146114e3576040519150601f19603f3d011682016040523d82523d6000602084013e6114e3565b60405163c3c5a54760e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063c3c5a54790602401602060405180830381865afa158015612dd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612df4919061455c565b611c7757600080516020614ceb833981519152546040516320e80fe360e21b815260048101919091526001600160a01b038216906383a03f8c906024015b600060405180830381600087803b1580156114cf57600080fd5b60606000846001600160a01b03168484604051612e699190614b04565b60006040518083038185875af1925050503d8060008114612ea6576040519150601f19603f3d011682016040523d82523d6000602084013e612eab565b606091505b509250905080612a1d57815160208301fd5b612ec633610cd2565b612bd55760405162461bcd60e51b815260206004820152600660248201526510b0b236b4b760d11b60448201526064016109ce565b612f058282613605565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163b1561303e578015612fd6576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016630b61e12b837f036f52c1827dab135f7fd44ca0bddde297e2f659c710e0ec53e975f22b548300600101546040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561154757600080fd5b600080516020614ceb833981519152546040516301270f4760e71b81526001600160a01b03848116600483015260248201929092527f000000000000000000000000000000000000000000000000000000000000000090911690639387a3809060440161152d565b5050565b6000610d20836001600160a01b0384166136b4565b60606000610d2083613703565b6000610d20836001600160a01b03841661375f565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163b15611c77576001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016630b61e12b6130e56020840184613cf2565b600080516020614ceb8339815191525460405160e084901b6001600160e01b03191681526001600160a01b039290921660048301526024820152604401612e32565b600061313233610cd2565b806122bb57505030331490565b60007f4bc804ba64359c0e35e5ed5d90ee596ecaa49a3a930ddcb1470ea0dd625da900805461316d906148da565b80601f0160208091040260200160405190810160405280929190818152602001828054613199906148da565b80156131e65780601f106131bb576101008083540402835291602001916131e6565b820191906000526020600020905b8154815290600101906020018083116131c957829003601f168201915b50505050509050816132157f4bc804ba64359c0e35e5ed5d90ee596ecaa49a3a930ddcb1470ea0dd625da90090565b906132209082614b6b565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051613252929190614c2a565b60405180910390a15050565b60607f3fd4a1a1a267c84185e3b7eecd57c68783c0581d538b9d6e5f23e4670497c1e961328e6020840184613cf2565b61329e60408501602086016146d1565b6132ab60408601866146ec565b6040516020016132bc929190614c58565b60408051601f19818403018152919052805160209091012060608601356132e960a08801608089016146a5565b6132f960c0890160a08a016146a5565b61330960e08a0160c08b016146a5565b61331a6101008b0160e08c016146a5565b60408051602081019a909a526001600160a01b039098169789019790975260ff9095166060880152608087019390935260a08601919091526001600160801b0390811660c086015290811660e0850152908116610100848101919091529116610120830152830135610140820152610160016040516020818303038152906040529050919050565b60006108b283838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050875160208901206133ee92509050613852565b90612a01565b6060610d208383604051806060016040528060278152602001614d2b6027913961387f565b6000828260405160200161342e929190614c9a565b60405160208183030381529060405280519060200120905092915050565b60008082516041036134825760208301516040840151606085015160001a613476878285856138f7565b9450945050505061348a565b506000905060025b9250929050565b60008160048111156134a5576134a5614cbe565b036134ad5750565b60018160048111156134c1576134c1614cbe565b0361350e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016109ce565b600281600481111561352257613522614cbe565b0361356f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016109ce565b600381600481111561358357613583614cbe565b03611c775760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016109ce565b60008260000182815481106135f2576135f261447f565b9060005260206000200154905092915050565b8061360e612a25565b6001600160a01b038416600090815260049190910160205260409020805460ff19169115159190911790558015613657576136518261364b612a25565b90613042565b5061366b565b61366982613663612a25565b90613064565b505b816001600160a01b03167f235bc17e7930760029e9f4d860a2a8089976de5b381cf8380fc11c1d88a11133826040516136a8911515815260200190565b60405180910390a25050565b60008181526001830160205260408120546136fb575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556107ff565b5060006107ff565b60608160000180548060200260200160405190810160405280929190818152602001828054801561375357602002820191906000526020600020905b81548152602001906001019080831161373f575b50505050509050919050565b600081815260018301602052604081205480156138485760006137836001836144ff565b8554909150600090613797906001906144ff565b90508181146137fc5760008660000182815481106137b7576137b761447f565b90600052602060002001549050808760000184815481106137da576137da61447f565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061380d5761380d614cd4565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506107ff565b60009150506107ff565b60006107ff61385f6128da565b8360405161190160f01b8152600281019290925260228201526042902090565b6060600080856001600160a01b03168560405161389c9190614b04565b600060405180830381855af49150503d80600081146138d7576040519150601f19603f3d011682016040523d82523d6000602084013e6138dc565b606091505b50915091506138ed868383876139bb565b9695505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561392e57506000905060036139b2565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015613982573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166139ab576000600192509250506139b2565b9150600090505b94509492505050565b60608315613a2a578251600003613a23576001600160a01b0385163b613a235760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109ce565b50816108b2565b6108b28383815115613a3f5781518083602001fd5b8060405162461bcd60e51b81526004016109ce9190614329565b6040518060a0016040528060006001600160a01b03168152602001606081526020016000815260200160006001600160801b0316815260200160006001600160801b031681525090565b600060208284031215613ab557600080fd5b81356001600160e01b031981168114610d2057600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715613b0b57613b0b613acd565b604052919050565b60006001600160401b03831115613b2c57613b2c613acd565b613b3f601f8401601f1916602001613ae3565b9050828152838383011115613b5357600080fd5b828260208301376000602084830101529392505050565b600082601f830112613b7b57600080fd5b610d2083833560208501613b13565b600060208284031215613b9c57600080fd5b81356001600160401b03811115613bb257600080fd5b6108b284828501613b6a565b6001600160a01b0381168114611c7757600080fd5b8035613bde81613bbe565b919050565b60008060008060808587031215613bf957600080fd5b8435613c0481613bbe565b93506020850135613c1481613bbe565b92506040850135915060608501356001600160401b03811115613c3657600080fd5b613c4287828801613b6a565b91505092959194509250565b60008060408385031215613c6157600080fd5b8235915060208301356001600160401b03811115613c7e57600080fd5b613c8a85828601613b6a565b9150509250929050565b60006101608284031215613ca757600080fd5b50919050565b60008060408385031215613cc057600080fd5b8235613ccb81613bbe565b915060208301356001600160401b03811115613ce657600080fd5b613c8a85828601613c94565b600060208284031215613d0457600080fd5b8135610d2081613bbe565b600080600060608486031215613d2457600080fd5b83356001600160401b03811115613d3a57600080fd5b613d4686828701613c94565b9660208601359650604090950135949350505050565b60008083601f840112613d6e57600080fd5b5081356001600160401b03811115613d8557600080fd5b6020830191508360208260051b850101111561348a57600080fd5b60008060008060008060608789031215613db957600080fd5b86356001600160401b0380821115613dd057600080fd5b613ddc8a838b01613d5c565b90985096506020890135915080821115613df557600080fd5b613e018a838b01613d5c565b90965094506040890135915080821115613e1a57600080fd5b50613e2789828a01613d5c565b979a9699509497509295939492505050565b60008060408385031215613e4c57600080fd5b8235613e5781613bbe565b946020939093013593505050565b60008083601f840112613e7757600080fd5b5081356001600160401b03811115613e8e57600080fd5b60208301915083602082850101111561348a57600080fd5b600080600060408486031215613ebb57600080fd5b83356001600160401b0380821115613ed257600080fd5b908501906101208288031215613ee757600080fd5b90935060208501359080821115613efd57600080fd5b50613f0a86828701613e65565b9497909650939450505050565b80516001600160a01b03908116835260208083015160a082860181905281519086018190526000939183019290849060c08801905b80831015613f6e57855185168252948301946001929092019190830190613f4c565b506040870151604089015260608701519450613f9560608901866001600160801b03169052565b60808701519450613fb160808901866001600160801b03169052565b979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561401157603f19888603018452613fff858351613f17565b94509285019290850190600101613fe3565b5092979650505050505050565b60006020828403121561403057600080fd5b81356001600160401b0381111561404657600080fd5b8201601f8101841361405757600080fd5b6108b284823560208401613b13565b6000806020838503121561407957600080fd5b82356001600160401b0381111561408f57600080fd5b61409b85828601613d5c565b90969095509350505050565b60005b838110156140c25781810151838201526020016140aa565b50506000910152565b600081518084526140e38160208601602086016140a7565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561401157603f1988860301845261413a8583516140cb565b9450928501929085019060010161411e565b6000806000806060858703121561416257600080fd5b843561416d81613bbe565b93506020850135925060408501356001600160401b0381111561418f57600080fd5b61419b87828801613e65565b95989497509550505050565b60006001600160401b038211156141c0576141c0613acd565b5060051b60200190565b600082601f8301126141db57600080fd5b813560206141f06141eb836141a7565b613ae3565b82815260059290921b8401810191818101908684111561420f57600080fd5b8286015b8481101561422a5780358352918301918301614213565b509695505050505050565b600080600080600060a0868803121561424d57600080fd5b853561425881613bbe565b9450602086013561426881613bbe565b935060408601356001600160401b038082111561428457600080fd5b61429089838a016141ca565b945060608801359150808211156142a657600080fd5b6142b289838a016141ca565b935060808801359150808211156142c857600080fd5b506142d588828901613b6a565b9150509295509295909350565b6000806000604084860312156142f757600080fd5b833561430281613bbe565b925060208401356001600160401b0381111561431d57600080fd5b613f0a86828701613e65565b602081526000610d2060208301846140cb565b600081518084526020808501945080840160005b838110156143755781516001600160a01b031687529582019590820190600101614350565b509495945050505050565b602081526000610d20602083018461433c565b8015158114611c7757600080fd5b6000602082840312156143b357600080fd5b8135610d2081614393565b602081526000610d206020830184613f17565b600080600080600060a086880312156143e957600080fd5b85356143f481613bbe565b9450602086013561440481613bbe565b9350604086013592506060860135915060808601356001600160401b0381111561442d57600080fd5b6142d588828901613b6a565b6000808335601e1984360301811261445057600080fd5b8301803591506001600160401b0382111561446a57600080fd5b60200191503681900382131561348a57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016144bd576144bd614495565b5060010190565b6000602082840312156144d657600080fd5b5051919050565b6000826144fa57634e487b7160e01b600052601260045260246000fd5b500690565b818103818111156107ff576107ff614495565b60008060008060008060c0878903121561452b57600080fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b60006020828403121561456e57600080fd5b8151610d2081614393565b85815284602082015260a06040820152600061459860a083018661433c565b6001600160a01b0394909416606083015250608001529392505050565b600060208083850312156145c857600080fd5b82516001600160401b038111156145de57600080fd5b8301601f810185136145ef57600080fd5b80516145fd6141eb826141a7565b81815260059190911b8201830190838101908783111561461c57600080fd5b928401925b82841015613fb157835182529284019290840190614621565b808201808211156107ff576107ff614495565b60208082526021908201527f4163636f756e743a206e6f742061646d696e206f7220456e747279506f696e746040820152601760f91b606082015260800190565b80356001600160801b0381168114613bde57600080fd5b6000602082840312156146b757600080fd5b610d208261468e565b803560ff81168114613bde57600080fd5b6000602082840312156146e357600080fd5b610d20826146c0565b6000808335601e1984360301811261470357600080fd5b8301803591506001600160401b0382111561471d57600080fd5b6020019150600581901b360382131561348a57600080fd5b6000808335601e1984360301811261474c57600080fd5b83016020810192503590506001600160401b0381111561476b57600080fd5b8060051b360382131561348a57600080fd5b8183526000602080850194508260005b858110156143755781356147a081613bbe565b6001600160a01b03168752958201959082019060010161478d565b602081526147dc602082016147cf84613bd3565b6001600160a01b03169052565b60006147ea602084016146c0565b60ff81166040840152506148016040840184614735565b6101208060608601526148196101408601838561477d565b9250606086013560808601526148316080870161468e565b6001600160801b03811660a0870152915061484e60a0870161468e565b6001600160801b03811660c0870152915061486b60c0870161468e565b6001600160801b03811660e0870152915061488860e0870161468e565b91506101006148a1818701846001600160801b03169052565b9590950135939094019290925250919050565b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b600181811c908216806148ee57607f821691505b602082108103613ca757634e487b7160e01b600052602260045260246000fd5b602080825260059082015264214461746160d81b604082015260600190565b6000808585111561493d57600080fd5b8386111561494a57600080fd5b5050820193919092039150565b6001600160e01b0319813581811691600485101561497f5780818660040360031b1b83161692505b505092915050565b60006020828403121561499957600080fd5b5035919050565b600082601f8301126149b157600080fd5b813560206149c16141eb836141a7565b82815260059290921b840181019181810190868411156149e057600080fd5b8286015b8481101561422a5780356001600160401b03811115614a035760008081fd5b614a118986838b0101613b6a565b8452509183019183016149e4565b600080600060608486031215614a3457600080fd5b83356001600160401b0380821115614a4b57600080fd5b818601915086601f830112614a5f57600080fd5b81356020614a6f6141eb836141a7565b82815260059290921b8401810191818101908a841115614a8e57600080fd5b948201945b83861015614ab5578535614aa681613bbe565b82529482019490820190614a93565b97505087013592505080821115614acb57600080fd5b614ad7878388016141ca565b93506040860135915080821115614aed57600080fd5b50614afa868287016149a0565b9150509250925092565b60008251614b168184602087016140a7565b9190910192915050565b601f821115614b6657600081815260208120601f850160051c81016020861015614b475750805b601f850160051c820191505b8181101561155b57828155600101614b53565b505050565b81516001600160401b03811115614b8457614b84613acd565b614b9881614b9284546148da565b84614b20565b602080601f831160018114614bcd5760008415614bb55750858301515b600019600386901b1c1916600185901b17855561155b565b600085815260208120601f198616915b82811015614bfc57888601518255948401946001909101908401614bdd565b5085821015614c1a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000614c3d60408301856140cb565b8281036020840152614c4f81856140cb565b95945050505050565b60008184825b85811015614c8f578135614c7181613bbe565b6001600160a01b031683526020928301929190910190600101614c5e565b509095945050505050565b6001600160a01b03831681526040602082018190526000906108b2908301846140cb565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603160045260246000fdfe036f52c1827dab135f7fd44ca0bddde297e2f659c710e0ec53e975f22b548301322cf19c484104d3b1a9c2982ebae869ede3fa5f6c4703ca41b9a48c76ee0300416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220901f32a1ff162f40fd71c2c6b3905a3cd9b42af74c3f577d65225e978e17a4d564736f6c63430008140033",
    "sourceMap": "1068:72:70:-:0;;;-1:-1:-1;;;;;;1068:72:70;1098:42;1068:72;;;;851:5073;1145:155;1190:42;851:5073;1145:155;;;1246:42;1145:155;;;;;;;;:::i;:::-;;1487:253;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1614:11;1635:4;1602:39;;;;;:::i;:::-;-1:-1:-1;;;;;812:15:79;;;794:34;;864:15;;859:2;844:18;;837:43;744:2;729:18;1602:39:70;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1940:36:66;;;;;1987:24;;;;1689:45:70::1;1378:4:40;1720:13:70::0;1689:10:::1;:45::i;:::-;1487:253:::0;;851:5073;;4336:163:41;4424:31;4441:4;4447:7;4424:16;:31::i;:::-;4466:25;4477:4;4483:7;4466:10;:25::i;:::-;4336:163;;:::o;5937:195:40:-;6016:30;:36;;;574:66;6016:36;;;;;;;;-1:-1:-1;;;;;6016:45:40;;;;;;;;;;:52;;-1:-1:-1;;6016:52:40;6064:4;6016:52;;;6084:40;3244:10:70;;6016:36:40;;6084:40;;6016:30;6084:40;5937:195;;:::o;4565:387:41:-;4636:11;4650:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:55;;-1:-1:-1;4775:1:41;4716:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:60;;:49;;:43;:60;;;;;:::i;:::-;;;;-1:-1:-1;4854:7:41;;-1:-1:-1;4789:31:41;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:62;;;:57;;:62;;;;:72;;-1:-1:-1;;;;;;4789:72:41;-1:-1:-1;;;;;4789:72:41;;;;;;;;;;:62;4872:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;-1:-1:-1;;;;;4872:66:41;;;;;:57;;;;:66;;;;;;:72;-1:-1:-1;4565:387:41:o;8058:25:40:-;8051:32;;7948:143;:::o;5416:173:41:-;5480:46;5546:35;1430:18;;-1:-1:-1;;636:56:41;691:1;644:43;636:56;:::i;:::-;625:68;;;;;;1432:25:79;;1420:2;1405:18;;1286:177;625:68:41;;;;-1:-1:-1;;625:68:41;;;;;;;;;615:79;;625:68;615:79;;;;:105;;1391:203;-1:-1:-1;;1391:203:41:o;851:5073:70:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;851:5073:70;-1:-1:-1;;;;;851:5073:70;;;;;;;;;;;-1:-1:-1;851:5073:70;;;;;;;-1:-1:-1;851:5073:70;;;-1:-1:-1;851:5073:70;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:131:79;-1:-1:-1;;;;;89:31:79;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:406::-;250:6;258;311:2;299:9;290:7;286:23;282:32;279:52;;;327:1;324;317:12;279:52;359:9;353:16;378:31;403:5;378:31;:::i;:::-;478:2;463:18;;457:25;428:5;;-1:-1:-1;491:33:79;457:25;491:33;:::i;:::-;543:7;533:17;;;150:406;;;;;:::o;891:127::-;952:10;947:3;943:20;940:1;933:31;983:4;980:1;973:15;1007:4;1004:1;997:15;1023:125;1088:9;;;1109:10;;;1106:36;;;1122:18;;:::i;:::-;1023:125;;;;:::o;1153:128::-;1220:9;;;1241:11;;;1238:37;;;1255:18;;:::i;1286:177::-;851:5073:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "851:5073:70:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5282:111:66;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3348:361;;;;;;:::i;:::-;;:::i;:::-;;5832:154;;;;;;:::i;:::-;;:::i;1463:46::-;;;;;;;;-1:-1:-1;;;;;1618:32:79;;;1600:51;;1588:2;1573:18;1463:46:66;1454:203:79;3447:144:40;;;;;;:::i;:::-;3515:7;3542:41;;;:35;:41;;;;;;;3447:144;;;;1993:25:79;;;1981:2;1966:18;3447:144:40;1847:177:79;3996:323:40;;;;;;:::i;:::-;;:::i;5306:224::-;;;;;;:::i;:::-;;:::i;5445:476:70:-;;;;;;:::i;:::-;;:::i;4617:103:66:-;;;:::i;3842:204:70:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3067:273:66:-;;;;;;:::i;:::-;;:::i;5504:243::-;;;;;;:::i;:::-;;:::i;2224:808:41:-;;;;;;:::i;:::-;;:::i;1932:155:40:-;;;;;;:::i;:::-;;:::i;:::-;;;5097:14:79;;5090:22;5072:41;;5060:2;5045:18;1932:155:40;4932:187:79;3795:364:66;;;;;;:::i;:::-;;:::i;1651:194:38:-;;;;;;:::i;:::-;;:::i;1333:49:40:-;;1378:4;1333:49;;2854:261;;;;;;:::i;:::-;;:::i;1516:35:66:-;;;;;1817:147:70;;;;;;:::i;:::-;;:::i;717:579:31:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4429:125:66:-;;;;;;:::i;:::-;;:::i;3450:473:41:-;;;;;;:::i;:::-;;:::i;4700:198:40:-;;;;;;:::i;:::-;;:::i;2264:710:66:-;;;;;;:::i;:::-;;:::i;4793:419::-;;;;;;:::i;:::-;;:::i;2234:140:38:-;;;:::i;:::-;;;;;;;:::i;5282:111:66:-;5329:16;5365:20;:11;:18;:20::i;:::-;5358:27;;5282:111;:::o;3348:361::-;3441:10;3470:35;3441:10;3499:5;3470:19;:35::i;:::-;3462:79;;;;-1:-1:-1;;;3462:79:66;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;3573:25:66;;3554:16;3573:25;;;:16;:25;;;;;:38;;3603:7;3573:29;:38::i;:::-;3554:57;;3628:11;3624:78;;;3682:7;-1:-1:-1;;;;;3661:29:66;3673:7;-1:-1:-1;;;;;3661:29:66;;;;;;;;;;;3624:78;3412:297;;3348:361;;:::o;5832:154::-;-1:-1:-1;;;;;5945:24:66;;;;;;:16;:24;;;;;5900:25;;5945:33;;:31;:33::i;:::-;5938:40;5832:154;-1:-1:-1;;5832:154:66:o;3996:323:40:-;4081:67;-1:-1:-1;;;;;;;;;;;4092:21:40;:41;;;;:35;;;;;:41;;;;;;3244:10:70;4081::40;:67::i;:::-;-1:-1:-1;;;;;;;;;;;4163:30:40;:36;;;;;;;;;;;-1:-1:-1;;;;;4163:45:40;;;;;;;;;;;4159:117;;;4225:39;;-1:-1:-1;;;4225:39:40;;8780:2:79;4225:39:40;;;8762:21:79;8819:2;8799:18;;;8792:30;8858:31;8838:18;;;8831:59;8907:18;;4225:39:40;8578:353:79;4159:117:40;4286:25;4297:4;4303:7;4286:10;:25::i;:::-;3996:323;;:::o;5306:224::-;3244:10:70;-1:-1:-1;;;;;5398:23:40;;;5394:92;;5438:36;;-1:-1:-1;;;5438:36:40;;9138:2:79;5438:36:40;;;9120:21:79;9177:2;9157:18;;;9150:30;9216:28;9196:18;;;9189:56;9262:18;;5438:36:40;8936:350:79;5394:92:40;5496:26;5508:4;5514:7;5496:11;:26::i;5445:476:70:-;2200:6;;-1:-1:-1;;;;;2200:6:70;2186:10;:20;2178:52;;;;-1:-1:-1;;;2178:52:70;;9493:2:79;2178:52:70;;;9475:21:79;9532:2;9512:18;;;9505:30;-1:-1:-1;;;9551:18:79;;;9544:49;9610:18;;2178:52:70;9291:343:79;2178:52:70;5574:14:::1;::::0;;5641:59:::1;::::0;;::::1;5660:11:::0;5641:59:::1;:::i;:::-;5573:127;;;;;;5712:6;5707:122;5724:12;:19;5720:1;:23;5707:122;;;5775:6;-1:-1:-1::0;;;;;5759:45:70::1;;5805:12;5818:1;5805:15;;;;;;;;:::i;:::-;;;;;;;5759:62;;;;;;;;;;;;;;-1:-1:-1::0;;;;;1618:32:79;;;;1600:51;;1588:2;1573:18;;1454:203;5759:62:70::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5745:3;;;;:::i;:::-;;;5707:122;;;;5839:11;5835:81;;;5877:6;-1:-1:-1::0;;;;;5861:45:70::1;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5835:81;5566:355;;;5445:476:::0;;:::o;4617:103:66:-;4665:7;4692:20;:11;:18;:20::i;3842:204:70:-;3941:17;3960:24;4026:14;:12;:14::i;:::-;3996:44;;;;-1:-1:-1;3842:204:70;-1:-1:-1;;;3842:204:70:o;3067:273:66:-;3140:10;3169:35;3140:10;3198:5;3169:19;:35::i;:::-;3161:79;;;;-1:-1:-1;;;3161:79:66;;;;;;;:::i;:::-;3261:24;:11;3277:7;3261:15;:24::i;:::-;3253:79;;;;-1:-1:-1;;;3253:79:66;;;;;;;:::i;5504:243::-;5589:7;5609:12;5624:34;5638:12;5652:5;;5624:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5624:13:66;;-1:-1:-1;;;5624:34:66:i;:::-;5609:49;;5676:63;5711:21;5734:4;5676:34;:63::i;:::-;5669:70;;;5504:243;;;;;;:::o;2224:808:41:-;2308:14;2335:20;2358:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:55;;-1:-1:-1;2358:43:41;2450:575;2474:12;2470:1;:16;2450:575;;;2587:1;2515:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:60;;;:57;;:60;;;;;-1:-1:-1;;;;;2515:60:41;:74;2511:503;;2623:5;2614;:14;2610:168;;2662:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:60;;;:57;;;;:60;;;;;-1:-1:-1;;;;;2662:60:41;;-1:-1:-1;2745:13:41;;-1:-1:-1;;2745:13:41;2610:168;2796:10;2805:1;2796:10;;:::i;:::-;;;2511:503;;;2850:25;2858:4;2872:1;2850:7;:25::i;:::-;:103;;;;;2884:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:69;;;:57;;:69;;;;;2879:74;;2850:103;2828:186;;;2988:10;2997:1;2988:10;;:::i;:::-;;;2828:186;2488:6;2493:1;2488:6;;:::i;:::-;;;2450:575;;;;2324:708;;2224:808;;;;:::o;1932:155:40:-;2010:4;2034:36;;;-1:-1:-1;;;;;;;;;;;2034:36:40;;;;;;;;-1:-1:-1;;;;;2034:45:40;;;;;;;;;;;;;;;1932:155::o;3795:364:66:-;3890:10;3919:35;3890:10;3948:5;3919:19;:35::i;:::-;3911:79;;;;-1:-1:-1;;;3911:79:66;;;;;;;:::i;:::-;-1:-1:-1;;;;;4020:25:66;;4003:14;4020:25;;;:16;:25;;;;;:41;;4053:7;4020:32;:41::i;:::-;4003:58;;4078:9;4074:78;;;4132:7;-1:-1:-1;;;;;4109:31:66;4123:7;-1:-1:-1;;;;;4109:31:66;;;;;;;;;;;3861:298;;3795:364;;:::o;1651:194:38:-;1729:20;:18;:20::i;:::-;1724:78;;1766:24;;-1:-1:-1;;;1766:24:38;;12194:2:79;1766:24:38;;;12176:21:79;12233:2;12213:18;;;12206:30;-1:-1:-1;;;12252:18:79;;;12245:44;12306:18;;1766:24:38;11992:338:79;1724:78:38;1814:23;1832:4;1814:17;:23::i;:::-;1651:194;:::o;2854:261:40:-;2933:4;-1:-1:-1;;;;;;;;;;;2955:30:40;:36;;;;;;;;;;;:48;;;;;;;;;;2950:134;;-1:-1:-1;;;;;;;;;;;3027:30:40;:36;;;;;;;;;;;-1:-1:-1;;;;;3027:45:40;;;;;;;;;;;;-1:-1:-1;3020:52:40;;2950:134;-1:-1:-1;3103:4:40;2854:261;;;;:::o;1817:147:70:-;1891:6;;-1:-1:-1;;;;;1891:6:70;:20;1883:52;;;;-1:-1:-1;;;1883:52:70;;12537:2:79;1883:52:70;;;12519:21:79;12576:2;12556:18;;;12549:30;-1:-1:-1;;;12595:18:79;;;12588:49;12654:18;;1883:52:70;12335:343:79;1883:52:70;1942:6;:16;;-1:-1:-1;;;;;;1942:16:70;-1:-1:-1;;;;;1942:16:70;;;;;;;;;;1817:147::o;717:579:31:-;777:22;834:4;-1:-1:-1;;;;;822:24:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;812:34:31;-1:-1:-1;3244:10:70;857:14:31;;947:317;967:15;;;947:317;;;1008:11;1004:249;;;1053:78;1090:4;1114;;1119:1;1114:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1123:6;1097:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1053:28;:78::i;:::-;1040:7;1048:1;1040:10;;;;;;;;:::i;:::-;;;;;;:91;;;;1004:249;;;1185:52;1222:4;1229;;1234:1;1229:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1185:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1185:28:31;;-1:-1:-1;;;1185:52:31:i;:::-;1172:7;1180:1;1172:10;;;;;;;;:::i;:::-;;;;;;:65;;;;1004:249;984:3;;;;:::i;:::-;;;;947:317;;4429:125:66;4492:4;4516:30;4492:4;4537:8;4516:20;:30::i;3450:473:41:-;3524:13;3550:20;3573:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:55;;-1:-1:-1;3641:197:41;3665:12;3661:1;:16;3641:197;;;3778:1;3706:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:60;;;:57;;:60;;;;;-1:-1:-1;;;;;3706:60:41;:74;3702:125;;3801:10;3810:1;3801:10;;:::i;:::-;;;3702:125;3679:6;3684:1;3679:6;;:::i;:::-;;;3641:197;;;;3852:25;3860:4;3874:1;3852:7;:25::i;:::-;3848:68;;;3894:10;3903:1;3894:10;;:::i;:::-;;;3848:68;3539:384;3450:473;;;:::o;4700:198:40:-;4786:67;-1:-1:-1;;;;;;;;;;;4797:21:40;5282:111:66;2264:710;2360:7;2380:12;2395:21;2380:36;;2427:12;2442:28;2456:6;2464:5;;2442:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2442:13:66;;-1:-1:-1;;;2442:28:66:i;:::-;2427:43;;2481:15;2499:46;2534:4;2540;2499:34;:46::i;:::-;2481:64;-1:-1:-1;;;;;;2562:19:66;;;:23;2558:70;;2609:7;-1:-1:-1;2602:14:66;;-1:-1:-1;;2602:14:66;2558:70;2650:37;2676:4;2682;2650:25;:37::i;:::-;2640:47;-1:-1:-1;2704:10:66;-1:-1:-1;;;;;2718:10:66;2704:24;;2700:136;;2753:24;:11;2769:7;2753:15;:24::i;:::-;2745:79;;;;-1:-1:-1;;;2745:79:66;;;;;;;:::i;:::-;2848:42;2867:7;2876:6;2884:5;;2848:18;:42::i;:::-;2932:6;-1:-1:-1;;;;;2908:31:66;2923:7;-1:-1:-1;;;;;2908:31:66;;;;;;;;;;;2959:7;2264:710;-1:-1:-1;;;;;;2264:710:66:o;4793:419::-;4867:25;4922:4;4913:6;:13;:45;;;;;4938:20;:11;:18;:20::i;:::-;4930:4;:28;;4913:45;4905:93;;;;-1:-1:-1;;;4905:93:66;;13776:2:79;4905:93:66;;;13758:21:79;13815:2;13795:18;;;13788:30;13854:34;13834:18;;;13827:62;-1:-1:-1;;;13905:18:79;;;13898:33;13948:19;;4905:93:66;13574:399:79;4905:93:66;5011:11;5025:13;5032:6;5025:4;:13;:::i;:::-;5011:27;-1:-1:-1;5074:13:66;5081:6;5074:4;:13;:::i;:::-;-1:-1:-1;;;;;5060:28:66;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5060:28:66;;5049:39;;5106:9;5101:104;5125:3;5121:1;:7;5101:104;;;5167:26;5182:10;5186:6;5182:1;:10;:::i;:::-;5167:11;;:14;:26::i;:::-;5153:8;5162:1;5153:11;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5153:40:66;;;:11;;;;;;;;;;;:40;5130:6;5135:1;5130:6;;:::i;:::-;;;5101:104;;;;4894:318;4793:419;;;;:::o;2234:140:38:-;2295:13;790:66;2321:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2234:140;:::o;10263:310:50:-;10326:16;10355:22;10380:19;10388:3;10380:7;:19::i;6266:241:66:-;6359:4;6376:17;6396:64;6431:21;6454:5;6396:34;:64::i;:::-;-1:-1:-1;;;;;6478:21:66;;;;;;;-1:-1:-1;;6266:241:66;;;;:::o;8259:152:50:-;8329:4;8353:50;8358:3;-1:-1:-1;;;;;8378:23:50;;8353:4;:50::i;6519:526:40:-;-1:-1:-1;;;;;;;;;;;6608:30:40;:36;;;;;;;;;;;-1:-1:-1;;;;;6608:45:40;;;;;;;;;;;6603:435;;6817:41;6845:7;-1:-1:-1;;;;;6817:41:40;6855:2;6817:19;:41::i;:::-;6931:38;6959:4;6966:2;6931:19;:38::i;:::-;6724:268;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6724:268:40;;;;;;;;;;-1:-1:-1;;;6670:356:40;;;;;;;:::i;4336:163:41:-;4424:31;4441:4;4447:7;4424:16;:31::i;:::-;4466:25;4477:4;4483:7;4466:10;:25::i;4051:168::-;4140:32;4158:4;4164:7;4140:17;:32::i;:::-;4183:28;4197:4;4203:7;4183:13;:28::i;9084:117:50:-;9147:7;9174:19;9182:3;4568:18;;4485:109;4052:1177:70;4099:4;4105:12;4126:31;4160:16;4126:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4126:50:70;;;;;;;;;;;;;;;;;;;;;;;4183:24;4210:16;:14;:16::i;:::-;4183:43;;4233:29;4279:14;:21;-1:-1:-1;;;;;4265:36:70;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4265:36:70;;4233:68;;4308:37;4352:10;4374:6;4369:855;4386:7;:14;4382:1;:18;4369:855;;;4421:6;4416:206;4433:14;:21;4429:1;:25;4416:206;;;4526:1;4483:14;4498:1;4483:17;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4476:35:70;;4512:7;4520:1;4512:10;;;;;;;;:::i;:::-;;;;;;;4476:47;;;;;;;;;;;;;;-1:-1:-1;;;;;1618:32:79;;;;1600:51;;1588:2;1573:18;;1454:203;4476:47:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;4472:141;;;4564:14;4579:1;4564:17;;;;;;;;:::i;:::-;;;;;;;4542:12;4555:5;4542:19;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4542:39:70;;;:19;;;;;;;;;;;:39;4594:7;;;:::i;:::-;;;4472:141;4456:3;;;:::i;:::-;;;4416:206;;;;4630:16;4665:7;4673:1;4665:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4649:41:70;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4726:10;;4748;;4630:62;;-1:-1:-1;4701:15:70;;-1:-1:-1;;;;;4726:10:70;;;;4719:28;;4748:7;;4756:1;;4748:10;;;;;;:::i;:::-;;;;;;;4719:40;;;;;;;;;;;;;;-1:-1:-1;;;;;1618:32:79;;;;1600:51;;1588:2;1573:18;;1454:203;4719:40:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4701:58;;4770:16;4814:11;4801:10;:24;4800:53;;;;-1:-1:-1;4851:1:70;4831:17;4844:4;4831:10;:17;:::i;:::-;:21;4800:53;:68;;4863:5;4800:68;;;4856:4;4800:68;4770:107;;4923:5;-1:-1:-1;;;;;4909:20:70;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4909:20:70;;4886:43;;4943:6;4938:91;4955:5;4951:1;:9;4938:91;;;5004:12;5017:1;5004:15;;;;;;;;:::i;:::-;;;;;;;4978:20;4999:1;4978:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4978:41:70;;;:23;;;;;;;;;;;:41;4962:3;;;:::i;:::-;;;4938:91;;;;5073:1;5043:20;:27;:31;:46;;;;5078:11;5043:46;5039:178;;;5122:4;5150:7;5158:1;5150:10;;;;;;;;:::i;:::-;;;;;;;5162:20;5184:11;5139:57;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5102:105;;;;;;;;;;;;;4052:1177;;:::o;5039:178::-;4407:817;;;4402:3;;;;:::i;:::-;;;4369:855;;;;4119:1110;;;;;4052:1177;;:::o;6770:161:66:-;6860:7;6908:6;6916:5;6897:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6887:36;;;;;;6880:43;;6770:161;;;;:::o;3882:232:42:-;3336:4;3330:11;4100:4;3371;3362:14;;3355:32;3424:34;3417:4;3408:14;;3401:58;-1:-1:-1;3480:14:42;;3473:38;;;3537:42;3525:55;;3610:4;3601:14;;3594:28;;;3685:4;3678;3669:14;;3659:31;3652:4;3643:14;;3636:55;3744:4;3737;3728:14;;;3718:31;4005:17;;4042:64;3071:696;5416:173:41;5480:46;5546:35;:33;:35::i;8587:158:50:-;8660:4;8684:53;8692:3;-1:-1:-1;;;;;8712:23:50;;8684:7;:53::i;2913:135:70:-;2983:4;3003:39;2983:4;3031:10;3003:7;:39::i;1930:244:38:-;1997:21;790:66;1997:62;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2111:4;2070:26;790:66;;5282:111:66;2070:26:38;:38;:45;;:38;:45;:::i;:::-;;2133:33;2152:7;2161:4;2133:33;;;;;;;:::i;:::-;;;;;;;;1986:188;1930:244;:::o;6840:200:51:-;6923:12;6955:77;6976:6;6984:4;6955:77;;;;;;;;;;;;;;;;;:20;:77::i;8831:167:50:-;-1:-1:-1;;;;;8965:23:50;;8911:4;4367:19;;;:12;;;:19;;;;;;:24;;8935:55;4270:129;2151:805:42;2235:16;2572:48;2554:14;2548:4;2544:25;2538:4;2534:36;2531:90;2525:4;2518:104;2781:32;2764:14;2758:4;2754:25;2751:63;2745:4;2738:77;2864:4;2858;2852;2849:1;2841:28;2829:40;-1:-1:-1;;;;;;2898:22:42;;2890:58;;;;-1:-1:-1;;;2890:58:42;;19269:2:79;2890:58:42;;;19251:21:79;19308:2;19288:18;;;19281:30;19347:25;19327:18;;;19320:53;19390:18;;2890:58:42;19067:347:79;2631:187:70;2760:52;;-1:-1:-1;;;2760:52:70;;-1:-1:-1;;;;;2760:37:70;;;;;:52;;2798:6;;2806:5;;;;2760:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:187;;;;:::o;9555:158:50:-;9629:7;9680:22;9684:3;9696:5;9680:3;:22::i;5618:111::-;5674:16;5710:3;:11;;5703:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5618:111;;;:::o;2174:414::-;2237:4;4367:19;;;:12;;;:19;;;;;;2254:327;;-1:-1:-1;2297:23:50;;;;;;;;:11;:23;;;;;;;;;;;;;2480:18;;2458:19;;;:12;;;:19;;;;;;:40;;;;2513:11;;2254:327;-1:-1:-1;2564:5:50;2557:12;;1618:451:53;1693:13;1719:19;1751:10;1755:6;1751:1;:10;:::i;:::-;:14;;1764:1;1751:14;:::i;:::-;-1:-1:-1;;;;;1741:25:53;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1741:25:53;;1719:47;;-1:-1:-1;;;1777:6:53;1784:1;1777:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1777:15:53;;;;;;;;;-1:-1:-1;;;1803:6:53;1810:1;1803:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1803:15:53;;;;;;;;-1:-1:-1;1834:9:53;1846:10;1850:6;1846:1;:10;:::i;:::-;:14;;1859:1;1846:14;:::i;:::-;1834:26;;1829:135;1866:1;1862;:5;1829:135;;;-1:-1:-1;;;1914:5:53;1922:3;1914:11;1901:25;;;;;;;:::i;:::-;;;;1889:6;1896:1;1889:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1889:37:53;;;;;;;;-1:-1:-1;1951:1:53;1941:11;;;;;1869:3;;;:::i;:::-;;;1829:135;;;-1:-1:-1;1982:10:53;;1974:55;;;;-1:-1:-1;;;1974:55:53;;20425:2:79;1974:55:53;;;20407:21:79;;;20444:18;;;20437:30;20503:34;20483:18;;;20476:62;20555:18;;1974:55:53;20223:356:79;5937:195:40;6016:30;:36;;;-1:-1:-1;;;;;;;;;;;6016:36:40;;;;;;;;-1:-1:-1;;;;;6016:45:40;;;;;;;;;;:52;;-1:-1:-1;;6016:52:40;6064:4;6016:52;;;6084:40;3244:10:70;;6016:36:40;;6084:40;;6016:30;6084:40;5937:195;;:::o;4565:387:41:-;4636:11;4650:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:55;;-1:-1:-1;4775:1:41;4716:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:60;;:49;;:43;:60;;;;;:::i;:::-;;;;-1:-1:-1;4854:7:41;;-1:-1:-1;4789:31:41;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:62;;;:57;;:62;;;;:72;;-1:-1:-1;;;;;;4789:72:41;-1:-1:-1;;;;;4789:72:41;;;;;;;;;;:62;4872:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;-1:-1:-1;;;;;4872:66:41;;;;;:57;;;;:66;;;;;;:72;-1:-1:-1;4565:387:41:o;6184:232:40:-;6264:25;6275:4;6281:7;6264:10;:25::i;:::-;6307:30;:36;;;-1:-1:-1;;;;;;;;;;;6307:36:40;;;;;;;;-1:-1:-1;;;;;6307:45:40;;;;;;;;;;6300:52;;-1:-1:-1;;6300:52:40;;;6368:40;3244:10:70;;6307:36:40;;6368:40;;6307:30;6368:40;6184:232;;:::o;5023:328:41:-;5097:11;5111:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;-1:-1:-1;;;;;5111:66:41;;;;:57;;:66;;;;;;-1:-1:-1;5197:31:41;:29;:31::i;:::-;:43;:49;;;;;;;;;;;:62;;;:57;;:62;;;;5190:69;;-1:-1:-1;;;;;;5190:69:41;;;5277:31;:29;:31::i;:::-;:43;:49;;;;;;;;;;;-1:-1:-1;;;;;5277:66:41;;;;;:57;;;;:66;;-1:-1:-1;5277:66:41;;5270:73;5023:328::o;1391:203::-;1430:18;;-1:-1:-1;;636:56:41;691:1;644:43;636:56;:::i;:::-;625:68;;;;;;1993:25:79;;1981:2;1966:18;;1847:177;625:68:41;;;;-1:-1:-1;;625:68:41;;;;;;;;;615:79;;625:68;615:79;;;;:105;;1391:203;-1:-1:-1;;1391:203:41:o;2764:1420:50:-;2830:4;2969:19;;;:12;;;:19;;;;;;3005:15;;3001:1176;;3380:21;3404:14;3417:1;3404:10;:14;:::i;:::-;3453:18;;3380:38;;-1:-1:-1;3433:17:50;;3453:22;;3474:1;;3453:22;:::i;:::-;3433:42;;3509:13;3496:9;:26;3492:405;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;3543:42;;3717:9;3688:3;:11;;3700:13;3688:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3802:23;;;:12;;;:23;;;;;:36;;;3492:405;3978:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4073:3;:12;;:19;4086:5;4073:19;;;;;;;;;;;4066:26;;;4116:4;4109:11;;;;;;;3001:1176;4160:5;4153:12;;;;;7234:332:51;7379:12;7405;7419:23;7446:6;-1:-1:-1;;;;;7446:19:51;7466:4;7446:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7404:67;;;;7489:69;7516:6;7524:7;7533:10;7545:12;7489:26;:69::i;:::-;7482:76;7234:332;-1:-1:-1;;;;;;7234:332:51:o;4948:120:50:-;5015:7;5042:3;:11;;5054:5;5042:18;;;;;;;;:::i;:::-;;;;;;;;;5035:25;;4948:120;;;;:::o;7862:644:51:-;8047:12;8076:7;8072:427;;;8104:10;:17;8125:1;8104:22;8100:290;;-1:-1:-1;;;;;1739:19:51;;;8314:60;;;;-1:-1:-1;;;8314:60:51;;21210:2:79;8314:60:51;;;21192:21:79;21249:2;21229:18;;;21222:30;21288:31;21268:18;;;21261:59;21337:18;;8314:60:51;21008:353:79;8314:60:51;-1:-1:-1;8411:10:51;8404:17;;8072:427;8454:33;8462:10;8474:12;8454:7;:33::i;:::-;7862:644;;;;;;:::o;9048:552::-;9209:17;;:21;9205:388;;9441:10;9435:17;9498:15;9485:10;9481:2;9477:19;9470:44;9205:388;9568:12;9561:20;;-1:-1:-1;;;9561:20:51;;;;;;;;:::i;14:461:79:-;67:3;105:5;99:12;132:6;127:3;120:19;158:4;187:2;182:3;178:12;171:19;;224:2;217:5;213:14;245:1;255:195;269:6;266:1;263:13;255:195;;;334:13;;-1:-1:-1;;;;;330:39:79;318:52;;390:12;;;;425:15;;;;366:1;284:9;255:195;;;-1:-1:-1;466:3:79;;14:461;-1:-1:-1;;;;;14:461:79:o;480:261::-;659:2;648:9;641:21;622:4;679:56;731:2;720:9;716:18;708:6;679:56;:::i;746:131::-;-1:-1:-1;;;;;821:31:79;;811:42;;801:70;;867:1;864;857:12;882:315;950:6;958;1011:2;999:9;990:7;986:23;982:32;979:52;;;1027:1;1024;1017:12;979:52;1066:9;1053:23;1085:31;1110:5;1085:31;:::i;:::-;1135:5;1187:2;1172:18;;;;1159:32;;-1:-1:-1;;;882:315:79:o;1202:247::-;1261:6;1314:2;1302:9;1293:7;1289:23;1285:32;1282:52;;;1330:1;1327;1320:12;1282:52;1369:9;1356:23;1388:31;1413:5;1388:31;:::i;1662:180::-;1721:6;1774:2;1762:9;1753:7;1749:23;1745:32;1742:52;;;1790:1;1787;1780:12;1742:52;-1:-1:-1;1813:23:79;;1662:180;-1:-1:-1;1662:180:79:o;2029:315::-;2097:6;2105;2158:2;2146:9;2137:7;2133:23;2129:32;2126:52;;;2174:1;2171;2164:12;2126:52;2210:9;2197:23;2187:33;;2270:2;2259:9;2255:18;2242:32;2283:31;2308:5;2283:31;:::i;:::-;2333:5;2323:15;;;2029:315;;;;;:::o;2349:347::-;2400:8;2410:6;2464:3;2457:4;2449:6;2445:17;2441:27;2431:55;;2482:1;2479;2472:12;2431:55;-1:-1:-1;2505:20:79;;-1:-1:-1;;;;;2537:30:79;;2534:50;;;2580:1;2577;2570:12;2534:50;2617:4;2609:6;2605:17;2593:29;;2669:3;2662:4;2653:6;2645;2641:19;2637:30;2634:39;2631:59;;;2686:1;2683;2676:12;2631:59;2349:347;;;;;:::o;2701:409::-;2771:6;2779;2832:2;2820:9;2811:7;2807:23;2803:32;2800:52;;;2848:1;2845;2838:12;2800:52;2888:9;2875:23;-1:-1:-1;;;;;2913:6:79;2910:30;2907:50;;;2953:1;2950;2943:12;2907:50;2992:58;3042:7;3033:6;3022:9;3018:22;2992:58;:::i;:::-;3069:8;;2966:84;;-1:-1:-1;2701:409:79;-1:-1:-1;;;;2701:409:79:o;3297:250::-;3382:1;3392:113;3406:6;3403:1;3400:13;3392:113;;;3482:11;;;3476:18;3463:11;;;3456:39;3428:2;3421:10;3392:113;;;-1:-1:-1;;3539:1:79;3521:16;;3514:27;3297:250::o;3552:270::-;3593:3;3631:5;3625:12;3658:6;3653:3;3646:19;3674:76;3743:6;3736:4;3731:3;3727:14;3720:4;3713:5;3709:16;3674:76;:::i;:::-;3804:2;3783:15;-1:-1:-1;;3779:29:79;3770:39;;;;3811:4;3766:50;;3552:270;-1:-1:-1;;3552:270:79:o;3827:298::-;4010:6;4003:14;3996:22;3985:9;3978:41;4055:2;4050;4039:9;4035:18;4028:30;3959:4;4075:44;4115:2;4104:9;4100:18;4092:6;4075:44;:::i;4130:544::-;4209:6;4217;4225;4278:2;4266:9;4257:7;4253:23;4249:32;4246:52;;;4294:1;4291;4284:12;4246:52;4333:9;4320:23;4352:31;4377:5;4352:31;:::i;:::-;4402:5;-1:-1:-1;4458:2:79;4443:18;;4430:32;-1:-1:-1;;;;;4474:30:79;;4471:50;;;4517:1;4514;4507:12;4471:50;4556:58;4606:7;4597:6;4586:9;4582:22;4556:58;:::i;:::-;4130:544;;4633:8;;-1:-1:-1;4530:84:79;;-1:-1:-1;;;;4130:544:79:o;4679:248::-;4747:6;4755;4808:2;4796:9;4787:7;4783:23;4779:32;4776:52;;;4824:1;4821;4814:12;4776:52;-1:-1:-1;;4847:23:79;;;4917:2;4902:18;;;4889:32;;-1:-1:-1;4679:248:79:o;5124:127::-;5185:10;5180:3;5176:20;5173:1;5166:31;5216:4;5213:1;5206:15;5240:4;5237:1;5230:15;5256:275;5327:2;5321:9;5392:2;5373:13;;-1:-1:-1;;5369:27:79;5357:40;;-1:-1:-1;;;;;5412:34:79;;5448:22;;;5409:62;5406:88;;;5474:18;;:::i;:::-;5510:2;5503:22;5256:275;;-1:-1:-1;5256:275:79:o;5536:764::-;5605:6;5636:2;5679;5667:9;5658:7;5654:23;5650:32;5647:52;;;5695:1;5692;5685:12;5647:52;5735:9;5722:23;-1:-1:-1;;;;;5805:2:79;5797:6;5794:14;5791:34;;;5821:1;5818;5811:12;5791:34;5859:6;5848:9;5844:22;5834:32;;5904:7;5897:4;5893:2;5889:13;5885:27;5875:55;;5926:1;5923;5916:12;5875:55;5962:2;5949:16;5984:2;5980;5977:10;5974:36;;;5990:18;;:::i;:::-;6032:53;6075:2;6056:13;;-1:-1:-1;;6052:27:79;6048:36;;6032:53;:::i;:::-;6019:66;;6108:2;6101:5;6094:17;6148:7;6143:2;6138;6134;6130:11;6126:20;6123:33;6120:53;;;6169:1;6166;6159:12;6120:53;6224:2;6219;6215;6211:11;6206:2;6199:5;6195:14;6182:45;6268:1;6247:14;;;6243:23;;;6236:34;;;;-1:-1:-1;6251:5:79;5536:764;-1:-1:-1;;;5536:764:79:o;6305:626::-;6402:6;6410;6463:2;6451:9;6442:7;6438:23;6434:32;6431:52;;;6479:1;6476;6469:12;6431:52;6519:9;6506:23;-1:-1:-1;;;;;6589:2:79;6581:6;6578:14;6575:34;;;6605:1;6602;6595:12;6575:34;6643:6;6632:9;6628:22;6618:32;;6688:7;6681:4;6677:2;6673:13;6669:27;6659:55;;6710:1;6707;6700:12;6659:55;6750:2;6737:16;6776:2;6768:6;6765:14;6762:34;;;6792:1;6789;6782:12;6762:34;6845:7;6840:2;6830:6;6827:1;6823:14;6819:2;6815:23;6811:32;6808:45;6805:65;;;6866:1;6863;6856:12;6805:65;6897:2;6889:11;;;;;6919:6;;-1:-1:-1;6305:626:79;;-1:-1:-1;;;;6305:626:79:o;6936:800::-;7096:4;7125:2;7165;7154:9;7150:18;7195:2;7184:9;7177:21;7218:6;7253;7247:13;7284:6;7276;7269:22;7322:2;7311:9;7307:18;7300:25;;7384:2;7374:6;7371:1;7367:14;7356:9;7352:30;7348:39;7334:53;;7422:2;7414:6;7410:15;7443:1;7453:254;7467:6;7464:1;7461:13;7453:254;;;7560:2;7556:7;7544:9;7536:6;7532:22;7528:36;7523:3;7516:49;7588:39;7620:6;7611;7605:13;7588:39;:::i;:::-;7578:49;-1:-1:-1;7685:12:79;;;;7650:15;;;;7489:1;7482:9;7453:254;;;-1:-1:-1;7724:6:79;;6936:800;-1:-1:-1;;;;;;;6936:800:79:o;7994:219::-;8143:2;8132:9;8125:21;8106:4;8163:44;8203:2;8192:9;8188:18;8180:6;8163:44;:::i;8218:355::-;8420:2;8402:21;;;8459:2;8439:18;;;8432:30;8498:33;8493:2;8478:18;;8471:61;8564:2;8549:18;;8218:355::o;9639:160::-;9704:20;;9760:13;;9753:21;9743:32;;9733:60;;9789:1;9786;9779:12;9733:60;9639:160;;;:::o;9804:1238::-;9911:6;9919;9927;9980:2;9968:9;9959:7;9955:23;9951:32;9948:52;;;9996:1;9993;9986:12;9948:52;10035:9;10022:23;10054:31;10079:5;10054:31;:::i;:::-;10104:5;-1:-1:-1;10128:2:79;10166:18;;;10153:32;-1:-1:-1;;;;;10234:14:79;;;10231:34;;;10261:1;10258;10251:12;10231:34;10299:6;10288:9;10284:22;10274:32;;10344:7;10337:4;10333:2;10329:13;10325:27;10315:55;;10366:1;10363;10356:12;10315:55;10402:2;10389:16;10424:2;10420;10417:10;10414:36;;;10430:18;;:::i;:::-;10476:2;10473:1;10469:10;10459:20;;10499:28;10523:2;10519;10515:11;10499:28;:::i;:::-;10561:15;;;10631:11;;;10627:20;;;10592:12;;;;10659:19;;;10656:39;;;10691:1;10688;10681:12;10656:39;10715:11;;;;10735:223;10751:6;10746:3;10743:15;10735:223;;;10833:3;10820:17;10805:32;;10850:33;10875:7;10850:33;:::i;:::-;10896:20;;;10768:12;;;;10936;;;;10735:223;;;10977:5;10967:15;;;;;;;;11001:35;11032:2;11021:9;11017:18;11001:35;:::i;:::-;10991:45;;9804:1238;;;;;:::o;11047:127::-;11108:10;11103:3;11099:20;11096:1;11089:31;11139:4;11136:1;11129:15;11163:4;11160:1;11153:15;11179:127;11240:10;11235:3;11231:20;11228:1;11221:31;11271:4;11268:1;11261:15;11295:4;11292:1;11285:15;11311:135;11350:3;11371:17;;;11368:43;;11391:18;;:::i;:::-;-1:-1:-1;11438:1:79;11427:13;;11311:135::o;11451:406::-;11653:2;11635:21;;;11692:2;11672:18;;;11665:30;11731:34;11726:2;11711:18;;11704:62;-1:-1:-1;;;11797:2:79;11782:18;;11775:40;11847:3;11832:19;;11451:406::o;11862:125::-;11927:9;;;11948:10;;;11945:36;;;11961:18;;:::i;12683:521::-;12760:4;12766:6;12826:11;12813:25;12920:2;12916:7;12905:8;12889:14;12885:29;12881:43;12861:18;12857:68;12847:96;;12939:1;12936;12929:12;12847:96;12966:33;;13018:20;;;-1:-1:-1;;;;;;13050:30:79;;13047:50;;;13093:1;13090;13083:12;13047:50;13126:4;13114:17;;-1:-1:-1;13157:14:79;13153:27;;;13143:38;;13140:58;;;13194:1;13191;13184:12;13209:360;13420:6;13412;13407:3;13394:33;13490:2;13486:15;;;;-1:-1:-1;;13482:53:79;13446:16;;13471:65;;;13560:2;13552:11;;13209:360;-1:-1:-1;13209:360:79:o;13978:128::-;14045:9;;;14066:11;;;14063:37;;;14080:18;;:::i;14111:380::-;14190:1;14186:12;;;;14233;;;14254:61;;14308:4;14300:6;14296:17;14286:27;;14254:61;14361:2;14353:6;14350:14;14330:18;14327:38;14324:161;;14407:10;14402:3;14398:20;14395:1;14388:31;14442:4;14439:1;14432:15;14470:4;14467:1;14460:15;14496:810;-1:-1:-1;;;14902:3:79;14895:36;14877:3;14960:6;14954:13;14976:75;15044:6;15039:2;15034:3;15030:12;15023:4;15015:6;15011:17;14976:75;:::i;:::-;-1:-1:-1;;;15110:2:79;15070:16;;;15102:11;;;15095:40;15160:13;;15182:76;15160:13;15244:2;15236:11;;15229:4;15217:17;;15182:76;:::i;:::-;15278:17;15297:2;15274:26;;14496:810;-1:-1:-1;;;;14496:810:79:o;15311:184::-;15381:6;15434:2;15422:9;15413:7;15409:23;15405:32;15402:52;;;15450:1;15447;15440:12;15402:52;-1:-1:-1;15473:16:79;;15311:184;-1:-1:-1;15311:184:79:o;15500:209::-;15532:1;15558;15548:132;;15602:10;15597:3;15593:20;15590:1;15583:31;15637:4;15634:1;15627:15;15665:4;15662:1;15655:15;15548:132;-1:-1:-1;15694:9:79;;15500:209::o;15714:439::-;-1:-1:-1;;;;;15943:32:79;;15925:51;;16012:2;16007;15992:18;;15985:30;;;-1:-1:-1;;16032:56:79;;16069:18;;16061:6;16032:56;:::i;:::-;16024:64;;16138:6;16131:14;16124:22;16119:2;16108:9;16104:18;16097:50;15714:439;;;;;;:::o;16158:314::-;-1:-1:-1;;;;;16333:32:79;;16315:51;;16402:2;16397;16382:18;;16375:30;;;-1:-1:-1;;16422:44:79;;16447:18;;16439:6;16422:44;:::i;16603:545::-;16705:2;16700:3;16697:11;16694:448;;;16741:1;16766:5;16762:2;16755:17;16811:4;16807:2;16797:19;16881:2;16869:10;16865:19;16862:1;16858:27;16852:4;16848:38;16917:4;16905:10;16902:20;16899:47;;;-1:-1:-1;16940:4:79;16899:47;16995:2;16990:3;16986:12;16983:1;16979:20;16973:4;16969:31;16959:41;;17050:82;17068:2;17061:5;17058:13;17050:82;;;17113:17;;;17094:1;17083:13;17050:82;;;17054:3;;;16694:448;16603:545;;;:::o;17324:1352::-;17450:3;17444:10;-1:-1:-1;;;;;17469:6:79;17466:30;17463:56;;;17499:18;;:::i;:::-;17528:97;17618:6;17578:38;17610:4;17604:11;17578:38;:::i;:::-;17572:4;17528:97;:::i;:::-;17680:4;;17744:2;17733:14;;17761:1;17756:663;;;;18463:1;18480:6;18477:89;;;-1:-1:-1;18532:19:79;;;18526:26;18477:89;-1:-1:-1;;17281:1:79;17277:11;;;17273:24;17269:29;17259:40;17305:1;17301:11;;;17256:57;18579:81;;17726:944;;17756:663;16550:1;16543:14;;;16587:4;16574:18;;-1:-1:-1;;17792:20:79;;;17910:236;17924:7;17921:1;17918:14;17910:236;;;18013:19;;;18007:26;17992:42;;18105:27;;;;18073:1;18061:14;;;;17940:19;;17910:236;;;17914:3;18174:6;18165:7;18162:19;18159:201;;;18235:19;;;18229:26;-1:-1:-1;;18318:1:79;18314:14;;;18330:3;18310:24;18306:37;18302:42;18287:58;18272:74;;18159:201;-1:-1:-1;;;;;18406:1:79;18390:14;;;18386:22;18373:36;;-1:-1:-1;17324:1352:79:o;18681:381::-;18878:2;18867:9;18860:21;18841:4;18904:44;18944:2;18933:9;18929:18;18921:6;18904:44;:::i;:::-;18996:9;18988:6;18984:22;18979:2;18968:9;18964:18;18957:50;19024:32;19049:6;19041;19024:32;:::i;19419:485::-;-1:-1:-1;;;;;19604:32:79;;19586:51;;19673:2;19668;19653:18;;19646:30;;;19692:18;;19685:34;;;19712:6;19761;19756:2;19741:18;;19728:48;19825:1;19796:22;;;19820:2;19792:31;;;19785:42;;;;19888:2;19867:15;;;-1:-1:-1;;19863:29:79;19848:45;19844:54;;19419:485;-1:-1:-1;;19419:485:79:o;19909:168::-;19982:9;;;20013;;20030:15;;;20024:22;;20010:37;20000:71;;20051:18;;:::i;20082:136::-;20121:3;20149:5;20139:39;;20158:18;;:::i;:::-;-1:-1:-1;;;20194:18:79;;20082:136::o;20584:127::-;20645:10;20640:3;20636:20;20633:1;20626:31;20676:4;20673:1;20666:15;20700:4;20697:1;20690:15;20716:287;20845:3;20883:6;20877:13;20899:66;20958:6;20953:3;20946:4;20938:6;20934:17;20899:66;:::i;:::-;20981:16;;;;;20716:287;-1:-1:-1;;20716:287:79:o",
    "linkReferences": {},
    "immutableReferences": {
      "33665": [
        {
          "start": 505,
          "length": 32
        },
        {
          "start": 2154,
          "length": 32
        },
        {
          "start": 3541,
          "length": 32
        },
        {
          "start": 4370,
          "length": 32
        }
      ],
      "33667": [
        {
          "start": 900,
          "length": 32
        },
        {
          "start": 3705,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "accountImplementation()": "11464fbe",
    "checkUpkeep(bytes)": "6e04ff0d",
    "contractURI()": "e8a3d485",
    "createAccount(address,bytes)": "d8fd8f44",
    "entrypoint()": "a65d69d4",
    "getAccounts(uint256,uint256)": "e68a7c3b",
    "getAccountsOfSigner(address)": "0e6254fd",
    "getAddress(address,bytes)": "8878ed33",
    "getAllAccounts()": "08e93d0a",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
    "initializeUpkeepAndRouter(address)": "a9709e15",
    "isRegistered(address)": "c3c5a547",
    "multicall(bytes[])": "ac9650d8",
    "onRegister(bytes32)": "83a03f8c",
    "onSignerAdded(address,bytes32)": "0b61e12b",
    "onSignerRemoved(address,bytes32)": "9387a380",
    "performUpkeep(bytes)": "4585e33b",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setContractURI(string)": "938e3d7b",
    "totalAccounts()": "58451f97"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entrypoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accountAdmin\",\"type\":\"address\"}],\"name\":\"AccountCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"SignerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"SignerRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accountImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entrypoint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"getAccounts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"getAccountsOfSigner\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adminSigner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAccounts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_upkeep\",\"type\":\"address\"}],\"name\":\"initializeUpkeepAndRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"onRegister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"onSignerAdded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"onSignerRemoved\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAccounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"checkUpkeep function called off-chain by Chainlink Automation infrastructureChecks for balances elegible for swap\",\"returns\":{\"performData\":\"The performData parameter triggering the performUpkeep\",\"upkeepNeeded\":\"A boolean indicating whether upkeep is needed.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"initializeUpkeepAndRouter(address)\":{\"details\":\"Initializes the Factory upkeep using Chainlink Automation.\"},\"multicall(bytes[])\":{\"details\":\"Receives and executes a batch of function calls on this contract.\",\"params\":{\"data\":\"The bytes data that makes up the batch of function calls to execute.\"},\"returns\":{\"results\":\"The bytes data that makes up the result of the batch of function calls executed.\"}},\"performUpkeep(bytes)\":{\"details\":\"performUpkeep function called by Chainlink Automation infrastructure after checkUpkeep checks\",\"params\":{\"performData\":\"the data inputed by Chainlink Automation retrieved by checkUpkeep\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AccountCreated(address,address)\":{\"notice\":\"Emitted when a new Account is created.\"},\"SignerAdded(address,address)\":{\"notice\":\"Emitted when a new signer is added to an Account.\"},\"SignerRemoved(address,address)\":{\"notice\":\"Emitted when a new signer is added to an Account.\"}},\"kind\":\"user\",\"methods\":{\"accountImplementation()\":{\"notice\":\"Returns the address of the Account implementation.\"},\"checkUpkeep(bytes)\":{\"notice\":\"This function is external, view, and implements the Upkeep interface.\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"createAccount(address,bytes)\":{\"notice\":\"Deploys a new Account for admin.\"},\"getAccounts(uint256,uint256)\":{\"notice\":\"Returns all accounts between the given indices.\"},\"getAccountsOfSigner(address)\":{\"notice\":\"Returns all accounts that the given address is a signer of.\"},\"getAddress(address,bytes)\":{\"notice\":\"Returns the address of an Account that would be deployed with the given admin signer.\"},\"getAllAccounts()\":{\"notice\":\"Returns all accounts created on the factory.\"},\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"isRegistered(address)\":{\"notice\":\"Returns whether an account is registered on this factory.\"},\"multicall(bytes[])\":{\"notice\":\"Receives and executes a batch of function calls on this contract.\"},\"onRegister(bytes32)\":{\"notice\":\"Callback function for an Account to register itself on the factory.\"},\"onSignerRemoved(address,bytes32)\":{\"notice\":\"Callback function for an Account to un-register its signers.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"totalAccounts()\":{\"notice\":\"Returns the total number of accounts.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/AccountFactory.sol\":\"AccountFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ccip/=lib/ccip/contracts/\",\":@chainlink/=lib/chainlink/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@thirdweb/=lib/thirdweb-smartaccount/\",\":ccip/=lib/ccip/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":std/=lib/forge-std/src/\",\":thirdweb-smartaccount/=lib/thirdweb-smartaccount/\"]},\"sources\":{\"lib/chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0xefd1603987351872d57fc092f54ce51d275a8cdce351f40afedbec52474e8405\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f389cd2301683e0a63e83829dda77cfd1293c3b5195271cf24edc679e8913dd\",\"dweb:/ipfs/QmVvRnkqEtHE5okQUoJkRP2gNs4j7FadbSGirTWdQsY29c\"]},\"lib/chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0x160761445c58aedce801a1c8f95d68562132a0c9766b53742ee10c7a7c307a79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ec8a2fdc84e9562d989335904c859f3ad4bfb3e63b06d7c9ad870801506ee3b\",\"dweb:/ipfs/QmYzDQyNAbP2DqWmMJzKYczKBFBfgmorHzCNMJQ1FBrmLP\"]},\"lib/chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xbdf0b47389f34a3d09ac1b733aa59adf1257454e84a837e28091cc7628f117e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13b9cc26d54e4827a4369ec6909b6efafaad26632f8bd08afb17bfd57d094e7f\",\"dweb:/ipfs/QmQVP9c8BXkB4e6fc27ucEPFkGSLc6h8Bfte6qW3WMrwmN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"lib/thirdweb-smartaccount/eip/ERC1271.sol\":{\"keccak256\":\"0x6d503c5329c5126ed6f44cdcca3f805407b1a407be6d2d044f260e5b4e8294f9\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://aefd8fc5f85c97aad08a0b2f9406b572049d923c479348eea0ec44d9e94e3c87\",\"dweb:/ipfs/QmZDiySaFcs3AmRYkNc3oZ87xktwnvSUkmGDjTUZ1MGU2W\"]},\"lib/thirdweb-smartaccount/eip/ERC165.sol\":{\"keccak256\":\"0x9c64f28eb3dc53d2b8d5e4dfe53bda0283646f954cdb1a0705201469b18c96b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74b6a7169f163116631e9dbf939329a459512344052f2767d485e1dc9d86ab17\",\"dweb:/ipfs/QmZfroBa7RHkwupJoZYzZwaj3BbR7Wa9po8phq5Q1Bottt\"]},\"lib/thirdweb-smartaccount/eip/interface/IERC165.sol\":{\"keccak256\":\"0xaacd9fcd919ddf4c7fc111aac0d25e3fad28a7c503d2b4be2429c12b0fd1990b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://153e79f890c3894274238aa9d6f2dc287272fc4788dc1e32646005cd8874238b\",\"dweb:/ipfs/QmTbwRQhunJj8AYsZZGZ4EGJLbrENgGUhyAMkbqVrm9D6F\"]},\"lib/thirdweb-smartaccount/extension/Multicall.sol\":{\"keccak256\":\"0x7fe7d5f24fe587a91f4dd21a7a4ca1274bd4a304ef838aa80ab404e6740a6a88\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://64c1f839f0d83c2f629f478fa60d2251fda5792608749cf3bd355db3a7788544\",\"dweb:/ipfs/QmSW5LE85AznmMzUCTwhP9kZ2x8D84hRnKTbT3ia7j2r6A\"]},\"lib/thirdweb-smartaccount/extension/interface/IAccountPermissions.sol\":{\"keccak256\":\"0x906f6455092d4c5f1a53fb6d695c91c7466bc01c6550a93a4afbec5b736c36bc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b99b18b550ecbca5e632b58342320038f608ee65e1cd77f0bded39162f8ccb63\",\"dweb:/ipfs/QmNjwTTterVYoYG3Sgz6rPbM5MzhaMeccSKwr1QhnHZfwL\"]},\"lib/thirdweb-smartaccount/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x9e5b2dd3d87d493e66da9f5d89292913b188a23ac2c4b92f071187aa19b1fe45\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d4835ef2e1e976d4c99922e439e420d005cbc28a038d3ffca2e2816dd9b6d6c8\",\"dweb:/ipfs/QmdfC32QKG45P1fMTfZzQtcue4gXsWLgKddWZ3KBRc6Dsv\"]},\"lib/thirdweb-smartaccount/extension/interface/IMulticall.sol\":{\"keccak256\":\"0x634e6fd2cc536305b54487ea8e3773e05bfcd72bdb75f3b18fc619a21ca3b73a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a97269245c6aedc388f0da5763f7c4e98efcda94d5c4d3f6d62148f68a9877b\",\"dweb:/ipfs/Qmaxt79z1c9KrJfhePMBH5QFNKPtGXLUVCE2KrykdyQXLB\"]},\"lib/thirdweb-smartaccount/extension/interface/IPermissions.sol\":{\"keccak256\":\"0x0eff3b9ac48dda21c9e01e10a4e997ea363b07fe036563b45c207516b30ecdda\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0f05c118073a28696f4e21dfd80cf8f1c618b6bb2799ad24ff7d10ba1e774a18\",\"dweb:/ipfs/QmT8xDP4RgWv2rZ8jTnzuJVY6NqUhZqtxxapYCHsTBJPbU\"]},\"lib/thirdweb-smartaccount/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0x21dabbe607d433c7f168f129cdf70924dc1898c4cee47aff013d09722f2298d7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bf417e26bef77eeb1bd9d6033783c37ec93f4deee4112d19cae4f863b81b35e0\",\"dweb:/ipfs/QmVGp5549xumuiPgFNhqsGu3o3Vkwr98iJZovBSL6Tnaw1\"]},\"lib/thirdweb-smartaccount/extension/upgradeable/AccountPermissions.sol\":{\"keccak256\":\"0x31443f1aab3ce6e053aa5b6700849c809f06b1c8371d2a61677aeac126a3391f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5fc2066046c9c6bae78575d5cbb9c2a58a0c7555fb98f8cde8b68b45280f90dd\",\"dweb:/ipfs/QmYWr9xomZu8MX5gjDptB7RBnAAFCtT6N9H2vmeR8idrjt\"]},\"lib/thirdweb-smartaccount/extension/upgradeable/ContractMetadata.sol\":{\"keccak256\":\"0x728fd85d78da6d90022f2332529dad1d09d4102fe50cf14a14d75eb90dac5e8b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a01f2f233b2237eacb3cc5ddc851e6c254e21cbe5b856092c0460e5a1f940f23\",\"dweb:/ipfs/Qmasy9MXWNRPVtbbrH1N26BsCjBreg3subjaU2Mnd7dZKY\"]},\"lib/thirdweb-smartaccount/extension/upgradeable/Initializable.sol\":{\"keccak256\":\"0xa01aede906ebb58fd9f62f1006cb558ba7762db1ae7e56d1f19837471e97e8ff\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://2d976a8b773cad535eccc80ee1788e4bcc5657eb8768e0655efc4dcf775dfb00\",\"dweb:/ipfs/QmexbZYV7h41woutRajZMFVUZH7m6Ki67rN64vZ1iuZzz2\"]},\"lib/thirdweb-smartaccount/extension/upgradeable/Permissions.sol\":{\"keccak256\":\"0x9274a8fac0ee15d95c4e8145d8d4aafa7e191882b6bafcf59c9ab15efc4ad049\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2c4ec47eaa25bb8cd9eb6cf54a9a9a048bce4d86aa33cafa527aa3c292131660\",\"dweb:/ipfs/QmTyrtQAMxPqzmHHLRchxkD8nQ4exbhhH3RFNH7P3mVnmq\"]},\"lib/thirdweb-smartaccount/extension/upgradeable/PermissionsEnumerable.sol\":{\"keccak256\":\"0xedf887c2cfd98a95358802d31a1f24a9f1ce87c9a0139b008ac09a5c3b7406da\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://41ad73d61d81f92a241216b87a0b820d6b9ba39f40438fdcffcafa096f0b1983\",\"dweb:/ipfs/QmeLPEmS6KhxAQcjCDTcwVesdzurkCwT4m29nrdiXUJoJd\"]},\"lib/thirdweb-smartaccount/external-deps/openzeppelin/proxy/Clones.sol\":{\"keccak256\":\"0xc02061f2a10a957cc6681e58216e71bcc624d00dd6edab8fbcc5dcd6b24a2825\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01a6702302ac31e4e5dccccb860bbe83e8dc852eec8cb9f53c7e9187d2500a60\",\"dweb:/ipfs/QmVgBvkGn1CxHPC4SJfauM82aUSvUKRFqDtrXiz29HL9u3\"]},\"lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xf43d9bff280c2721931c36fd8fb13a769a29c52268c2fc8d80ff948c1efb11bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9fb47aca8c18e11bd1f5331d9aae41761161ba230dd8c16d876b6183a4ecc\",\"dweb:/ipfs/QmWCjf8bdirbeSJqRMhE3W5n51jodwWu7FDzMNXGaoEcVs\"]},\"lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xf735581e2728965940c9dd60ba73d199e39a2ee9a1ed62e5cab4cbf0ccb5815d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6833b21890a26a47719277e9afab26788ffb48f2e4faeb6099d0b2a7c92d4165\",\"dweb:/ipfs/QmYEcKDStaqD1t9maNr3VrfBekVGHGU8Zw1RGMDjoHY5aN\"]},\"lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x787fed2d713b0bc509c72cb8f16b2667395efdea578b134d88b0474d43d13de5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f855a71b7b5908be6874e39face4f570ab9df20849b3120984d053ea41f3255\",\"dweb:/ipfs/QmXkNRDRbPaSGw89ps2wdT4w2k2Wmiq4n836U7WXejNqhm\"]},\"lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x41d8b718cfbb68579e8064bb385a5855f5bbc5bf8e39ef5ef282d79bf933e553\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1cb98658b31603d96a52cfd9008b7acfedfe673b9b8933845a0903b47baa1d1\",\"dweb:/ipfs/QmXCZqNt8FszXJfMsaTcZrhpZeBKxmbtQZmwAr7bEwj1xr\"]},\"lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0xd7bbb5934f7452d95989982cf0b4a0489d87798afab8fb1dd31786a54bf36333\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e4fbf52bdacd846cfe075e028d16c4d7f7b07a7b0ad83fbf42e0044e526f497\",\"dweb:/ipfs/QmVvLRPANkYiCXvBPnysdoqosJxh9YWMAQWa4a7EVPEeEG\"]},\"lib/thirdweb-smartaccount/external-deps/openzeppelin/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x5c161dc7d039037e2b7d9225be87ce817badf7abed82ecf726726aeb00b13e2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23a548e7ff898aab16d0d7f37da3dfa2153a8b01cc5871ae8087c4f7da7ffadc\",\"dweb:/ipfs/Qma8dUshFq5eWeaWEVqfQnYvPMxuxhbwy5AzktZcJ2KGmQ\"]},\"lib/thirdweb-smartaccount/external-deps/openzeppelin/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0xc3cd851e3f4026a06510ff94c02c58160d7fcf287efdb04a2e71b2daed094820\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973dc434ecfa676de1fe2e97dd22fd3ddc231140435774583c31709afdf41c12\",\"dweb:/ipfs/QmR2ESNCZBCsXgGVe5jMPWaNb8sM3sXQQjcQTZrmnxjM6w\"]},\"lib/thirdweb-smartaccount/external-deps/openzeppelin/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x864f5fa91684f930c89d26bc04ef982aacb98de8919fac439288d532e0d70042\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccfd5ac7e9d2d2289ccf89c1a901e843d9d273ca3195d4bb115804ebe7e6aee2\",\"dweb:/ipfs/QmbY4unUi38GpfaYxwUBXPX7sREtE6hzxtog6x8W6yDhjN\"]},\"lib/thirdweb-smartaccount/lib/Address.sol\":{\"keccak256\":\"0xbd60e1833e0e605162e396fc713aac711917fe06d9e170588f62c18afd4e886a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a38cdd75a89f6917f13ace82bf6ad6ca67875463a906f11ebf142a59456c02cc\",\"dweb:/ipfs/QmTAC9EurMyEy1wPQT3sNoCKSEgLZywf2f3VDmdktiP8df\"]},\"lib/thirdweb-smartaccount/lib/BytesLib.sol\":{\"keccak256\":\"0x75d104da68db040e9ec7eeeead9e6751291705609c39c7f4fa77788662a5a5be\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://78360ca3c6b5642d54a1e001441fc5b5f96cb172dd08437d0e22c71c31d48960\",\"dweb:/ipfs/QmXctbsc5mAGesbSmDN1obdbQELC1HSUoyY1tQtUisywtt\"]},\"lib/thirdweb-smartaccount/lib/Strings.sol\":{\"keccak256\":\"0x3adc4d7164f6e2308b6013a565919164c7c29811c87525dbe4d47ded8660591d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ab64950c1fa47d575abf39159474df8d41a9d8106c3682f2c4ac1678395fec3e\",\"dweb:/ipfs/QmcNa8aCaszxx5HnZmxKGSjRqZcPGvtxAqKSRAKoiJ4e85\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/IAccount.sol\":{\"keccak256\":\"0x6818fcb4cf11e07f58fbe22639f7394fcebcb8c0864054530586db4883f60d12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://39eae35b1a7e278708a9338416feb33cc297acd5c68238c07d073aac9d7dc5bf\",\"dweb:/ipfs/QmXhRUDvy5aJSfjgEdBMXVKtbwV4qzK3YAZ7Q6oYdteSaa\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/IAccountCore.sol\":{\"keccak256\":\"0x267c598b2b38a20498f32bf3ce83ff40a51dfba631c6abe285c2ba8998f841e2\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://dbb68a6929cb79380bfa99677c5db233915a23d849f244c74d44bf999b818273\",\"dweb:/ipfs/QmX5t6797ata3hLZDsL4VzHVtfuDgDPBYjp9GmkDBAdeeF\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/IAccountFactory.sol\":{\"keccak256\":\"0x1f28d99441aa24d30b884829964f03dce33bb5deb7f96b933f3eb4bb54a2977c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://136577b8a312c4a393d84c74db77117c952a1d47f2536f4c81f47c7832270dcc\",\"dweb:/ipfs/QmfJQgr4S4FwasjVJBKEUSV4ygkiuHpxCBK4joAbSfvjCy\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/IAccountFactoryCore.sol\":{\"keccak256\":\"0x542d47697bafd1c4af5a8606a36122c002af721d97c67b3ead64aa1b6c638dee\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ce7691cb32a12c357b1287683949129329090cd8cfbdc37e1cbe9348a4289b7c\",\"dweb:/ipfs/QmZta3SooVuNCfnspeLpdQzLFeNXzguKuGCVFpSLwf57MP\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/IAggregator.sol\":{\"keccak256\":\"0x65c36f62d810efae7a4ecef734af489dea64cfe748a48cc6f8d9bf82a16e6d05\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://13470a12a17423b28000ca4a76eb4982f11c73b1d2406a7a0fd9303b36b0ee09\",\"dweb:/ipfs/QmX7D7bfBs4BSzMmNcHHmjDAc1pd8gfeUU4YCQEuNaVXWf\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/IEntrypoint.sol\":{\"keccak256\":\"0x4a569d4e65a1ed3a078e97f797109450e58c1292f29c3d21454bcb2fa74c85ae\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://07ea99d720b12cc76a921e0a9ed8af0cca864988e07f9889f70f5aa3c819939c\",\"dweb:/ipfs/QmZWcMnqLjh6vrPZUdNX7jRTsf1kCeYfCfuZXKyfGXcRX4\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/INonceManager.sol\":{\"keccak256\":\"0xf014cc5365b848cca89d34a77182f338d8636589c1c9ce56b9658ee630c1e0ea\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://684a601f44891f6beb2b065c68bdf39af0eb2db9ec28e7190d1ffbd200bbb0db\",\"dweb:/ipfs/QmYJ4cEiqdNXkX7JsZhDSCkyUYybK7rdJBCq869uHdZUwz\"]},\"lib/thirdweb-smartaccount/prebuilts/account/interface/IStakeManager.sol\":{\"keccak256\":\"0x75b71b18dd6e412f9f594817eda570649f7abc783b274ce21193cb40fd5b1579\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://c949706e6ac2f43baf668e57533b6a7322ce0bdd4657b06b930f7894d1121abe\",\"dweb:/ipfs/QmUv3jEdTgFrSrGQ8MN7HuoJNHJ8GRnxRmiavS8ucw2UZW\"]},\"lib/thirdweb-smartaccount/prebuilts/account/utils/AccountCore.sol\":{\"keccak256\":\"0xb692fd806c5264d7f85c8b6a1800fd9157699cb7e5e75ed0e216b54d3be587d6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2a06c12f26d57724812e26f17de73242d4a276e1f695f377b5d6566944b6831f\",\"dweb:/ipfs/QmazFdXa9Lesh8x6bBqQcn1LynVnrJaT3z7JFhWz6jSCno\"]},\"lib/thirdweb-smartaccount/prebuilts/account/utils/AccountCoreStorage.sol\":{\"keccak256\":\"0xca0e69515aa45166ddb314a320b77d90acfa8518fd1c0cfaf55158e67a33edf7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://af8e20a214b0f9743303977b3aab0d638133d815a734d06bf95801bfa3e5181f\",\"dweb:/ipfs/QmWRWVG3VTrLJaWarggTnY6Rv1bAt4ASaq1NefHw4WP3t5\"]},\"lib/thirdweb-smartaccount/prebuilts/account/utils/AccountExtension.sol\":{\"keccak256\":\"0xb01a88f4313c4ccb7bf88485ba13b90d188f253c1a6f6766ecf1217a405d68c5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://99def212750fa1c908aa70036bbca032568671b6e205b5fbf11b6700f98c0356\",\"dweb:/ipfs/QmX3HuL2AgapSfgLMdETUatViVcBKFLWUmKppRNbCH8jQP\"]},\"lib/thirdweb-smartaccount/prebuilts/account/utils/BaseAccount.sol\":{\"keccak256\":\"0xc82bec83e155692fb6bf3233dc1755b4629eb56d5a0a1a40076e09f193e15984\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f5acbdb32caf9d81171f42a149dc67da7ed2117d265484f50c039101c5460979\",\"dweb:/ipfs/QmXJjs3sTsPZbQXphAM6izfRDiirfds5eyJnHFpJ52Zabk\"]},\"lib/thirdweb-smartaccount/prebuilts/account/utils/BaseAccountFactory.sol\":{\"keccak256\":\"0xf86eac3288eb11f5569fabd1b3003dcb7f52c9adcdbed39f192c497d1d56c0f0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2ea1ff9bf8454e7abfe7261d284bdaedc285404e61d2d2f8269185af1235a9f8\",\"dweb:/ipfs/QmXvZwgRE1TbhhBH6udJqQqAreajATTQf6YUquJUBkjwM1\"]},\"lib/thirdweb-smartaccount/prebuilts/account/utils/Helpers.sol\":{\"keccak256\":\"0x3f33b2981f9626f6b2c6325d0e91c61c794b9d43934a7a182051499c4bc5bfc5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3af035533c3c4b23f70e462bf897eaa4043486cce678cb729c431d4d844344f1\",\"dweb:/ipfs/QmcFWkTsfK2adD9tUyT8KXK3AQbpnqWny4T6fY1W9H492m\"]},\"lib/thirdweb-smartaccount/prebuilts/account/utils/UserOperation.sol\":{\"keccak256\":\"0x569b831a77ad1c9f2681bd7162d42bfb34992f7bed6dc3344bdccb444ba81b91\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://806c8f67827d4280853e413b43fa6937fbe0749ebf9e4983bfd20335018cfd3d\",\"dweb:/ipfs/QmNS7TCDgisvtiTSot5CoYdA3mbEzDum4hjqEQ27PhMQJF\"]},\"src/Account.sol\":{\"keccak256\":\"0x5ffaaa9de49874b43d4a818db06d47adb252a3e849cc4f3bbaf8d6a499c673a1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8d459a4a0b3d7d1be06fa3adee7fd7a864fc5cba514f1879a8dbb19b5a404370\",\"dweb:/ipfs/QmU4Va4EpB3uf9trh8i9XMNPxxWmegoJVANh4yD4T3M6mP\"]},\"src/AccountFactory.sol\":{\"keccak256\":\"0x47de1bf24b7bf7d91c4463865c3cf5f609686e9c9e1d5a549c6c267920d51272\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0b6eebc49196efe6189d3dea974c2696d70f1e21b064a82c14addc860ab74ea0\",\"dweb:/ipfs/QmNwBiG8gNBFjgSz1bnbfSrk5wcaY5RJRjdM9JD6uHDmos\"]},\"src/interfaces/IERC4626.sol\":{\"keccak256\":\"0x4d2adb06959f1bdf2b08c941a342412d8d295bc1cd1c3fe0997096df6b459a50\",\"urls\":[\"bzz-raw://e5baaae82c9dadf55f96c25b17864acf727be8d649531c771363d42c21c17868\",\"dweb:/ipfs/QmaU7XGHbfcuwFkA1XooaFEKvXTFtCA3Jiip6yu22P38Sk\"]},\"src/interfaces/IPool.sol\":{\"keccak256\":\"0x6cd8210ffe76dce9abb73c619a11b5ca8f359a0cf4af7b9b4ec35c7763f536ea\",\"urls\":[\"bzz-raw://5deb4ee8f2d46d406bc71da05458cca8c5f717fb907e93b10ce1e9eedcd3d490\",\"dweb:/ipfs/QmTtmti5CsLNfWJXMjs2qvw97Du1rQEWJVmrXBjdRjPLde\"]},\"src/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x4fc14a45582bd121760993c71f0bcc6071b459d0521ffcecbb7ff3723dce122e\",\"urls\":[\"bzz-raw://1143e4750a6661f607031a9fe084f7d2fc3eb42fe7c065152ce8f4f9f17145e6\",\"dweb:/ipfs/QmZ78yXSAmAPCrvJin3LeyqFCXbFELSKAkMddv68RX6Kqa\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_defaultAdmin",
              "type": "address"
            },
            {
              "internalType": "contract IEntryPoint",
              "name": "_entrypoint",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlySimulatedBackend"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "accountAdmin",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AccountCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SignerAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SignerRemoved",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "accountImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkUpkeep",
          "outputs": [
            {
              "internalType": "bool",
              "name": "upkeepNeeded",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "performData",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAccount",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entrypoint",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_end",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccounts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccountsOfSigner",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_adminSigner",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllAccounts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRoleWithSwitch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_upkeep",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeUpkeepAndRouter"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRegistered",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_salt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onRegister"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_signer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_salt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onSignerAdded"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_signer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_salt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onSignerRemoved"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "performData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "performUpkeep"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAccounts",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "checkUpkeep(bytes)": {
            "details": "checkUpkeep function called off-chain by Chainlink Automation infrastructureChecks for balances elegible for swap",
            "returns": {
              "performData": "The performData parameter triggering the performUpkeep",
              "upkeepNeeded": "A boolean indicating whether upkeep is needed."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "index": "Index in list of current members for the role.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "member": " Address of account that has `role`"
            }
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
            "params": {
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            },
            "returns": {
              "count": "  Total number of accounts that have `role`"
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
            "params": {
              "account": "Address of the account to which the role is being granted.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
            "params": {
              "account": "Address of the account for which the role is being checked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "initializeUpkeepAndRouter(address)": {
            "details": "Initializes the Factory upkeep using Chainlink Automation."
          },
          "multicall(bytes[])": {
            "details": "Receives and executes a batch of function calls on this contract.",
            "params": {
              "data": "The bytes data that makes up the batch of function calls to execute."
            },
            "returns": {
              "results": "The bytes data that makes up the result of the batch of function calls executed."
            }
          },
          "performUpkeep(bytes)": {
            "details": "performUpkeep function called by Chainlink Automation infrastructure after checkUpkeep checks",
            "params": {
              "performData": "the data inputed by Chainlink Automation retrieved by checkUpkeep"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
            "params": {
              "account": "Address of the account from which the role is being revoked.",
              "role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "accountImplementation()": {
            "notice": "Returns the address of the Account implementation."
          },
          "checkUpkeep(bytes)": {
            "notice": "This function is external, view, and implements the Upkeep interface."
          },
          "contractURI()": {
            "notice": "Returns the contract metadata URI."
          },
          "createAccount(address,bytes)": {
            "notice": "Deploys a new Account for admin."
          },
          "getAccounts(uint256,uint256)": {
            "notice": "Returns all accounts between the given indices."
          },
          "getAccountsOfSigner(address)": {
            "notice": "Returns all accounts that the given address is a signer of."
          },
          "getAddress(address,bytes)": {
            "notice": "Returns the address of an Account that would be deployed with the given admin signer."
          },
          "getAllAccounts()": {
            "notice": "Returns all accounts created on the factory."
          },
          "getRoleAdmin(bytes32)": {
            "notice": "Returns the admin role that controls the specified role."
          },
          "getRoleMember(bytes32,uint256)": {
            "notice": "Returns the role-member from a list of members for a role,                  at a given index."
          },
          "getRoleMemberCount(bytes32)": {
            "notice": "Returns total number of accounts that have a role."
          },
          "grantRole(bytes32,address)": {
            "notice": "Grants a role to an account, if not previously granted."
          },
          "hasRole(bytes32,address)": {
            "notice": "Checks whether an account has a particular role."
          },
          "hasRoleWithSwitch(bytes32,address)": {
            "notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
          },
          "isRegistered(address)": {
            "notice": "Returns whether an account is registered on this factory."
          },
          "multicall(bytes[])": {
            "notice": "Receives and executes a batch of function calls on this contract."
          },
          "onRegister(bytes32)": {
            "notice": "Callback function for an Account to register itself on the factory."
          },
          "onSignerRemoved(address,bytes32)": {
            "notice": "Callback function for an Account to un-register its signers."
          },
          "renounceRole(bytes32,address)": {
            "notice": "Revokes role from the account."
          },
          "revokeRole(bytes32,address)": {
            "notice": "Revokes role from an account."
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "totalAccounts()": {
            "notice": "Returns the total number of accounts."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ccip/=lib/ccip/contracts/",
        ":@chainlink/=lib/chainlink/contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@thirdweb/=lib/thirdweb-smartaccount/",
        ":ccip/=lib/ccip/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/",
        ":chainlink/=lib/chainlink/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":std/=lib/forge-std/src/",
        ":thirdweb-smartaccount/=lib/thirdweb-smartaccount/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/AccountFactory.sol": "AccountFactory"
      },
      "libraries": {}
    },
    "sources": {
      "lib/chainlink/contracts/src/v0.8/automation/AutomationBase.sol": {
        "keccak256": "0xefd1603987351872d57fc092f54ce51d275a8cdce351f40afedbec52474e8405",
        "urls": [
          "bzz-raw://6f389cd2301683e0a63e83829dda77cfd1293c3b5195271cf24edc679e8913dd",
          "dweb:/ipfs/QmVvRnkqEtHE5okQUoJkRP2gNs4j7FadbSGirTWdQsY29c"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol": {
        "keccak256": "0x160761445c58aedce801a1c8f95d68562132a0c9766b53742ee10c7a7c307a79",
        "urls": [
          "bzz-raw://8ec8a2fdc84e9562d989335904c859f3ad4bfb3e63b06d7c9ad870801506ee3b",
          "dweb:/ipfs/QmYzDQyNAbP2DqWmMJzKYczKBFBfgmorHzCNMJQ1FBrmLP"
        ],
        "license": "MIT"
      },
      "lib/chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
        "keccak256": "0xbdf0b47389f34a3d09ac1b733aa59adf1257454e84a837e28091cc7628f117e1",
        "urls": [
          "bzz-raw://13b9cc26d54e4827a4369ec6909b6efafaad26632f8bd08afb17bfd57d094e7f",
          "dweb:/ipfs/QmQVP9c8BXkB4e6fc27ucEPFkGSLc6h8Bfte6qW3WMrwmN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130",
        "urls": [
          "bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa",
          "dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/eip/ERC1271.sol": {
        "keccak256": "0x6d503c5329c5126ed6f44cdcca3f805407b1a407be6d2d044f260e5b4e8294f9",
        "urls": [
          "bzz-raw://aefd8fc5f85c97aad08a0b2f9406b572049d923c479348eea0ec44d9e94e3c87",
          "dweb:/ipfs/QmZDiySaFcs3AmRYkNc3oZ87xktwnvSUkmGDjTUZ1MGU2W"
        ],
        "license": "Apache 2.0"
      },
      "lib/thirdweb-smartaccount/eip/ERC165.sol": {
        "keccak256": "0x9c64f28eb3dc53d2b8d5e4dfe53bda0283646f954cdb1a0705201469b18c96b6",
        "urls": [
          "bzz-raw://74b6a7169f163116631e9dbf939329a459512344052f2767d485e1dc9d86ab17",
          "dweb:/ipfs/QmZfroBa7RHkwupJoZYzZwaj3BbR7Wa9po8phq5Q1Bottt"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/eip/interface/IERC165.sol": {
        "keccak256": "0xaacd9fcd919ddf4c7fc111aac0d25e3fad28a7c503d2b4be2429c12b0fd1990b",
        "urls": [
          "bzz-raw://153e79f890c3894274238aa9d6f2dc287272fc4788dc1e32646005cd8874238b",
          "dweb:/ipfs/QmTbwRQhunJj8AYsZZGZ4EGJLbrENgGUhyAMkbqVrm9D6F"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/extension/Multicall.sol": {
        "keccak256": "0x7fe7d5f24fe587a91f4dd21a7a4ca1274bd4a304ef838aa80ab404e6740a6a88",
        "urls": [
          "bzz-raw://64c1f839f0d83c2f629f478fa60d2251fda5792608749cf3bd355db3a7788544",
          "dweb:/ipfs/QmSW5LE85AznmMzUCTwhP9kZ2x8D84hRnKTbT3ia7j2r6A"
        ],
        "license": "Apache 2.0"
      },
      "lib/thirdweb-smartaccount/extension/interface/IAccountPermissions.sol": {
        "keccak256": "0x906f6455092d4c5f1a53fb6d695c91c7466bc01c6550a93a4afbec5b736c36bc",
        "urls": [
          "bzz-raw://b99b18b550ecbca5e632b58342320038f608ee65e1cd77f0bded39162f8ccb63",
          "dweb:/ipfs/QmNjwTTterVYoYG3Sgz6rPbM5MzhaMeccSKwr1QhnHZfwL"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x9e5b2dd3d87d493e66da9f5d89292913b188a23ac2c4b92f071187aa19b1fe45",
        "urls": [
          "bzz-raw://d4835ef2e1e976d4c99922e439e420d005cbc28a038d3ffca2e2816dd9b6d6c8",
          "dweb:/ipfs/QmdfC32QKG45P1fMTfZzQtcue4gXsWLgKddWZ3KBRc6Dsv"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/extension/interface/IMulticall.sol": {
        "keccak256": "0x634e6fd2cc536305b54487ea8e3773e05bfcd72bdb75f3b18fc619a21ca3b73a",
        "urls": [
          "bzz-raw://8a97269245c6aedc388f0da5763f7c4e98efcda94d5c4d3f6d62148f68a9877b",
          "dweb:/ipfs/Qmaxt79z1c9KrJfhePMBH5QFNKPtGXLUVCE2KrykdyQXLB"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/extension/interface/IPermissions.sol": {
        "keccak256": "0x0eff3b9ac48dda21c9e01e10a4e997ea363b07fe036563b45c207516b30ecdda",
        "urls": [
          "bzz-raw://0f05c118073a28696f4e21dfd80cf8f1c618b6bb2799ad24ff7d10ba1e774a18",
          "dweb:/ipfs/QmT8xDP4RgWv2rZ8jTnzuJVY6NqUhZqtxxapYCHsTBJPbU"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/extension/interface/IPermissionsEnumerable.sol": {
        "keccak256": "0x21dabbe607d433c7f168f129cdf70924dc1898c4cee47aff013d09722f2298d7",
        "urls": [
          "bzz-raw://bf417e26bef77eeb1bd9d6033783c37ec93f4deee4112d19cae4f863b81b35e0",
          "dweb:/ipfs/QmVGp5549xumuiPgFNhqsGu3o3Vkwr98iJZovBSL6Tnaw1"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/extension/upgradeable/AccountPermissions.sol": {
        "keccak256": "0x31443f1aab3ce6e053aa5b6700849c809f06b1c8371d2a61677aeac126a3391f",
        "urls": [
          "bzz-raw://5fc2066046c9c6bae78575d5cbb9c2a58a0c7555fb98f8cde8b68b45280f90dd",
          "dweb:/ipfs/QmYWr9xomZu8MX5gjDptB7RBnAAFCtT6N9H2vmeR8idrjt"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/extension/upgradeable/ContractMetadata.sol": {
        "keccak256": "0x728fd85d78da6d90022f2332529dad1d09d4102fe50cf14a14d75eb90dac5e8b",
        "urls": [
          "bzz-raw://a01f2f233b2237eacb3cc5ddc851e6c254e21cbe5b856092c0460e5a1f940f23",
          "dweb:/ipfs/Qmasy9MXWNRPVtbbrH1N26BsCjBreg3subjaU2Mnd7dZKY"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/extension/upgradeable/Initializable.sol": {
        "keccak256": "0xa01aede906ebb58fd9f62f1006cb558ba7762db1ae7e56d1f19837471e97e8ff",
        "urls": [
          "bzz-raw://2d976a8b773cad535eccc80ee1788e4bcc5657eb8768e0655efc4dcf775dfb00",
          "dweb:/ipfs/QmexbZYV7h41woutRajZMFVUZH7m6Ki67rN64vZ1iuZzz2"
        ],
        "license": "Apache 2.0"
      },
      "lib/thirdweb-smartaccount/extension/upgradeable/Permissions.sol": {
        "keccak256": "0x9274a8fac0ee15d95c4e8145d8d4aafa7e191882b6bafcf59c9ab15efc4ad049",
        "urls": [
          "bzz-raw://2c4ec47eaa25bb8cd9eb6cf54a9a9a048bce4d86aa33cafa527aa3c292131660",
          "dweb:/ipfs/QmTyrtQAMxPqzmHHLRchxkD8nQ4exbhhH3RFNH7P3mVnmq"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/extension/upgradeable/PermissionsEnumerable.sol": {
        "keccak256": "0xedf887c2cfd98a95358802d31a1f24a9f1ce87c9a0139b008ac09a5c3b7406da",
        "urls": [
          "bzz-raw://41ad73d61d81f92a241216b87a0b820d6b9ba39f40438fdcffcafa096f0b1983",
          "dweb:/ipfs/QmeLPEmS6KhxAQcjCDTcwVesdzurkCwT4m29nrdiXUJoJd"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/external-deps/openzeppelin/proxy/Clones.sol": {
        "keccak256": "0xc02061f2a10a957cc6681e58216e71bcc624d00dd6edab8fbcc5dcd6b24a2825",
        "urls": [
          "bzz-raw://01a6702302ac31e4e5dccccb860bbe83e8dc852eec8cb9f53c7e9187d2500a60",
          "dweb:/ipfs/QmVgBvkGn1CxHPC4SJfauM82aUSvUKRFqDtrXiz29HL9u3"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xf43d9bff280c2721931c36fd8fb13a769a29c52268c2fc8d80ff948c1efb11bb",
        "urls": [
          "bzz-raw://85d9fb47aca8c18e11bd1f5331d9aae41761161ba230dd8c16d876b6183a4ecc",
          "dweb:/ipfs/QmWCjf8bdirbeSJqRMhE3W5n51jodwWu7FDzMNXGaoEcVs"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC1155/utils/ERC1155Holder.sol": {
        "keccak256": "0xf735581e2728965940c9dd60ba73d199e39a2ee9a1ed62e5cab4cbf0ccb5815d",
        "urls": [
          "bzz-raw://6833b21890a26a47719277e9afab26788ffb48f2e4faeb6099d0b2a7c92d4165",
          "dweb:/ipfs/QmYEcKDStaqD1t9maNr3VrfBekVGHGU8Zw1RGMDjoHY5aN"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC1155/utils/ERC1155Receiver.sol": {
        "keccak256": "0x787fed2d713b0bc509c72cb8f16b2667395efdea578b134d88b0474d43d13de5",
        "urls": [
          "bzz-raw://3f855a71b7b5908be6874e39face4f570ab9df20849b3120984d053ea41f3255",
          "dweb:/ipfs/QmXkNRDRbPaSGw89ps2wdT4w2k2Wmiq4n836U7WXejNqhm"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0x41d8b718cfbb68579e8064bb385a5855f5bbc5bf8e39ef5ef282d79bf933e553",
        "urls": [
          "bzz-raw://e1cb98658b31603d96a52cfd9008b7acfedfe673b9b8933845a0903b47baa1d1",
          "dweb:/ipfs/QmXCZqNt8FszXJfMsaTcZrhpZeBKxmbtQZmwAr7bEwj1xr"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/external-deps/openzeppelin/token/ERC721/utils/ERC721Holder.sol": {
        "keccak256": "0xd7bbb5934f7452d95989982cf0b4a0489d87798afab8fb1dd31786a54bf36333",
        "urls": [
          "bzz-raw://9e4fbf52bdacd846cfe075e028d16c4d7f7b07a7b0ad83fbf42e0044e526f497",
          "dweb:/ipfs/QmVvLRPANkYiCXvBPnysdoqosJxh9YWMAQWa4a7EVPEeEG"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/external-deps/openzeppelin/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x5c161dc7d039037e2b7d9225be87ce817badf7abed82ecf726726aeb00b13e2d",
        "urls": [
          "bzz-raw://23a548e7ff898aab16d0d7f37da3dfa2153a8b01cc5871ae8087c4f7da7ffadc",
          "dweb:/ipfs/Qma8dUshFq5eWeaWEVqfQnYvPMxuxhbwy5AzktZcJ2KGmQ"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/external-deps/openzeppelin/utils/cryptography/EIP712.sol": {
        "keccak256": "0xc3cd851e3f4026a06510ff94c02c58160d7fcf287efdb04a2e71b2daed094820",
        "urls": [
          "bzz-raw://973dc434ecfa676de1fe2e97dd22fd3ddc231140435774583c31709afdf41c12",
          "dweb:/ipfs/QmR2ESNCZBCsXgGVe5jMPWaNb8sM3sXQQjcQTZrmnxjM6w"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/external-deps/openzeppelin/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x864f5fa91684f930c89d26bc04ef982aacb98de8919fac439288d532e0d70042",
        "urls": [
          "bzz-raw://ccfd5ac7e9d2d2289ccf89c1a901e843d9d273ca3195d4bb115804ebe7e6aee2",
          "dweb:/ipfs/QmbY4unUi38GpfaYxwUBXPX7sREtE6hzxtog6x8W6yDhjN"
        ],
        "license": "MIT"
      },
      "lib/thirdweb-smartaccount/lib/Address.sol": {
        "keccak256": "0xbd60e1833e0e605162e396fc713aac711917fe06d9e170588f62c18afd4e886a",
        "urls": [
          "bzz-raw://a38cdd75a89f6917f13ace82bf6ad6ca67875463a906f11ebf142a59456c02cc",
          "dweb:/ipfs/QmTAC9EurMyEy1wPQT3sNoCKSEgLZywf2f3VDmdktiP8df"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/lib/BytesLib.sol": {
        "keccak256": "0x75d104da68db040e9ec7eeeead9e6751291705609c39c7f4fa77788662a5a5be",
        "urls": [
          "bzz-raw://78360ca3c6b5642d54a1e001441fc5b5f96cb172dd08437d0e22c71c31d48960",
          "dweb:/ipfs/QmXctbsc5mAGesbSmDN1obdbQELC1HSUoyY1tQtUisywtt"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/lib/Strings.sol": {
        "keccak256": "0x3adc4d7164f6e2308b6013a565919164c7c29811c87525dbe4d47ded8660591d",
        "urls": [
          "bzz-raw://ab64950c1fa47d575abf39159474df8d41a9d8106c3682f2c4ac1678395fec3e",
          "dweb:/ipfs/QmcNa8aCaszxx5HnZmxKGSjRqZcPGvtxAqKSRAKoiJ4e85"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/IAccount.sol": {
        "keccak256": "0x6818fcb4cf11e07f58fbe22639f7394fcebcb8c0864054530586db4883f60d12",
        "urls": [
          "bzz-raw://39eae35b1a7e278708a9338416feb33cc297acd5c68238c07d073aac9d7dc5bf",
          "dweb:/ipfs/QmXhRUDvy5aJSfjgEdBMXVKtbwV4qzK3YAZ7Q6oYdteSaa"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/IAccountCore.sol": {
        "keccak256": "0x267c598b2b38a20498f32bf3ce83ff40a51dfba631c6abe285c2ba8998f841e2",
        "urls": [
          "bzz-raw://dbb68a6929cb79380bfa99677c5db233915a23d849f244c74d44bf999b818273",
          "dweb:/ipfs/QmX5t6797ata3hLZDsL4VzHVtfuDgDPBYjp9GmkDBAdeeF"
        ],
        "license": "Apache 2.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/IAccountFactory.sol": {
        "keccak256": "0x1f28d99441aa24d30b884829964f03dce33bb5deb7f96b933f3eb4bb54a2977c",
        "urls": [
          "bzz-raw://136577b8a312c4a393d84c74db77117c952a1d47f2536f4c81f47c7832270dcc",
          "dweb:/ipfs/QmfJQgr4S4FwasjVJBKEUSV4ygkiuHpxCBK4joAbSfvjCy"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/IAccountFactoryCore.sol": {
        "keccak256": "0x542d47697bafd1c4af5a8606a36122c002af721d97c67b3ead64aa1b6c638dee",
        "urls": [
          "bzz-raw://ce7691cb32a12c357b1287683949129329090cd8cfbdc37e1cbe9348a4289b7c",
          "dweb:/ipfs/QmZta3SooVuNCfnspeLpdQzLFeNXzguKuGCVFpSLwf57MP"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/IAggregator.sol": {
        "keccak256": "0x65c36f62d810efae7a4ecef734af489dea64cfe748a48cc6f8d9bf82a16e6d05",
        "urls": [
          "bzz-raw://13470a12a17423b28000ca4a76eb4982f11c73b1d2406a7a0fd9303b36b0ee09",
          "dweb:/ipfs/QmX7D7bfBs4BSzMmNcHHmjDAc1pd8gfeUU4YCQEuNaVXWf"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/IEntrypoint.sol": {
        "keccak256": "0x4a569d4e65a1ed3a078e97f797109450e58c1292f29c3d21454bcb2fa74c85ae",
        "urls": [
          "bzz-raw://07ea99d720b12cc76a921e0a9ed8af0cca864988e07f9889f70f5aa3c819939c",
          "dweb:/ipfs/QmZWcMnqLjh6vrPZUdNX7jRTsf1kCeYfCfuZXKyfGXcRX4"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/INonceManager.sol": {
        "keccak256": "0xf014cc5365b848cca89d34a77182f338d8636589c1c9ce56b9658ee630c1e0ea",
        "urls": [
          "bzz-raw://684a601f44891f6beb2b065c68bdf39af0eb2db9ec28e7190d1ffbd200bbb0db",
          "dweb:/ipfs/QmYJ4cEiqdNXkX7JsZhDSCkyUYybK7rdJBCq869uHdZUwz"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/interface/IStakeManager.sol": {
        "keccak256": "0x75b71b18dd6e412f9f594817eda570649f7abc783b274ce21193cb40fd5b1579",
        "urls": [
          "bzz-raw://c949706e6ac2f43baf668e57533b6a7322ce0bdd4657b06b930f7894d1121abe",
          "dweb:/ipfs/QmUv3jEdTgFrSrGQ8MN7HuoJNHJ8GRnxRmiavS8ucw2UZW"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/utils/AccountCore.sol": {
        "keccak256": "0xb692fd806c5264d7f85c8b6a1800fd9157699cb7e5e75ed0e216b54d3be587d6",
        "urls": [
          "bzz-raw://2a06c12f26d57724812e26f17de73242d4a276e1f695f377b5d6566944b6831f",
          "dweb:/ipfs/QmazFdXa9Lesh8x6bBqQcn1LynVnrJaT3z7JFhWz6jSCno"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/utils/AccountCoreStorage.sol": {
        "keccak256": "0xca0e69515aa45166ddb314a320b77d90acfa8518fd1c0cfaf55158e67a33edf7",
        "urls": [
          "bzz-raw://af8e20a214b0f9743303977b3aab0d638133d815a734d06bf95801bfa3e5181f",
          "dweb:/ipfs/QmWRWVG3VTrLJaWarggTnY6Rv1bAt4ASaq1NefHw4WP3t5"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/utils/AccountExtension.sol": {
        "keccak256": "0xb01a88f4313c4ccb7bf88485ba13b90d188f253c1a6f6766ecf1217a405d68c5",
        "urls": [
          "bzz-raw://99def212750fa1c908aa70036bbca032568671b6e205b5fbf11b6700f98c0356",
          "dweb:/ipfs/QmX3HuL2AgapSfgLMdETUatViVcBKFLWUmKppRNbCH8jQP"
        ],
        "license": "Apache-2.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/utils/BaseAccount.sol": {
        "keccak256": "0xc82bec83e155692fb6bf3233dc1755b4629eb56d5a0a1a40076e09f193e15984",
        "urls": [
          "bzz-raw://f5acbdb32caf9d81171f42a149dc67da7ed2117d265484f50c039101c5460979",
          "dweb:/ipfs/QmXJjs3sTsPZbQXphAM6izfRDiirfds5eyJnHFpJ52Zabk"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/utils/BaseAccountFactory.sol": {
        "keccak256": "0xf86eac3288eb11f5569fabd1b3003dcb7f52c9adcdbed39f192c497d1d56c0f0",
        "urls": [
          "bzz-raw://2ea1ff9bf8454e7abfe7261d284bdaedc285404e61d2d2f8269185af1235a9f8",
          "dweb:/ipfs/QmXvZwgRE1TbhhBH6udJqQqAreajATTQf6YUquJUBkjwM1"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/utils/Helpers.sol": {
        "keccak256": "0x3f33b2981f9626f6b2c6325d0e91c61c794b9d43934a7a182051499c4bc5bfc5",
        "urls": [
          "bzz-raw://3af035533c3c4b23f70e462bf897eaa4043486cce678cb729c431d4d844344f1",
          "dweb:/ipfs/QmcFWkTsfK2adD9tUyT8KXK3AQbpnqWny4T6fY1W9H492m"
        ],
        "license": "GPL-3.0"
      },
      "lib/thirdweb-smartaccount/prebuilts/account/utils/UserOperation.sol": {
        "keccak256": "0x569b831a77ad1c9f2681bd7162d42bfb34992f7bed6dc3344bdccb444ba81b91",
        "urls": [
          "bzz-raw://806c8f67827d4280853e413b43fa6937fbe0749ebf9e4983bfd20335018cfd3d",
          "dweb:/ipfs/QmNS7TCDgisvtiTSot5CoYdA3mbEzDum4hjqEQ27PhMQJF"
        ],
        "license": "GPL-3.0"
      },
      "src/Account.sol": {
        "keccak256": "0x5ffaaa9de49874b43d4a818db06d47adb252a3e849cc4f3bbaf8d6a499c673a1",
        "urls": [
          "bzz-raw://8d459a4a0b3d7d1be06fa3adee7fd7a864fc5cba514f1879a8dbb19b5a404370",
          "dweb:/ipfs/QmU4Va4EpB3uf9trh8i9XMNPxxWmegoJVANh4yD4T3M6mP"
        ],
        "license": "Apache-2.0"
      },
      "src/AccountFactory.sol": {
        "keccak256": "0x47de1bf24b7bf7d91c4463865c3cf5f609686e9c9e1d5a549c6c267920d51272",
        "urls": [
          "bzz-raw://0b6eebc49196efe6189d3dea974c2696d70f1e21b064a82c14addc860ab74ea0",
          "dweb:/ipfs/QmNwBiG8gNBFjgSz1bnbfSrk5wcaY5RJRjdM9JD6uHDmos"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IERC4626.sol": {
        "keccak256": "0x4d2adb06959f1bdf2b08c941a342412d8d295bc1cd1c3fe0997096df6b459a50",
        "urls": [
          "bzz-raw://e5baaae82c9dadf55f96c25b17864acf727be8d649531c771363d42c21c17868",
          "dweb:/ipfs/QmaU7XGHbfcuwFkA1XooaFEKvXTFtCA3Jiip6yu22P38Sk"
        ],
        "license": null
      },
      "src/interfaces/IPool.sol": {
        "keccak256": "0x6cd8210ffe76dce9abb73c619a11b5ca8f359a0cf4af7b9b4ec35c7763f536ea",
        "urls": [
          "bzz-raw://5deb4ee8f2d46d406bc71da05458cca8c5f717fb907e93b10ce1e9eedcd3d490",
          "dweb:/ipfs/QmTtmti5CsLNfWJXMjs2qvw97Du1rQEWJVmrXBjdRjPLde"
        ],
        "license": null
      },
      "src/interfaces/IUniswapV2Router01.sol": {
        "keccak256": "0x4fc14a45582bd121760993c71f0bcc6071b459d0521ffcecbb7ff3723dce122e",
        "urls": [
          "bzz-raw://1143e4750a6661f607031a9fe084f7d2fc3eb42fe7c065152ce8f4f9f17145e6",
          "dweb:/ipfs/QmZ78yXSAmAPCrvJin3LeyqFCXbFELSKAkMddv68RX6Kqa"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/AccountFactory.sol",
    "id": 35828,
    "exportedSymbols": {
      "Account": [
        35397
      ],
      "AccountFactory": [
        35827
      ],
      "Address": [
        31591
      ],
      "AutomationBase": [
        281
      ],
      "AutomationCompatible": [
        290
      ],
      "AutomationCompatibleInterface": [
        309
      ],
      "BaseAccount": [
        33645
      ],
      "BaseAccountFactory": [
        34085
      ],
      "BytesLib": [
        31621
      ],
      "Clones": [
        29971
      ],
      "ContractMetadata": [
        28857
      ],
      "ContractMetadataStorage": [
        28777
      ],
      "EnumerableSet": [
        31261
      ],
      "IAccount": [
        31909
      ],
      "IAccountFactory": [
        31949
      ],
      "IAccountFactoryCore": [
        32015
      ],
      "IAccountPermissions": [
        27871
      ],
      "IAggregator": [
        32049
      ],
      "IContractMetadata": [
        27894
      ],
      "IERC20": [
        27536
      ],
      "IEntryPoint": [
        32255
      ],
      "IMulticall": [
        27908
      ],
      "INonceManager": [
        32274
      ],
      "IPermissions": [
        27981
      ],
      "IPermissionsEnumerable": [
        28006
      ],
      "IStakeManager": [
        32380
      ],
      "Multicall": [
        27738
      ],
      "Permissions": [
        29512
      ],
      "PermissionsEnumerable": [
        29891
      ],
      "PermissionsEnumerableStorage": [
        29574
      ],
      "PermissionsStorage": [
        29126
      ],
      "Strings": [
        31892
      ],
      "UserOperation": [
        34352
      ],
      "UserOperationLib": [
        34522
      ],
      "ValidationData": [
        34095
      ],
      "_intersectTimeRange": [
        34239
      ],
      "_packValidationData": [
        34276,
        34314
      ],
      "_parseValidationData": [
        34154
      ],
      "calldataKeccak": [
        34324
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:5889:70",
    "nodes": [
      {
        "id": 35399,
        "nodeType": "PragmaDirective",
        "src": "37:24:70",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 35400,
        "nodeType": "ImportDirective",
        "src": "75:66:70",
        "nodes": [],
        "absolutePath": "lib/thirdweb-smartaccount/prebuilts/account/utils/BaseAccountFactory.sol",
        "file": "@thirdweb/prebuilts/account/utils/BaseAccountFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35828,
        "sourceUnit": 34086,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35401,
        "nodeType": "ImportDirective",
        "src": "143:59:70",
        "nodes": [],
        "absolutePath": "lib/thirdweb-smartaccount/prebuilts/account/utils/BaseAccount.sol",
        "file": "@thirdweb/prebuilts/account/utils/BaseAccount.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35828,
        "sourceUnit": 33646,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35402,
        "nodeType": "ImportDirective",
        "src": "204:63:70",
        "nodes": [],
        "absolutePath": "lib/thirdweb-smartaccount/external-deps/openzeppelin/proxy/Clones.sol",
        "file": "@thirdweb/external-deps/openzeppelin/proxy/Clones.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35828,
        "sourceUnit": 29972,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35403,
        "nodeType": "ImportDirective",
        "src": "286:67:70",
        "nodes": [],
        "absolutePath": "lib/thirdweb-smartaccount/extension/upgradeable/PermissionsEnumerable.sol",
        "file": "@thirdweb/extension/upgradeable/PermissionsEnumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35828,
        "sourceUnit": 29892,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35404,
        "nodeType": "ImportDirective",
        "src": "355:62:70",
        "nodes": [],
        "absolutePath": "lib/thirdweb-smartaccount/extension/upgradeable/ContractMetadata.sol",
        "file": "@thirdweb/extension/upgradeable/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35828,
        "sourceUnit": 28858,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35405,
        "nodeType": "ImportDirective",
        "src": "435:63:70",
        "nodes": [],
        "absolutePath": "lib/thirdweb-smartaccount/prebuilts/account/interface/IEntrypoint.sol",
        "file": "@thirdweb/prebuilts/account/interface/IEntrypoint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35828,
        "sourceUnit": 32256,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35407,
        "nodeType": "ImportDirective",
        "src": "534:40:70",
        "nodes": [],
        "absolutePath": "src/Account.sol",
        "file": "./Account.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35828,
        "sourceUnit": 35398,
        "symbolAliases": [
          {
            "foreign": {
              "id": 35406,
              "name": "Account",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35397,
              "src": "543:7:70",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35408,
        "nodeType": "ImportDirective",
        "src": "692:65:70",
        "nodes": [],
        "absolutePath": "lib/chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
        "file": "@chainlink/src/v0.8/automation/AutomationCompatible.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35828,
        "sourceUnit": 291,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35409,
        "nodeType": "ImportDirective",
        "src": "791:56:70",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35828,
        "sourceUnit": 27537,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 35827,
        "nodeType": "ContractDefinition",
        "src": "851:5073:70",
        "nodes": [
          {
            "id": 35419,
            "nodeType": "VariableDeclaration",
            "src": "978:22:70",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "995:5:70",
            "scope": 35827,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 35418,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "978:7:70",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 35421,
            "nodeType": "VariableDeclaration",
            "src": "1005:23:70",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "upkeep",
            "nameLocation": "1022:6:70",
            "scope": 35827,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 35420,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1005:7:70",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 35423,
            "nodeType": "VariableDeclaration",
            "src": "1033:30:70",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "uniswapRouter",
            "nameLocation": "1050:13:70",
            "scope": 35827,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 35422,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1033:7:70",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 35426,
            "nodeType": "VariableDeclaration",
            "src": "1068:72:70",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "ghoAddress",
            "nameLocation": "1085:10:70",
            "scope": 35827,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 35424,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1068:7:70",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307863346246354362446142453539353336313433384638633661313837624463333330353339633630",
              "id": 35425,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1098:42:70",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xc4bF5CbDaBE595361438F8c6a187bDc330539c60"
            },
            "visibility": "internal"
          },
          {
            "id": 35432,
            "nodeType": "VariableDeclaration",
            "src": "1145:155:70",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_swappableERC20",
            "nameLocation": "1164:16:70",
            "scope": 35827,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 35427,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1145:7:70",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 35428,
              "nodeType": "ArrayTypeName",
              "src": "1145:9:70",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "307839346139443941433861323235333445334661436139463465374632453263663835643545344338",
                  "id": 35429,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1190:42:70",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x94a9D9AC8a22534E3FaCa9F4e7F2E2cf85d5E4C8"
                },
                {
                  "hexValue": "307861413845323346623130373945413731653061353646343861326141353138353144383433334430",
                  "id": 35430,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1246:42:70",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xaA8E23Fb1079EA71e0a56F48a2aA51851D8433D0"
                }
              ],
              "id": 35431,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "1183:117:70",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$2_memory_ptr",
                "typeString": "address[2] memory"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 35464,
            "nodeType": "FunctionDefinition",
            "src": "1487:253:70",
            "nodes": [],
            "body": {
              "id": 35463,
              "nodeType": "Block",
              "src": "1682:58:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35459,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29132,
                        "src": "1700:18:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 35460,
                        "name": "_defaultAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35434,
                        "src": "1720:13:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35458,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29787
                      ],
                      "referencedDeclaration": 29787,
                      "src": "1689:10:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 35461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1689:45:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35462,
                  "nodeType": "ExpressionStatement",
                  "src": "1689:45:70"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 35445,
                            "name": "_entrypoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35437,
                            "src": "1614:11:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IEntryPoint_$32255",
                              "typeString": "contract IEntryPoint"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 35448,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1635:4:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AccountFactory_$35827",
                                  "typeString": "contract AccountFactory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AccountFactory_$35827",
                                  "typeString": "contract AccountFactory"
                                }
                              ],
                              "id": 35447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1627:7:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 35446,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1627:7:70",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 35449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1627:13:70",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IEntryPoint_$32255",
                              "typeString": "contract IEntryPoint"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 35444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1602:11:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IEntryPoint_$32255_$_t_address_$returns$_t_contract$_Account_$35397_$",
                            "typeString": "function (contract IEntryPoint,address) returns (contract Account)"
                          },
                          "typeName": {
                            "id": 35443,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 35442,
                              "name": "Account",
                              "nameLocations": [
                                "1606:7:70"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 35397,
                              "src": "1606:7:70"
                            },
                            "referencedDeclaration": 35397,
                            "src": "1606:7:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Account_$35397",
                              "typeString": "contract Account"
                            }
                          }
                        },
                        "id": 35450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1602:39:70",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Account_$35397",
                          "typeString": "contract Account"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Account_$35397",
                          "typeString": "contract Account"
                        }
                      ],
                      "id": 35441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1594:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 35440,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1594:7:70",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 35451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1594:48:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "arguments": [
                      {
                        "id": 35454,
                        "name": "_entrypoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35437,
                        "src": "1659:11:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntryPoint_$32255",
                          "typeString": "contract IEntryPoint"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IEntryPoint_$32255",
                          "typeString": "contract IEntryPoint"
                        }
                      ],
                      "id": 35453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1651:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 35452,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1651:7:70",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 35455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1651:20:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 35456,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 35439,
                  "name": "BaseAccountFactory",
                  "nameLocations": [
                    "1567:18:70"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34085,
                  "src": "1567:18:70"
                },
                "nodeType": "ModifierInvocation",
                "src": "1567:111:70"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 35438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35434,
                  "mutability": "mutable",
                  "name": "_defaultAdmin",
                  "nameLocation": "1513:13:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 35464,
                  "src": "1505:21:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1505:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35437,
                  "mutability": "mutable",
                  "name": "_entrypoint",
                  "nameLocation": "1545:11:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 35464,
                  "src": "1533:23:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$32255",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 35436,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35435,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "1533:11:70"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32255,
                      "src": "1533:11:70"
                    },
                    "referencedDeclaration": 32255,
                    "src": "1533:11:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$32255",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1498:63:70"
            },
            "returnParameters": {
              "id": 35457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1682:0:70"
            },
            "scope": 35827,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35485,
            "nodeType": "FunctionDefinition",
            "src": "1817:147:70",
            "nodes": [],
            "body": {
              "id": 35484,
              "nodeType": "Block",
              "src": "1876:88:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 35471,
                          "name": "upkeep",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35421,
                          "src": "1891:6:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 35474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1909:1:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 35473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1901:7:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 35472,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1901:7:70",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 35475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1901:10:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1891:20:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920696e697469616c697a6564",
                        "id": 35477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1913:21:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        },
                        "value": "Already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        }
                      ],
                      "id": 35470,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1883:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1883:52:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35479,
                  "nodeType": "ExpressionStatement",
                  "src": "1883:52:70"
                },
                {
                  "expression": {
                    "id": 35482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35480,
                      "name": "upkeep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35421,
                      "src": "1942:6:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 35481,
                      "name": "_upkeep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35467,
                      "src": "1951:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1942:16:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 35483,
                  "nodeType": "ExpressionStatement",
                  "src": "1942:16:70"
                }
              ]
            },
            "documentation": {
              "id": 35465,
              "nodeType": "StructuredDocumentation",
              "src": "1746:67:70",
              "text": "@dev Initializes the Factory upkeep using Chainlink Automation."
            },
            "functionSelector": "a9709e15",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeUpkeepAndRouter",
            "nameLocation": "1826:25:70",
            "parameters": {
              "id": 35468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35467,
                  "mutability": "mutable",
                  "name": "_upkeep",
                  "nameLocation": "1860:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 35485,
                  "src": "1852:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1852:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1851:17:70"
            },
            "returnParameters": {
              "id": 35469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1876:0:70"
            },
            "scope": 35827,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35497,
            "nodeType": "ModifierDefinition",
            "src": "2149:95:70",
            "nodes": [],
            "body": {
              "id": 35496,
              "nodeType": "Block",
              "src": "2171:73:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 35488,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2186:3:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 35489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2190:6:70",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2186:10:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 35490,
                          "name": "upkeep",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35421,
                          "src": "2200:6:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2186:20:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792075706b65657020616c6c6f776564",
                        "id": 35492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2208:21:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0818dec75135ca1ab7e1290b8b723f73d23327d2a3a0e3037ed028ffc49c480",
                          "typeString": "literal_string \"Only upkeep allowed\""
                        },
                        "value": "Only upkeep allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0818dec75135ca1ab7e1290b8b723f73d23327d2a3a0e3037ed028ffc49c480",
                          "typeString": "literal_string \"Only upkeep allowed\""
                        }
                      ],
                      "id": 35487,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2178:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2178:52:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35494,
                  "nodeType": "ExpressionStatement",
                  "src": "2178:52:70"
                },
                {
                  "id": 35495,
                  "nodeType": "PlaceholderStatement",
                  "src": "2237:1:70"
                }
              ]
            },
            "name": "onlyUpkeep",
            "nameLocation": "2158:10:70",
            "parameters": {
              "id": 35486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2168:2:70"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35509,
            "nodeType": "ModifierDefinition",
            "src": "2248:92:70",
            "nodes": [],
            "body": {
              "id": 35508,
              "nodeType": "Block",
              "src": "2269:71:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 35500,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2284:3:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 35501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2288:6:70",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2284:10:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 35502,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35419,
                          "src": "2298:5:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2284:19:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e657220616c6c6f776564",
                        "id": 35504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2305:20:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_723fda17fb30a6cc7e06a9af2db3699db1a079268819efeab370ce8cb87b0282",
                          "typeString": "literal_string \"Only owner allowed\""
                        },
                        "value": "Only owner allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_723fda17fb30a6cc7e06a9af2db3699db1a079268819efeab370ce8cb87b0282",
                          "typeString": "literal_string \"Only owner allowed\""
                        }
                      ],
                      "id": 35499,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2276:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2276:50:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35506,
                  "nodeType": "ExpressionStatement",
                  "src": "2276:50:70"
                },
                {
                  "id": 35507,
                  "nodeType": "PlaceholderStatement",
                  "src": "2333:1:70"
                }
              ]
            },
            "name": "onlyOwner",
            "nameLocation": "2257:9:70",
            "parameters": {
              "id": 35498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2266:2:70"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35532,
            "nodeType": "FunctionDefinition",
            "src": "2631:187:70",
            "nodes": [],
            "body": {
              "id": 35531,
              "nodeType": "Block",
              "src": "2753:65:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35527,
                        "name": "_admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35514,
                        "src": "2798:6:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35528,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35516,
                        "src": "2806:5:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 35523,
                                "name": "_account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35512,
                                "src": "2776:8:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 35522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2768:8:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 35521,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2768:8:70",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 35524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2768:17:70",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 35520,
                          "name": "Account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35397,
                          "src": "2760:7:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Account_$35397_$",
                            "typeString": "type(contract Account)"
                          }
                        },
                        "id": 35525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2760:26:70",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Account_$35397",
                          "typeString": "contract Account"
                        }
                      },
                      "id": 35526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2787:10:70",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34699,
                      "src": "2760:37:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 35529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2760:52:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35530,
                  "nodeType": "ExpressionStatement",
                  "src": "2760:52:70"
                }
              ]
            },
            "baseFunctions": [
              34084
            ],
            "documentation": {
              "id": 35510,
              "nodeType": "StructuredDocumentation",
              "src": "2531:96:70",
              "text": "@dev Called in `createAccount`. Initializes the account contract created in `createAccount`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initializeAccount",
            "nameLocation": "2640:18:70",
            "overrides": {
              "id": 35518,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2744:8:70"
            },
            "parameters": {
              "id": 35517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35512,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "2673:8:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 35532,
                  "src": "2665:16:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2665:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35514,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "2696:6:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 35532,
                  "src": "2688:14:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2688:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35516,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "2724:5:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 35532,
                  "src": "2709:20:70",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35515,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2709:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2658:76:70"
            },
            "returnParameters": {
              "id": 35519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2753:0:70"
            },
            "scope": 35827,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35546,
            "nodeType": "FunctionDefinition",
            "src": "2913:135:70",
            "nodes": [],
            "body": {
              "id": 35545,
              "nodeType": "Block",
              "src": "2989:59:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35540,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29132,
                        "src": "3011:18:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 35541,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3031:3:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 35542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3035:6:70",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3031:10:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35539,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29165,
                      "src": "3003:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 35543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3003:39:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 35538,
                  "id": 35544,
                  "nodeType": "Return",
                  "src": "2996:46:70"
                }
              ]
            },
            "baseFunctions": [
              28856
            ],
            "documentation": {
              "id": 35533,
              "nodeType": "StructuredDocumentation",
              "src": "2824:85:70",
              "text": "@dev Returns whether contract metadata can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "2922:18:70",
            "overrides": {
              "id": 35535,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2965:8:70"
            },
            "parameters": {
              "id": 35534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2940:2:70"
            },
            "returnParameters": {
              "id": 35538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35537,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35546,
                  "src": "2983:4:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 35536,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2983:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2982:6:70"
            },
            "scope": 35827,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 35559,
            "nodeType": "FunctionDefinition",
            "src": "3120:140:70",
            "nodes": [],
            "body": {
              "id": 35558,
              "nodeType": "Block",
              "src": "3230:30:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 35555,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "3244:3:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 35556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3248:6:70",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3244:10:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 35554,
                  "id": 35557,
                  "nodeType": "Return",
                  "src": "3237:17:70"
                }
              ]
            },
            "baseFunctions": [
              27737,
              29488
            ],
            "documentation": {
              "id": 35547,
              "nodeType": "StructuredDocumentation",
              "src": "3054:62:70",
              "text": "@notice Returns the sender in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "3129:10:70",
            "overrides": {
              "id": 35551,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 35549,
                  "name": "Multicall",
                  "nameLocations": [
                    "3180:9:70"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27738,
                  "src": "3180:9:70"
                },
                {
                  "id": 35550,
                  "name": "Permissions",
                  "nameLocations": [
                    "3191:11:70"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29512,
                  "src": "3191:11:70"
                }
              ],
              "src": "3171:32:70"
            },
            "parameters": {
              "id": 35548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3139:2:70"
            },
            "returnParameters": {
              "id": 35554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35553,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35559,
                  "src": "3218:7:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3218:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3217:9:70"
            },
            "scope": 35827,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35578,
            "nodeType": "FunctionDefinition",
            "src": "3842:204:70",
            "nodes": [],
            "body": {
              "id": 35577,
              "nodeType": "Block",
              "src": "3989:57:70",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 35575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 35570,
                          "name": "upkeepNeeded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35566,
                          "src": "3997:12:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 35571,
                          "name": "performData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35568,
                          "src": "4011:11:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 35572,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3996:27:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 35573,
                        "name": "_checkUpkeep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35759,
                        "src": "4026:12:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function () view returns (bool,bytes memory)"
                        }
                      },
                      "id": 35574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4026:14:70",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "3996:44:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35576,
                  "nodeType": "ExpressionStatement",
                  "src": "3996:44:70"
                }
              ]
            },
            "baseFunctions": [
              302
            ],
            "documentation": {
              "id": 35560,
              "nodeType": "StructuredDocumentation",
              "src": "3452:386:70",
              "text": " @dev checkUpkeep function called off-chain by Chainlink Automation infrastructure\n @dev Checks for balances elegible for swap\n @return upkeepNeeded A boolean indicating whether upkeep is needed.\n @return performData The performData parameter triggering the performUpkeep\n @notice This function is external, view, and implements the Upkeep interface."
            },
            "functionSelector": "6e04ff0d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "3851:11:70",
            "overrides": {
              "id": 35564,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3918:8:70"
            },
            "parameters": {
              "id": 35563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35562,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35578,
                  "src": "3869:14:70",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35561,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3869:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3862:26:70"
            },
            "returnParameters": {
              "id": 35569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35566,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nameLocation": "3946:12:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 35578,
                  "src": "3941:17:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 35565,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3941:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35568,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "3973:11:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 35578,
                  "src": "3960:24:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35567,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3960:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3940:45:70"
            },
            "scope": 35827,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35759,
            "nodeType": "FunctionDefinition",
            "src": "4052:1177:70",
            "nodes": [],
            "body": {
              "id": 35758,
              "nodeType": "Block",
              "src": "4119:1110:70",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    35589
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35589,
                      "mutability": "mutable",
                      "name": "swappableERC20",
                      "nameLocation": "4143:14:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 35758,
                      "src": "4126:31:70",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 35587,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4126:7:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 35588,
                        "nodeType": "ArrayTypeName",
                        "src": "4126:9:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35591,
                  "initialValue": {
                    "id": 35590,
                    "name": "s_swappableERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35432,
                    "src": "4160:16:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4126:50:70"
                },
                {
                  "assignments": [
                    35596
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35596,
                      "mutability": "mutable",
                      "name": "wallets",
                      "nameLocation": "4200:7:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 35758,
                      "src": "4183:24:70",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 35594,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4183:7:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 35595,
                        "nodeType": "ArrayTypeName",
                        "src": "4183:9:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35599,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 35597,
                      "name": "getAllAccounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33973,
                      "src": "4210:14:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view returns (address[] memory)"
                      }
                    },
                    "id": 35598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4210:16:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4183:43:70"
                },
                {
                  "assignments": [
                    35604
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35604,
                      "mutability": "mutable",
                      "name": "tokensToSwap",
                      "nameLocation": "4250:12:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 35758,
                      "src": "4233:29:70",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 35602,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4233:7:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 35603,
                        "nodeType": "ArrayTypeName",
                        "src": "4233:9:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35611,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 35608,
                          "name": "swappableERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35589,
                          "src": "4279:14:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 35609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4294:6:70",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "4279:21:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4265:13:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 35605,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4269:7:70",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 35606,
                        "nodeType": "ArrayTypeName",
                        "src": "4269:9:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 35610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4265:36:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4233:68:70"
                },
                {
                  "assignments": [
                    35616
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35616,
                      "mutability": "mutable",
                      "name": "filteredTokensToSwap",
                      "nameLocation": "4325:20:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 35758,
                      "src": "4308:37:70",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 35614,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4308:7:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 35615,
                        "nodeType": "ArrayTypeName",
                        "src": "4308:9:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35617,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4308:37:70"
                },
                {
                  "assignments": [
                    35619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35619,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "4357:5:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 35758,
                      "src": "4352:10:70",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 35618,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4352:4:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35620,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4352:10:70"
                },
                {
                  "body": {
                    "id": 35756,
                    "nodeType": "Block",
                    "src": "4407:817:70",
                    "statements": [
                      {
                        "body": {
                          "id": 35666,
                          "nodeType": "Block",
                          "src": "4461:161:70",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 35652,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 35647,
                                        "name": "wallets",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 35596,
                                        "src": "4512:7:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 35649,
                                      "indexExpression": {
                                        "id": 35648,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 35622,
                                        "src": "4520:1:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4512:10:70",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 35642,
                                            "name": "swappableERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 35589,
                                            "src": "4483:14:70",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 35644,
                                          "indexExpression": {
                                            "id": 35643,
                                            "name": "j",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 35632,
                                            "src": "4498:1:70",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4483:17:70",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 35641,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 27536,
                                        "src": "4476:6:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$27536_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 35645,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4476:25:70",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$27536",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 35646,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4502:9:70",
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 27493,
                                    "src": "4476:35:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 35650,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4476:47:70",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 35651,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4526:1:70",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4476:51:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 35665,
                              "nodeType": "IfStatement",
                              "src": "4472:141:70",
                              "trueBody": {
                                "id": 35664,
                                "nodeType": "Block",
                                "src": "4529:84:70",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 35659,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 35653,
                                          "name": "tokensToSwap",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 35604,
                                          "src": "4542:12:70",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 35655,
                                        "indexExpression": {
                                          "id": 35654,
                                          "name": "count",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 35619,
                                          "src": "4555:5:70",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "4542:19:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 35656,
                                          "name": "swappableERC20",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 35589,
                                          "src": "4564:14:70",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 35658,
                                        "indexExpression": {
                                          "id": 35657,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 35632,
                                          "src": "4579:1:70",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4564:17:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "4542:39:70",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 35660,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4542:39:70"
                                  },
                                  {
                                    "expression": {
                                      "id": 35662,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": true,
                                      "src": "4594:7:70",
                                      "subExpression": {
                                        "id": 35661,
                                        "name": "count",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 35619,
                                        "src": "4596:5:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 35663,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4594:7:70"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 35637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 35634,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35632,
                            "src": "4429:1:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 35635,
                              "name": "swappableERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35589,
                              "src": "4433:14:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 35636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4448:6:70",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4433:21:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4429:25:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 35667,
                        "initializationExpression": {
                          "assignments": [
                            35632
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 35632,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "4426:1:70",
                              "nodeType": "VariableDeclaration",
                              "scope": 35667,
                              "src": "4421:6:70",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 35631,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "4421:4:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 35633,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4421:6:70"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 35639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "4456:3:70",
                            "subExpression": {
                              "id": 35638,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35632,
                              "src": "4458:1:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 35640,
                          "nodeType": "ExpressionStatement",
                          "src": "4456:3:70"
                        },
                        "nodeType": "ForStatement",
                        "src": "4416:206:70"
                      },
                      {
                        "assignments": [
                          35669
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 35669,
                            "mutability": "mutable",
                            "name": "ghoTreshold",
                            "nameLocation": "4635:11:70",
                            "nodeType": "VariableDeclaration",
                            "scope": 35756,
                            "src": "4630:16:70",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 35668,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4630:4:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 35680,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 35673,
                                        "name": "wallets",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 35596,
                                        "src": "4665:7:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 35675,
                                      "indexExpression": {
                                        "id": 35674,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 35622,
                                        "src": "4673:1:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4665:10:70",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 35672,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4657:8:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_payable_$",
                                      "typeString": "type(address payable)"
                                    },
                                    "typeName": {
                                      "id": 35671,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4657:8:70",
                                      "stateMutability": "payable",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 35676,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4657:19:70",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 35670,
                                "name": "Account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35397,
                                "src": "4649:7:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Account_$35397_$",
                                  "typeString": "type(contract Account)"
                                }
                              },
                              "id": 35677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4649:28:70",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Account_$35397",
                                "typeString": "contract Account"
                              }
                            },
                            "id": 35678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4678:12:70",
                            "memberName": "ghoThreshold",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34556,
                            "src": "4649:41:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 35679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4649:43:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4630:62:70"
                      },
                      {
                        "assignments": [
                          35682
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 35682,
                            "mutability": "mutable",
                            "name": "ghoBalance",
                            "nameLocation": "4706:10:70",
                            "nodeType": "VariableDeclaration",
                            "scope": 35756,
                            "src": "4701:15:70",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 35681,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4701:4:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 35691,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 35687,
                                "name": "wallets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35596,
                                "src": "4748:7:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 35689,
                              "indexExpression": {
                                "id": 35688,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35622,
                                "src": "4756:1:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4748:10:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 35684,
                                  "name": "ghoAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35426,
                                  "src": "4726:10:70",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 35683,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27536,
                                "src": "4719:6:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$27536_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 35685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4719:18:70",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$27536",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 35686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4738:9:70",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27493,
                            "src": "4719:28:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 35690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4719:40:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4701:58:70"
                      },
                      {
                        "assignments": [
                          35693
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 35693,
                            "mutability": "mutable",
                            "name": "ghoReceived",
                            "nameLocation": "4775:11:70",
                            "nodeType": "VariableDeclaration",
                            "scope": 35756,
                            "src": "4770:16:70",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 35692,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4770:4:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 35709,
                        "initialValue": {
                          "components": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 35704,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 35696,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 35694,
                                        "name": "ghoBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 35682,
                                        "src": "4801:10:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "id": 35695,
                                        "name": "ghoTreshold",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 35669,
                                        "src": "4814:11:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4801:24:70",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 35697,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4800:26:70",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 35702,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 35700,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 35698,
                                          "name": "ghoBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 35682,
                                          "src": "4831:10:70",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "%",
                                        "rightExpression": {
                                          "hexValue": "31653138",
                                          "id": 35699,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "4844:4:70",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                            "typeString": "int_const 1000000000000000000"
                                          },
                                          "value": "1e18"
                                        },
                                        "src": "4831:17:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 35701,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4851:1:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "4831:21:70",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 35703,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4830:23:70",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "4800:53:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "hexValue": "66616c7365",
                                "id": 35706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4863:5:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "id": 35707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "4800:68:70",
                              "trueExpression": {
                                "hexValue": "74727565",
                                "id": 35705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4856:4:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 35708,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4789:88:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4770:107:70"
                      },
                      {
                        "expression": {
                          "id": 35716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 35710,
                            "name": "filteredTokensToSwap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35616,
                            "src": "4886:20:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 35714,
                                "name": "count",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35619,
                                "src": "4923:5:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 35713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "4909:13:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (address[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 35711,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4913:7:70",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 35712,
                                "nodeType": "ArrayTypeName",
                                "src": "4913:9:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                  "typeString": "address[]"
                                }
                              }
                            },
                            "id": 35715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4909:20:70",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "src": "4886:43:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 35717,
                        "nodeType": "ExpressionStatement",
                        "src": "4886:43:70"
                      },
                      {
                        "body": {
                          "id": 35735,
                          "nodeType": "Block",
                          "src": "4967:62:70",
                          "statements": [
                            {
                              "expression": {
                                "id": 35733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 35727,
                                    "name": "filteredTokensToSwap",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 35616,
                                    "src": "4978:20:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 35729,
                                  "indexExpression": {
                                    "id": 35728,
                                    "name": "k",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 35719,
                                    "src": "4999:1:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4978:23:70",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 35730,
                                    "name": "tokensToSwap",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 35604,
                                    "src": "5004:12:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 35732,
                                  "indexExpression": {
                                    "id": 35731,
                                    "name": "k",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 35719,
                                    "src": "5017:1:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5004:15:70",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4978:41:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 35734,
                              "nodeType": "ExpressionStatement",
                              "src": "4978:41:70"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 35723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 35721,
                            "name": "k",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35719,
                            "src": "4951:1:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 35722,
                            "name": "count",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35619,
                            "src": "4955:5:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4951:9:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 35736,
                        "initializationExpression": {
                          "assignments": [
                            35719
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 35719,
                              "mutability": "mutable",
                              "name": "k",
                              "nameLocation": "4948:1:70",
                              "nodeType": "VariableDeclaration",
                              "scope": 35736,
                              "src": "4943:6:70",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 35718,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "4943:4:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 35720,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4943:6:70"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 35725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "4962:3:70",
                            "subExpression": {
                              "id": 35724,
                              "name": "k",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35719,
                              "src": "4964:1:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 35726,
                          "nodeType": "ExpressionStatement",
                          "src": "4962:3:70"
                        },
                        "nodeType": "ForStatement",
                        "src": "4938:91:70"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 35742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 35740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 35737,
                                "name": "filteredTokensToSwap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35616,
                                "src": "5043:20:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 35738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5064:6:70",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "5043:27:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 35739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5073:1:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5043:31:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "id": 35741,
                            "name": "ghoReceived",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35693,
                            "src": "5078:11:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5043:46:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 35755,
                        "nodeType": "IfStatement",
                        "src": "5039:178:70",
                        "trueBody": {
                          "id": 35754,
                          "nodeType": "Block",
                          "src": "5091:126:70",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "74727565",
                                    "id": 35743,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5122:4:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 35746,
                                          "name": "wallets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 35596,
                                          "src": "5150:7:70",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 35748,
                                        "indexExpression": {
                                          "id": 35747,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 35622,
                                          "src": "5158:1:70",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5150:10:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 35749,
                                        "name": "filteredTokensToSwap",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 35616,
                                        "src": "5162:20:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      {
                                        "id": 35750,
                                        "name": "ghoReceived",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 35693,
                                        "src": "5184:11:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "expression": {
                                        "id": 35744,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "5139:3:70",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 35745,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "5143:6:70",
                                      "memberName": "encode",
                                      "nodeType": "MemberAccess",
                                      "src": "5139:10:70",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 35751,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5139:57:70",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "id": 35752,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5109:98:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "functionReturnParameters": 35584,
                              "id": 35753,
                              "nodeType": "Return",
                              "src": "5102:105:70"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 35627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 35624,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35622,
                      "src": "4382:1:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 35625,
                        "name": "wallets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35596,
                        "src": "4386:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 35626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4394:6:70",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4386:14:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4382:18:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35757,
                  "initializationExpression": {
                    "assignments": [
                      35622
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 35622,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4379:1:70",
                        "nodeType": "VariableDeclaration",
                        "scope": 35757,
                        "src": "4374:6:70",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 35621,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4374:4:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 35623,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4374:6:70"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 35629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "4402:3:70",
                      "subExpression": {
                        "id": 35628,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35622,
                        "src": "4404:1:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 35630,
                    "nodeType": "ExpressionStatement",
                    "src": "4402:3:70"
                  },
                  "nodeType": "ForStatement",
                  "src": "4369:855:70"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkUpkeep",
            "nameLocation": "4061:12:70",
            "parameters": {
              "id": 35579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4073:2:70"
            },
            "returnParameters": {
              "id": 35584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35581,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35759,
                  "src": "4099:4:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 35580,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4099:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35583,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35759,
                  "src": "4105:12:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35582,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4105:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4098:20:70"
            },
            "scope": 35827,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35826,
            "nodeType": "FunctionDefinition",
            "src": "5445:476:70",
            "nodes": [],
            "body": {
              "id": 35825,
              "nodeType": "Block",
              "src": "5566:355:70",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    35770,
                    35773,
                    35775
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35770,
                      "mutability": "mutable",
                      "name": "wallet",
                      "nameLocation": "5582:6:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 35825,
                      "src": "5574:14:70",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 35769,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5574:7:70",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 35773,
                      "mutability": "mutable",
                      "name": "tokensToSwap",
                      "nameLocation": "5607:12:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 35825,
                      "src": "5590:29:70",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 35771,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5590:7:70",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 35772,
                        "nodeType": "ArrayTypeName",
                        "src": "5590:9:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 35775,
                      "mutability": "mutable",
                      "name": "ghoReceived",
                      "nameLocation": "5626:11:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 35825,
                      "src": "5621:16:70",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 35774,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5621:4:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35788,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 35778,
                        "name": "performData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35762,
                        "src": "5660:11:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 35780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5674:7:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 35779,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5674:7:70",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 35782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5683:7:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 35781,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5683:7:70",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 35783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5683:9:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "type(address[] memory)"
                            }
                          },
                          {
                            "id": 35785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5694:4:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bool_$",
                              "typeString": "type(bool)"
                            },
                            "typeName": {
                              "id": 35784,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5694:4:70",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 35786,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5673:26:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_bool_$_$",
                          "typeString": "tuple(type(address),type(address[] memory),type(bool))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_bool_$_$",
                          "typeString": "tuple(type(address),type(address[] memory),type(bool))"
                        }
                      ],
                      "expression": {
                        "id": 35776,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5641:3:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 35777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5653:6:70",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "5641:18:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 35787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5641:59:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_array$_t_address_$dyn_memory_ptr_$_t_bool_$",
                      "typeString": "tuple(address payable,address[] memory,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5573:127:70"
                },
                {
                  "body": {
                    "id": 35811,
                    "nodeType": "Block",
                    "src": "5750:79:70",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 35806,
                                "name": "tokensToSwap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35773,
                                "src": "5805:12:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 35808,
                              "indexExpression": {
                                "id": 35807,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35790,
                                "src": "5818:1:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5805:15:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 35802,
                                      "name": "wallet",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 35770,
                                      "src": "5775:6:70",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 35801,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5767:8:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_payable_$",
                                      "typeString": "type(address payable)"
                                    },
                                    "typeName": {
                                      "id": 35800,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5767:8:70",
                                      "stateMutability": "payable",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 35803,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5767:15:70",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 35799,
                                "name": "Account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35397,
                                "src": "5759:7:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Account_$35397_$",
                                  "typeString": "type(contract Account)"
                                }
                              },
                              "id": 35804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5759:24:70",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Account_$35397",
                                "typeString": "contract Account"
                              }
                            },
                            "id": 35805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5784:20:70",
                            "memberName": "executeSwapAndSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35123,
                            "src": "5759:45:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 35809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5759:62:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35810,
                        "nodeType": "ExpressionStatement",
                        "src": "5759:62:70"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 35795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 35792,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35790,
                      "src": "5720:1:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 35793,
                        "name": "tokensToSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35773,
                        "src": "5724:12:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 35794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5737:6:70",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5724:19:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5720:23:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35812,
                  "initializationExpression": {
                    "assignments": [
                      35790
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 35790,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5717:1:70",
                        "nodeType": "VariableDeclaration",
                        "scope": 35812,
                        "src": "5712:6:70",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 35789,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5712:4:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 35791,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5712:6:70"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 35797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "5745:3:70",
                      "subExpression": {
                        "id": 35796,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35790,
                        "src": "5747:1:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 35798,
                    "nodeType": "ExpressionStatement",
                    "src": "5745:3:70"
                  },
                  "nodeType": "ForStatement",
                  "src": "5707:122:70"
                },
                {
                  "condition": {
                    "id": 35813,
                    "name": "ghoReceived",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35775,
                    "src": "5839:11:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35824,
                  "nodeType": "IfStatement",
                  "src": "5835:81:70",
                  "trueBody": {
                    "id": 35823,
                    "nodeType": "Block",
                    "src": "5852:64:70",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 35817,
                                      "name": "wallet",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 35770,
                                      "src": "5877:6:70",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 35816,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5869:8:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_payable_$",
                                      "typeString": "type(address payable)"
                                    },
                                    "typeName": {
                                      "id": 35815,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5869:8:70",
                                      "stateMutability": "payable",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 35818,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5869:15:70",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 35814,
                                "name": "Account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 35397,
                                "src": "5861:7:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Account_$35397_$",
                                  "typeString": "type(contract Account)"
                                }
                              },
                              "id": 35819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5861:24:70",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Account_$35397",
                                "typeString": "contract Account"
                              }
                            },
                            "id": 35820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5886:20:70",
                            "memberName": "executeSupplyToVault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35178,
                            "src": "5861:45:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 35821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5861:47:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35822,
                        "nodeType": "ExpressionStatement",
                        "src": "5861:47:70"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              308
            ],
            "documentation": {
              "id": 35760,
              "nodeType": "StructuredDocumentation",
              "src": "5235:206:70",
              "text": " @dev performUpkeep function called by Chainlink Automation infrastructure after checkUpkeep checks\n @param performData the data inputed by Chainlink Automation retrieved by checkUpkeep"
            },
            "functionSelector": "4585e33b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 35767,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 35766,
                  "name": "onlyUpkeep",
                  "nameLocations": [
                    "5555:10:70"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35497,
                  "src": "5555:10:70"
                },
                "nodeType": "ModifierInvocation",
                "src": "5555:10:70"
              }
            ],
            "name": "performUpkeep",
            "nameLocation": "5454:13:70",
            "overrides": {
              "id": 35765,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 35764,
                  "name": "AutomationCompatibleInterface",
                  "nameLocations": [
                    "5524:29:70"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 309,
                  "src": "5524:29:70"
                }
              ],
              "src": "5515:39:70"
            },
            "parameters": {
              "id": 35763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35762,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "5489:11:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 35826,
                  "src": "5474:26:70",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35761,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5474:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5467:38:70"
            },
            "returnParameters": {
              "id": 35768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5566:0:70"
            },
            "scope": 35827,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 35410,
              "name": "BaseAccountFactory",
              "nameLocations": [
                "881:18:70"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34085,
              "src": "881:18:70"
            },
            "id": 35411,
            "nodeType": "InheritanceSpecifier",
            "src": "881:18:70"
          },
          {
            "baseName": {
              "id": 35412,
              "name": "ContractMetadata",
              "nameLocations": [
                "904:16:70"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28857,
              "src": "904:16:70"
            },
            "id": 35413,
            "nodeType": "InheritanceSpecifier",
            "src": "904:16:70"
          },
          {
            "baseName": {
              "id": 35414,
              "name": "PermissionsEnumerable",
              "nameLocations": [
                "925:21:70"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29891,
              "src": "925:21:70"
            },
            "id": 35415,
            "nodeType": "InheritanceSpecifier",
            "src": "925:21:70"
          },
          {
            "baseName": {
              "id": 35416,
              "name": "AutomationCompatible",
              "nameLocations": [
                "951:20:70"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 290,
              "src": "951:20:70"
            },
            "id": 35417,
            "nodeType": "InheritanceSpecifier",
            "src": "951:20:70"
          }
        ],
        "canonicalName": "AccountFactory",
        "contractDependencies": [
          35397
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          35827,
          290,
          309,
          281,
          29891,
          29512,
          28006,
          27981,
          28857,
          27894,
          34085,
          27738,
          27908,
          31949,
          32015
        ],
        "name": "AccountFactory",
        "nameLocation": "860:14:70",
        "scope": 35828,
        "usedErrors": [
          255
        ],
        "usedEvents": [
          27893,
          27920,
          27929,
          27938,
          31958,
          31965,
          31972
        ]
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 70
}