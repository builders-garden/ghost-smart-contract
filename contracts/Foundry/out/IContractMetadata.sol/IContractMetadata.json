{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "contractURI()": "e8a3d485",
    "setContractURI(string)": "938e3d7b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"}},\"kind\":\"dev\",\"methods\":{\"contractURI()\":{\"details\":\"Returns the metadata URI of the contract.\"},\"setContractURI(string)\":{\"details\":\"Sets contract URI for the storefront-level metadata of the contract.       Only module admin can call this function.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI  for you contract.  Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/thirdweb-smartaccount/extension/interface/IContractMetadata.sol\":\"IContractMetadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ccip/=lib/ccip/contracts/\",\":@chainlink/=lib/chainlink/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@thirdweb/=lib/thirdweb-smartaccount/\",\":ccip/=lib/ccip/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":std/=lib/forge-std/src/\",\":thirdweb-smartaccount/=lib/thirdweb-smartaccount/\"]},\"sources\":{\"lib/thirdweb-smartaccount/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x9e5b2dd3d87d493e66da9f5d89292913b188a23ac2c4b92f071187aa19b1fe45\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d4835ef2e1e976d4c99922e439e420d005cbc28a038d3ffca2e2816dd9b6d6c8\",\"dweb:/ipfs/QmdfC32QKG45P1fMTfZzQtcue4gXsWLgKddWZ3KBRc6Dsv\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "contractURI()": {
            "details": "Returns the metadata URI of the contract."
          },
          "setContractURI(string)": {
            "details": "Sets contract URI for the storefront-level metadata of the contract.       Only module admin can call this function."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ccip/=lib/ccip/contracts/",
        ":@chainlink/=lib/chainlink/contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@thirdweb/=lib/thirdweb-smartaccount/",
        ":ccip/=lib/ccip/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/",
        ":chainlink/=lib/chainlink/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":std/=lib/forge-std/src/",
        ":thirdweb-smartaccount/=lib/thirdweb-smartaccount/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/thirdweb-smartaccount/extension/interface/IContractMetadata.sol": "IContractMetadata"
      },
      "libraries": {}
    },
    "sources": {
      "lib/thirdweb-smartaccount/extension/interface/IContractMetadata.sol": {
        "keccak256": "0x9e5b2dd3d87d493e66da9f5d89292913b188a23ac2c4b92f071187aa19b1fe45",
        "urls": [
          "bzz-raw://d4835ef2e1e976d4c99922e439e420d005cbc28a038d3ffca2e2816dd9b6d6c8",
          "dweb:/ipfs/QmdfC32QKG45P1fMTfZzQtcue4gXsWLgKddWZ3KBRc6Dsv"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/thirdweb-smartaccount/extension/interface/IContractMetadata.sol",
    "id": 29784,
    "exportedSymbols": {
      "IContractMetadata": [
        29783
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:821:39",
    "nodes": [
      {
        "id": 29762,
        "nodeType": "PragmaDirective",
        "src": "40:23:39",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 29783,
        "nodeType": "ContractDefinition",
        "src": "364:495:39",
        "nodes": [
          {
            "id": 29769,
            "nodeType": "FunctionDefinition",
            "src": "455:61:39",
            "nodes": [],
            "documentation": {
              "id": 29764,
              "nodeType": "StructuredDocumentation",
              "src": "399:50:39",
              "text": "@dev Returns the metadata URI of the contract."
            },
            "functionSelector": "e8a3d485",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "contractURI",
            "nameLocation": "464:11:39",
            "parameters": {
              "id": 29765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:2:39"
            },
            "returnParameters": {
              "id": 29768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29767,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29769,
                  "src": "501:13:39",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29766,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "501:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "500:15:39"
            },
            "scope": 29783,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29775,
            "nodeType": "FunctionDefinition",
            "src": "681:55:39",
            "nodes": [],
            "documentation": {
              "id": 29770,
              "nodeType": "StructuredDocumentation",
              "src": "524:151:39",
              "text": "  @dev Sets contract URI for the storefront-level metadata of the contract.\n       Only module admin can call this function."
            },
            "functionSelector": "938e3d7b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setContractURI",
            "nameLocation": "690:14:39",
            "parameters": {
              "id": 29773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29772,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "721:4:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 29775,
                  "src": "705:20:39",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29771,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "705:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "704:22:39"
            },
            "returnParameters": {
              "id": 29774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "735:0:39"
            },
            "scope": 29783,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29782,
            "nodeType": "EventDefinition",
            "src": "800:56:39",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 29776,
              "nodeType": "StructuredDocumentation",
              "src": "744:50:39",
              "text": "@dev Emitted when the contract URI is updated."
            },
            "eventSelector": "c9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16",
            "name": "ContractURIUpdated",
            "nameLocation": "806:18:39",
            "parameters": {
              "id": 29781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29778,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "prevURI",
                  "nameLocation": "832:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 29782,
                  "src": "825:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29777,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29780,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newURI",
                  "nameLocation": "848:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 29782,
                  "src": "841:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29779,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "841:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "824:31:39"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IContractMetadata",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 29763,
          "nodeType": "StructuredDocumentation",
          "src": "91:269:39",
          "text": "  Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI\n  for you contract.\n  Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          29783
        ],
        "name": "IContractMetadata",
        "nameLocation": "374:17:39",
        "scope": 29784,
        "usedErrors": [],
        "usedEvents": [
          29782
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 39
}